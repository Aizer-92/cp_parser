#!/usr/bin/env python3
"""
Telegram Automation Setup Guide
–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Telegram
"""

import json
import os
from datetime import datetime

def print_header():
    """–í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print("=" * 60)
    print("ü§ñ TELEGRAM AUTOMATION SETUP GUIDE")
    print("=" * 60)
    print()

def print_section(title):
    """–í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏"""
    print(f"\nüìã {title}")
    print("-" * 40)

def setup_bot_automation():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞"""
    print_section("–ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM BOT")
    
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞:")
    print("   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram")
    print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot")
    print("   ‚Ä¢ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
    print()
    
    print("2. –ü–æ–ª—É—á–µ–Ω–∏–µ Chat ID:")
    print("   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç")
    print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates")
    print("   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ 'chat' -> 'id' –≤ –æ—Ç–≤–µ—Ç–µ")
    print()
    
    print("3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    config = {
        "bot_token": "YOUR_BOT_TOKEN_HERE",
        "chat_id": "YOUR_CHAT_ID_HERE",
        "admin_users": ["YOUR_USER_ID_HERE"],
        "settings": {
            "auto_reply": True,
            "daily_notifications": True,
            "monitoring_enabled": True,
            "max_messages_per_hour": 20
        },
        "notifications": {
            "morning_time": "09:00",
            "evening_time": "21:00",
            "timezone": "Europe/Moscow"
        },
        "auto_replies": {
            "hello": "–ü—Ä–∏–≤–µ—Ç! –Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç.",
            "help": "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å\n/help - –ü–æ–º–æ—â—å\n/status - –°—Ç–∞—Ç—É—Å"
        }
    }
    
    print("   –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config/bot_config.json:")
    print(json.dumps(config, indent=2, ensure_ascii=False))
    print()

def setup_user_automation():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    print_section("–ù–ê–°–¢–†–û–ô–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê")
    
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∞—Ç—å ToS Telegram!")
    print("   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Ü–µ–ª–µ–π –∏ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é.")
    print()
    
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–µ–π:")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://my.telegram.org")
    print("   ‚Ä¢ –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Telegram")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'API development tools'")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ API ID –∏ API Hash")
    print()
    
    print("2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    config = {
        "api_id": "YOUR_API_ID_HERE",
        "api_hash": "YOUR_API_HASH_HERE",
        "phone": "YOUR_PHONE_NUMBER_HERE",
        "session_name": "my_account",
        "settings": {
            "auto_reply": False,
            "monitoring_enabled": True,
            "max_actions_per_hour": 10,
            "delay_between_actions": 5
        },
        "monitoring": {
            "target_chats": ["CHAT_ID_1", "CHAT_ID_2"],
            "keywords": ["–≤–∞–∂–Ω–æ", "—Å—Ä–æ—á–Ω–æ", "–≤–Ω–∏–º–∞–Ω–∏–µ"]
        },
        "automation": {
            "auto_archive": True,
            "auto_mute": False,
            "save_media": True
        },
        "safety": {
            "max_messages_per_day": 50,
            "cooldown_minutes": 30,
            "emergency_stop": False
        }
    }
    
    print("   –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config/user_config.json:")
    print(json.dumps(config, indent=2, ensure_ascii=False))
    print()

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print_section("–ù–ê–°–¢–†–û–ô–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø")
    
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    print("   pip install -r requirements.txt")
    print()
    
    print("2. –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞:")
    env_content = """# Telegram Bot Configuration
BOT_TOKEN=your_bot_token_here
CHAT_ID=your_chat_id_here

# Telegram User Account Configuration
API_ID=your_api_id_here
API_HASH=your_api_hash_here
PHONE=your_phone_number_here

# Safety Settings
MAX_MESSAGES_PER_DAY=50
COOLDOWN_MINUTES=30
"""
    print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:")
    print(env_content)
    print()

def create_example_scripts():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–∫—Ä–∏–ø—Ç–æ–≤"""
    print_section("–ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø")
    
    # –ü—Ä–∏–º–µ—Ä –¥–ª—è –±–æ—Ç–∞
    bot_example = '''# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
import asyncio
from scripts.bot_automation import TelegramBotAutomation

async def example():
    bot = TelegramBotAutomation()
    await bot.send_notification("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    await bot.stop()

asyncio.run(example())
'''
    
    print("1. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:")
    print(bot_example)
    
    # –ü—Ä–∏–º–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    user_example = '''# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
import asyncio
from scripts.user_automation import TelegramUserAutomation

async def example():
    automation = TelegramUserAutomation()
    if await automation.connect():
        await automation.send_message("chat_id", "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        await automation.client.disconnect()

asyncio.run(example())
'''
    
    print("2. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:")
    print(user_example)

def safety_guidelines():
    """–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print_section("–†–£–ö–û–í–û–î–°–¢–í–û –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    
    guidelines = [
        "üîí –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å API –∫–ª—é—á–∞–º–∏",
        "‚è∞ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ª–∏–º–∏—Ç—ã –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π",
        "üõë –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏",
        "üìä –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
        "üö´ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —Å–ø–∞–º–∞ –∏–ª–∏ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏",
        "üîÑ –î–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤—ã –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏",
        "üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "üíæ –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
    ]
    
    for guideline in guidelines:
        print(f"   {guideline}")
    print()

def troubleshooting():
    """–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"""
    print_section("–†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú")
    
    problems = {
        "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏": [
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API ID –∏ API Hash",
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∫–∞–∑–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        ],
        "FloodWaitError": [
            "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ - —É–≤–µ–ª–∏—á—å—Ç–µ –∑–∞–¥–µ—Ä–∂–∫–∏",
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É"
        ],
        "–ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç": [
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞",
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç",
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ"
        ],
        "–û—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è": [
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ",
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Telegram –¥–æ—Å—Ç—É–ø–µ–Ω",
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VPN"
        ]
    }
    
    for problem, solutions in problems.items():
        print(f"‚ùì {problem}:")
        for solution in solutions:
            print(f"   ‚Ä¢ {solution}")
        print()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_header()
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:")
    print("1. Telegram Bot (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–∫–∫–∞—É–Ω—Ç (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)")
    print("3. –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ")
    print("4. –í—ã—Ö–æ–¥")
    
    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            setup_bot_automation()
            break
        elif choice == "2":
            setup_user_automation()
            break
        elif choice == "3":
            setup_bot_automation()
            setup_user_automation()
            setup_environment()
            create_example_scripts()
            safety_guidelines()
            troubleshooting()
            break
        elif choice == "4":
            print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    
    print("\n" + "=" * 60)
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ README.md")
    print("üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main()
