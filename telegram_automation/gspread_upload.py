#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ó–∞–≥—Ä—É–∑–∫–∞ CSV —Ñ–∞–π–ª–æ–≤ –≤ Google Sheets —á–µ—Ä–µ–∑ gspread
"""

import os
import sys
import logging
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

class GSpreadUploader:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets —á–µ—Ä–µ–∑ gspread"""
    
    def __init__(self, credentials_file: str = "../google_sheets_connector/credentials/service_account.json"):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        
        Args:
            credentials_file: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
        """
        self.credentials_file = credentials_file
        self.client = None
        self._authenticate()
    
    def _authenticate(self):
        """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç"""
        try:
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–ª–∞—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞
            scope = [
                'https://spreadsheets.google.com/feeds',
                'https://www.googleapis.com/auth/drive'
            ]
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            credentials = Credentials.from_service_account_file(
                self.credentials_file, 
                scopes=scope
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
            self.client = gspread.authorize(credentials)
            logger.info("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Google Sheets API —É—Å–ø–µ—à–Ω–∞")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
            raise
    
    def upload_csv_to_sheet(self, csv_file: str, spreadsheet_id: str, sheet_name: str) -> bool:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç CSV —Ñ–∞–π–ª –≤ Google Sheets
        
        Args:
            csv_file: –ü—É—Ç—å –∫ CSV —Ñ–∞–π–ª—É
            spreadsheet_id: ID Google —Ç–∞–±–ª–∏—Ü—ã
            sheet_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
            
        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ
        """
        try:
            logger.info(f"üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ {csv_file} –≤ –ª–∏—Å—Ç '{sheet_name}'...")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            spreadsheet = self.client.open_by_key(spreadsheet_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
            try:
                worksheet = spreadsheet.worksheet(sheet_name)
                logger.info(f"üßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ª–∏—Å—Ç–∞ '{sheet_name}'")
                worksheet.clear()
            except gspread.WorksheetNotFound:
                logger.info(f"üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–∏—Å—Ç–∞ '{sheet_name}'")
                worksheet = spreadsheet.add_worksheet(title=sheet_name, rows=1000, cols=20)
            
            # –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
            df = pd.read_csv(csv_file, encoding='utf-8-sig')
            logger.info(f"üìä –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ –∏–∑ CSV —Ñ–∞–π–ª–∞")
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            data = [df.columns.tolist()] + df.values.tolist()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            worksheet.update('A1', data)
            logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ª–∏—Å—Ç '{sheet_name}'")
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            self._format_headers(worksheet, len(df.columns))
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
            return False
    
    def _format_headers(self, worksheet, num_columns: int):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã"""
        try:
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç, —Ñ–æ–Ω)
            worksheet.format('A1:{}1'.format(chr(65 + num_columns - 1)), {
                'backgroundColor': {
                    'red': 0.2,
                    'green': 0.4,
                    'blue': 0.6
                },
                'textFormat': {
                    'bold': True,
                    'foregroundColor': {
                        'red': 1.0,
                        'green': 1.0,
                        'blue': 1.0
                    }
                },
                'horizontalAlignment': 'CENTER'
            })
            logger.info("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã")
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
        spreadsheet_id = "1qcWRIw1sGqrzfVGPBylKF0hubeczmIWQ9uVbmLQpYKs"
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫
        uploader = GSpreadUploader()
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        files_to_upload = [
            ("temp_–ï–¥–∏–Ω—ã–π_—Å–ø–∏—Å–æ–∫_–∑–∞–¥–∞—á.csv", "–ï–¥–∏–Ω—ã–π_—Å–ø–∏—Å–æ–∫_–∑–∞–¥–∞—á_–ò—é–ª—å_–ê–≤–≥—É—Å—Ç_2025"),
            ("temp_–°–≤–æ–¥–∫–∞.csv", "–°–≤–æ–¥–∫–∞_–ò—é–ª—å_–ê–≤–≥—É—Å—Ç_2025"),
            ("temp_–ü–æ_—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º.csv", "–ü–æ_—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º_–ò—é–ª—å_–ê–≤–≥—É—Å—Ç_2025")
        ]
        
        success_count = 0
        
        for csv_file, sheet_name in files_to_upload:
            if os.path.exists(csv_file):
                success = uploader.upload_csv_to_sheet(csv_file, spreadsheet_id, sheet_name)
                if success:
                    success_count += 1
                    logger.info(f"‚úÖ {csv_file} -> {sheet_name}")
                else:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {csv_file}")
            else:
                logger.error(f"‚ùå –§–∞–π–ª {csv_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        if success_count > 0:
            logger.info(f"üéâ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {success_count} –∏–∑ {len(files_to_upload)} —Ñ–∞–π–ª–æ–≤!")
            logger.info(f"üìä –°—Å—ã–ª–∫–∞: https://docs.google.com/spreadsheets/d/{spreadsheet_id}/edit")
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")
        
        return success_count > 0
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
