#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏ –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞
"""

import requests
import time

def test_final_morphology():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏ —á–µ—Ä–µ–∑ API"""
    
    base_url = "http://localhost:8003"
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(3)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä—ã —Å–ª–æ–≤ (—Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞)
    test_pairs = [
        ("—Ç–∞–±–ª–µ—Ç–Ω–∏—Ü–∞", "—Ç–∞–±–ª–µ—Ç–Ω–∏—Ü—ã"),
        ("—Ç–µ–ª–µ—Ñ–æ–Ω", "—Ç–µ–ª–µ—Ñ–æ–Ω–∞"),
        ("–ø–ª–∞—Ç—å–µ", "–ø–ª–∞—Ç—å—è"),
        ("—á–∞—Å—ã", "—á–∞—Å–æ–≤")
    ]
    
    print("üîç –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...")
    
    for word1, word2 in test_pairs:
        try:
            print(f"\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: '{word1}' vs '{word2}'")
            
            # –¢–µ—Å—Ç –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ–≤–∞
            response1 = requests.get(f"{base_url}/api/products", params={
                "search": word1,
                "limit": 5
            }, timeout=10)
            
            # –¢–µ—Å—Ç –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞
            response2 = requests.get(f"{base_url}/api/products", params={
                "search": word2,
                "limit": 5
            }, timeout=10)
            
            if response1.status_code == 200 and response2.status_code == 200:
                data1 = response1.json()
                data2 = response2.json()
                
                count1 = data1['total_count']
                count2 = data2['total_count']
                
                print(f"  '{word1}': {count1} —Ç–æ–≤–∞—Ä–æ–≤")
                print(f"  '{word2}': {count2} —Ç–æ–≤–∞—Ä–æ–≤")
                
                if count1 == count2:
                    print(f"  ‚úÖ –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                else:
                    print(f"  ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–µ–π! –†–∞–∑–Ω–∏—Ü–∞: {abs(count1 - count2)}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                if data1['products']:
                    print(f"  üì¶ –¢–æ–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è '{word1}':")
                    for i, product in enumerate(data1['products'][:3], 1):
                        print(f"    {i}. {product['title'][:50]}...")
                
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ API: {response1.status_code} / {response2.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        except Exception as e:
            print(f"  ‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    print(f"\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    try:
        response = requests.get(f"{base_url}/?search=—Ç–∞–±–ª–µ—Ç–Ω–∏—Ü–∞", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            if "—Ç–∞–±–ª–µ—Ç–Ω–∏—Ü–∞" in response.text.lower():
                print("‚úÖ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
            else:
                print("‚ùå –ü–æ–∏—Å–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
        else:
            print(f"‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {e}")

if __name__ == "__main__":
    test_final_morphology()
