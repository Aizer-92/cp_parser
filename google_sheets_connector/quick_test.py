"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
"""

from connector import GoogleSheetsConnector
import pandas as pd

def main():
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä
    sheets = GoogleSheetsConnector()
    
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    if not sheets.authenticate_service_account("credentials/service_account.json"):
        print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        return
    
    print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # ID —Ç–∞–±–ª–∏—Ü—ã
    spreadsheet_id = "1Xxx_cNb5eOi0CzRhr1X3mWwYWyltmZu_uI_02B9EfcE"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
        info = sheets.get_spreadsheet_info(spreadsheet_id)
        print(f"üìä –¢–∞–±–ª–∏—Ü–∞: {info['title']}")
        
        # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Å—Ç–∞
        sheet_name = "–õ–∏—Å—Ç1"
        print(f"üìñ –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –ª–∏—Å—Ç–∞ '{sheet_name}'...")
        
        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫
        data = sheets.read_range(spreadsheet_id, f"{sheet_name}!A1:M10")
        
        if data:
            print(f"‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(data)} —Å—Ç—Ä–æ–∫")
            print("\nüìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:")
            if len(data) > 0:
                headers = data[0]
                for i, header in enumerate(headers):
                    print(f"   {chr(65+i)}: {header}")
            
            print("\nüìä –û–±—Ä–∞–∑–µ—Ü –¥–∞–Ω–Ω—ã—Ö:")
            if len(data) > 1:
                for i, row in enumerate(data[1:4], 2):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ 2-4
                    print(f"   –°—Ç—Ä–æ–∫–∞ {i}: {row[0][:50]}...")  # –¢–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        
        # –ß–∏—Ç–∞–µ–º –≤ DataFrame
        print("\nüìà –ß—Ç–µ–Ω–∏–µ –≤ DataFrame...")
        df = sheets.read_to_dataframe(spreadsheet_id, f"{sheet_name}!A1:M100", header_row=True)
        
        if not df.empty:
            print(f"‚úÖ DataFrame —Å–æ–∑–¥–∞–Ω: {df.shape[0]} —Å—Ç—Ä–æ–∫ √ó {df.shape[1]} –∫–æ–ª–æ–Ω–æ–∫")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
            if '–°—Ç–∞—Ç—É—Å' in df.columns:
                print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
                status_counts = df['–°—Ç–∞—Ç—É—Å'].value_counts().head(5)
                for status, count in status_counts.items():
                    print(f"   ‚Ä¢ {status}: {count}")
        
        print("\nüéâ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
