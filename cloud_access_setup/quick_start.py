#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–ª–∞—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python quick_start.py
"""

import os
import sys
import subprocess
from pathlib import Path

def print_step(step, description):
    """–í—ã–≤–æ–¥–∏—Ç —à–∞–≥ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"\n{'='*50}")
    print(f"üîÑ –®–∞–≥ {step}: {description}")
    print(f"{'='*50}")

def run_command(command, description=""):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üíª –í—ã–ø–æ–ª–Ω—è—é: {command}")
    if description:
        print(f"üìù {description}")
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
            if result.stdout:
                print(f"üì§ –í—ã–≤–æ–¥: {result.stdout.strip()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
        return True
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def check_git_installed():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ git"""
    return run_command("git --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git")

def check_python_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    requirements_file = Path(__file__).parent / "requirements.txt"
    if requirements_file.exists():
        print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
        return run_command(f"pip install -r {requirements_file}", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    return True

def setup_git_repository():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    project_root = Path(__file__).parent.parent.parent
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if (project_root / ".git").exists():
        print("‚ÑπÔ∏è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º git
    if not run_command(f"cd {project_root} && git init", "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"):
        return False
    
    # –°–æ–∑–¥–∞–µ–º .gitignore
    gitignore_content = """# –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
venv/
.venv/
env/
.env/

# –ö—ç—à Python
__pycache__/
*.pyc
*.pyo
*.pyd

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
temp/
tmp/
*.tmp
*.temp

# –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
*.json
credentials/
config.json
personal_account.session
.env
.env.local

# –õ–æ–≥–∏
*.log
logs/
log/

# –í—ã—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã
output/
*.xlsx
*.png
*.jpg
*.jpeg
*.pdf

# –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
.DS_Store
Thumbs.db
desktop.ini

# IDE —Ñ–∞–π–ª—ã
.vscode/
.idea/
*.swp
*.swo

# –ê—Ä—Ö–∏–≤—ã
*.tar.gz
*.zip
*.rar

# –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
*.db
*.sqlite
*.sqlite3
"""
    
    gitignore_path = project_root / ".gitignore"
    with open(gitignore_path, 'w', encoding='utf-8') as f:
        f.write(gitignore_content)
    print("‚úÖ –°–æ–∑–¥–∞–Ω .gitignore —Ñ–∞–π–ª")
    
    return True

def create_initial_commit():
    """–°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç"""
    project_root = Path(__file__).parent.parent.parent
    
    commands = [
        f"cd {project_root} && git add .",
        f"cd {project_root} && git commit -m 'Initial commit: Personal projects setup'"
    ]
    
    for cmd in commands:
        if not run_command(cmd, "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞"):
            return False
    
    return True

def show_next_steps():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"""
    print(f"\n{'='*50}")
    print("üéâ –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"{'='*50}")
    
    print("""
üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

1. üåê –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ GitHub:
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com
   - –ù–∞–∂–º–∏—Ç–µ "Sign up" –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç

2. üìÅ –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub:
   - –ù–∞–∂–º–∏—Ç–µ "+" ‚Üí "New repository"
   - –ù–∞–∑–≤–∞–Ω–∏–µ: reshad-personal-projects
   - –í—ã–±–µ—Ä–∏—Ç–µ Public –∏–ª–∏ Private
   - –ù–ï —Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫–∏ –Ω–∞ README, .gitignore, license

3. üîó –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫ GitHub:
   ```bash
   cd /Users/bakirovresad/Downloads/Reshad
   git remote add origin https://github.com/YOUR_USERNAME/reshad-personal-projects.git
   git push -u origin main
   ```

4. üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GitHub app –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω:
   - iOS: https://apps.apple.com/app/github/id1477376905
   - Android: https://play.google.com/store/apps/details?id=com.github.android

5. ‚òÅÔ∏è –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Google Drive:
   - –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ SETUP_GUIDE.md
   - –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python google_drive_sync.py

üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: projects/cloud_access_setup/SETUP_GUIDE.md
""")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–ª–∞—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    print_step(1, "–ü—Ä–æ–≤–µ—Ä–∫–∞ Git")
    if not check_git_installed():
        print("‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.")
        return
    
    # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_step(2, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    if not check_python_dependencies():
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return
    
    # –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    print_step(3, "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
    if not setup_git_repository():
        print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        return
    
    # –®–∞–≥ 4: –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
    print_step(4, "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞")
    if not create_initial_commit():
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    show_next_steps()

if __name__ == "__main__":
    main()
