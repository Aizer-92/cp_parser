#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ –¢–û–õ–¨–ö–û 847 –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫, –ø–æ—Ç–æ–º –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∏—Ö
"""

from pathlib import Path
from ftplib import FTP_TLS
import time
import json

print("=" * 80)
print("üöÄ –ó–ê–ì–†–£–ó–ö–ê –¢–û–õ–¨–ö–û –ù–ï–î–û–°–¢–ê–Æ–©–ò–• 847 –§–ê–ô–õ–û–í")
print("=" * 80)

# FTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
FTP_HOST = "ftp.ru1.storage.beget.cloud"
FTP_USER = "RECD00AQJIM4300MLJ0W"
FTP_PASS = "FIucJ3i9iIWZ5ieJvabvI0OxEn2Yv4gG5XRUeSNf"
FTP_DIR = "/73d16f7545b3-promogoods/images"

missing_list_file = Path("missing_files.json")

# –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ - –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –Ω–µ–≥–æ
if missing_list_file.exists():
    print(f"\nüìÑ –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤")
    with open(missing_list_file, 'r') as f:
        to_upload = json.load(f)
    print(f"  ‚úÖ –ö –∑–∞–≥—Ä—É–∑–∫–µ: {len(to_upload)} —Ñ–∞–π–ª–æ–≤")
else:
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
    print(f"\nüîç –û–ø—Ä–µ–¥–µ–ª—è—é –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã...")
    
    images_dir = Path("storage/images")
    local_files = {f.name: str(f) for f in images_dir.glob("*") if f.is_file()}
    print(f"  üìÅ –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {len(local_files):,}")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ FTP –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫
    print(f"\nüîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FTP (—ç—Ç–æ –∑–∞–π–º–µ—Ç ~1-2 –º–∏–Ω—É—Ç—ã)...")
    ftp = FTP_TLS(FTP_HOST)
    ftp.login(FTP_USER, FTP_PASS)
    ftp.prot_p()
    ftp.cwd(FTP_DIR)
    
    print(f"  üìã –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP...")
    ftp_files = set()
    ftp.retrlines('NLST', ftp_files.add)
    print(f"  ‚úÖ –ù–∞ FTP: {len(ftp_files):,} —Ñ–∞–π–ª–æ–≤")
    
    ftp.quit()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ
    missing_names = set(local_files.keys()) - ftp_files
    to_upload = [local_files[name] for name in missing_names]
    
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è—é —Å–ø–∏—Å–æ–∫ –≤ {missing_list_file}")
    with open(missing_list_file, 'w') as f:
        json.dump(to_upload, f, indent=2)
    
    print(f"  ‚úÖ –ö –∑–∞–≥—Ä—É–∑–∫–µ: {len(to_upload)} —Ñ–∞–π–ª–æ–≤")

if not to_upload:
    print("\nüéâ –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!")
    exit(0)

# –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞–µ–º –¢–û–õ–¨–ö–û —ç—Ç–∏ —Ñ–∞–π–ª—ã
print(f"\nüîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FTP –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏...")
ftp = FTP_TLS(FTP_HOST)
ftp.login(FTP_USER, FTP_PASS)
ftp.prot_p()
ftp.cwd(FTP_DIR)
print("  ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ")

uploaded = 0
errors = 0
start_time = time.time()

print(f"\nüîÑ –ó–∞–≥—Ä—É–∂–∞—é {len(to_upload)} —Ñ–∞–π–ª–æ–≤...\n")

for i, file_path_str in enumerate(to_upload, 1):
    file_path = Path(file_path_str)
    filename = file_path.name
    
    try:
        with open(file_path, 'rb') as f:
            ftp.storbinary(f'STOR {filename}', f)
        
        uploaded += 1
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 50 —Ñ–∞–π–ª–æ–≤
        if uploaded % 50 == 0 or uploaded == len(to_upload):
            elapsed = time.time() - start_time
            speed = uploaded / elapsed if elapsed > 0 else 0
            remaining = len(to_upload) - uploaded
            eta_seconds = int(remaining / speed) if speed > 0 else 0
            
            print(f"  ‚úÖ {uploaded}/{len(to_upload)} | {speed:.1f} —Ñ/—Å–µ–∫ | ETA: {eta_seconds}—Å")
    
    except Exception as e:
        errors += 1
        if errors <= 10:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ ({filename}): {e}")

ftp.quit()

elapsed = time.time() - start_time

print("\n" + "=" * 80)
print("‚úÖ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
print("=" * 80)
print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
print(f"  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {uploaded:,} –∏–∑ {len(to_upload):,}")
print(f"  ‚ùå –û—à–∏–±–æ–∫: {errors:,}")
print(f"  ‚è±Ô∏è  –í—Ä–µ–º—è: {int(elapsed//60)} –º–∏–Ω {int(elapsed%60)} —Å–µ–∫")
if uploaded > 0:
    print(f"  üöÄ –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {uploaded/elapsed:.1f} —Ñ–∞–π–ª–æ–≤/—Å–µ–∫")

# –£–¥–∞–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
if errors == 0 and uploaded == len(to_upload):
    missing_list_file.unlink()
    print(f"\nüóëÔ∏è  –°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ —É–¥–∞–ª–µ–Ω")

print("\n" + "=" * 80)




