#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
–¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –¥—É–±–ª–µ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ –ë–î
"""

import re
import csv
from ftplib import FTP
import os
from dotenv import load_dotenv

load_dotenv()

def parse_filename(filename):
    """
    –ü–∞—Ä—Å–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    
    –ü–∞—Ç—Ç–µ—Ä–Ω—ã:
    1. {sheet_id}_{position}_{hash}.png
       –ü—Ä–∏–º–µ—Ä: 1fwvX9lN3tRlhmI_X0Ie9b-W1wX8B-2sh-vDSfc9NdbY_O4_04a64599.png
       
    2. {sheet_id}_{position}_{suffix}_{hash}.png
       –ü—Ä–∏–º–µ—Ä: 16t27DZ6EnQVx7DeHN9F1GKr4Ae9o5KL9luBS_rQ8WKg_Q8_3_62b0f70c.png
       
    3. {sheet_id}_{position}_{suffix}_{additional_hash}.png
       –ü—Ä–∏–º–µ—Ä: 1dsi__IfdxC-e1mhEGTWC72M0LLu8ZDaTQ2pcssebdI8_J3_1_acecbcc28340b119.png
    """
    
    if not filename.endswith('.png'):
        return None
    
    # –£–±–∏—Ä–∞–µ–º .png
    name = filename[:-4]
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—é
    parts = name.split('_')
    
    if len(parts) < 3:
        return None
    
    # Sheet ID - –≤—Å–µ –¥–æ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–∑–∏—Ü–∏–µ–π
    # –ü–æ–∑–∏—Ü–∏—è - –±—É–∫–≤–∞ + —Ü–∏—Ñ—Ä—ã (A4, O18, Q8, S76, etc)
    
    result = {
        'filename': filename,
        'sheet_id': None,
        'position': None,
        'suffix': None,
        'hash': None
    }
    
    # –ò—â–µ–º –ø–æ–∑–∏—Ü–∏—é (–±—É–∫–≤–∞/–±—É–∫–≤—ã + —Ü–∏—Ñ—Ä—ã)
    position_pattern = r'^[A-Z]+\d+$'
    
    for i in range(1, len(parts)):
        if re.match(position_pattern, parts[i]):
            # –ù–∞—à–ª–∏ –ø–æ–∑–∏—Ü–∏—é
            result['sheet_id'] = '_'.join(parts[:i])
            result['position'] = parts[i]
            
            # –û—Å—Ç–∞–ª—å–Ω–æ–µ - —Å—É—Ñ—Ñ–∏–∫—Å –∏/–∏–ª–∏ —Ö–µ—à
            remaining = parts[i+1:]
            
            if len(remaining) == 1:
                # –¢–æ–ª—å–∫–æ —Ö–µ—à
                result['hash'] = remaining[0]
            elif len(remaining) == 2:
                # –°—É—Ñ—Ñ–∏–∫—Å –∏ —Ö–µ—à (–∏–ª–∏ –¥–≤–∞ —Ö–µ—à–∞)
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º - –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ—Ä–æ—Ç–∫–∏–π (1-2 —Å–∏–º–≤–æ–ª–∞), —ç—Ç–æ —Å—É—Ñ—Ñ–∏–∫—Å
                if len(remaining[0]) <= 3 and remaining[0].isdigit():
                    result['suffix'] = remaining[0]
                    result['hash'] = remaining[1]
                else:
                    # –û–±–∞ —Ö–µ—à–∞
                    result['hash'] = '_'.join(remaining)
            elif len(remaining) > 2:
                # –°—É—Ñ—Ñ–∏–∫—Å + —Å–æ—Å—Ç–∞–≤–Ω–æ–π —Ö–µ—à
                if len(remaining[0]) <= 3 and remaining[0].isdigit():
                    result['suffix'] = remaining[0]
                    result['hash'] = '_'.join(remaining[1:])
                else:
                    result['hash'] = '_'.join(remaining)
            
            break
    
    return result if result['sheet_id'] and result['position'] else None


def get_ftp_files():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å FTP"""
    print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FTP...")
    
    ftp = FTP()
    ftp.connect(os.getenv('FTP_HOST'), int(os.getenv('FTP_PORT', 21)))
    ftp.login(os.getenv('FTP_USER'), os.getenv('FTP_PASSWORD'))
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    ftp.cwd('/73d16f7545b3-promogoods/images')
    
    print("üì• –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤...")
    files = []
    ftp.retrlines('NLST', files.append)
    
    ftp.quit()
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(files):,} —Ñ–∞–π–ª–æ–≤")
    return files


def main():
    print("=" * 80)
    print("üìä –ê–ù–ê–õ–ò–ó –ò–ú–ï–ù –§–ê–ô–õ–û–í –ù–ê FTP")
    print("=" * 80)
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    files = get_ftp_files()
    
    print("\nüîç –ü–∞—Ä—Å–∏–Ω–≥ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤...")
    
    results = []
    failed = []
    
    for i, filename in enumerate(files, 1):
        if i % 1000 == 0:
            print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {i:,} / {len(files):,} ({i/len(files)*100:.1f}%)")
        
        parsed = parse_filename(filename)
        
        if parsed:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π URL
            full_url = f"https://ftp.ru1.storage.beget.cloud/73d16f7545b3-promogoods/images/{filename}"
            
            results.append({
                'image_url': full_url,
                'sheet_id': parsed['sheet_id'],
                'position': parsed['position'],
                'suffix': parsed['suffix'] or '',
                'hash': parsed['hash'],
                'filename': filename
            })
        else:
            failed.append(filename)
    
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ: {len(results):,}")
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å: {len(failed):,}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ CSV
    csv_file = 'FTP_FILES_ANALYSIS.csv'
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è—é –≤ {csv_file}...")
    
    with open(csv_file, 'w', newline='', encoding='utf-8') as f:
        writer = csv.DictWriter(f, fieldnames=['image_url', 'sheet_id', 'position', 'suffix'])
        writer.writeheader()
        
        for row in results:
            writer.writerow({
                'image_url': row['image_url'],
                'sheet_id': row['sheet_id'],
                'position': row['position'],
                'suffix': row['suffix']
            })
    
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(results):,} –∑–∞–ø–∏—Å–µ–π")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 80)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("=" * 80)
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ sheet_id
    sheets = {}
    for row in results:
        sid = row['sheet_id']
        if sid not in sheets:
            sheets[sid] = 0
        sheets[sid] += 1
    
    print(f"\nüìÅ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {len(sheets):,}")
    
    # –§–∞–π–ª—ã —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏ (–¥—É–±–ª–∏)
    with_suffix = [r for r in results if r['suffix']]
    print(f"üîÑ –§–∞–π–ª–æ–≤ —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏ (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥—É–±–ª–∏): {len(with_suffix):,}")
    
    # –¢–û–ü-10 —Ç–∞–±–ª–∏—Ü –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    print(f"\nüîù –¢–û–ü-10 —Ç–∞–±–ª–∏—Ü –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")
    top_sheets = sorted(sheets.items(), key=lambda x: x[1], reverse=True)[:10]
    for i, (sheet_id, count) in enumerate(top_sheets, 1):
        print(f"   {i:2d}. {sheet_id[:50]:50s} - {count:4d} —Ñ–∞–π–ª–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ
    if failed:
        failed_file = 'FTP_FAILED_PARSING.txt'
        print(f"\n‚ö†Ô∏è  –°–æ—Ö—Ä–∞–Ω—è—é –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ {failed_file}...")
        with open(failed_file, 'w', encoding='utf-8') as f:
            f.write('\n'.join(failed))
        print(f"   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {len(failed)} —Ñ–∞–π–ª–æ–≤")
    
    print("\n" + "=" * 80)
    print("‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù")
    print("=" * 80)
    print(f"\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {csv_file}")
    print(f"üìä –§–æ—Ä–º–∞—Ç: image_url | sheet_id | position | suffix")


if __name__ == '__main__':
    main()

