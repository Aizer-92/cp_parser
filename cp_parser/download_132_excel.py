#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è 132 Excel —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–æ –±–µ–∑ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import sys
from pathlib import Path
import gspread
from google.oauth2.service_account import Credentials
import requests
import time

sys.path.insert(0, str(Path(__file__).parent))
from database.postgresql_manager import PostgreSQLManager
from sqlalchemy import text

# Google Sheets credentials
SCOPES = ['https://www.googleapis.com/auth/spreadsheets', 
          'https://www.googleapis.com/auth/drive']
CREDS_FILE = 'service_account.json'

def download_excel_files():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç Excel —Ñ–∞–π–ª—ã –¥–ª—è 132 –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    
    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    with open('projects_need_images.txt', 'r') as f:
        project_ids = [int(line.strip()) for line in f if line.strip().isdigit()]
    
    print("=" * 80)
    print("üì• –°–ö–ê–ß–ò–í–ê–ù–ò–ï EXCEL –§–ê–ô–õ–û–í")
    print("=" * 80)
    print(f"\nüìä –ü—Ä–æ–µ–∫—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é: {len(project_ids)}")
    
    db = PostgreSQLManager()
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    print("\nüîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets API...")
    creds = Credentials.from_service_account_file(CREDS_FILE, scopes=SCOPES)
    
    success = 0
    errors = 0
    already_exist = 0
    
    excel_dir = Path('excel_files')
    excel_dir.mkdir(exist_ok=True)
    
    for i, proj_id in enumerate(project_ids, 1):
        print(f"\n[{i}/{len(project_ids)}] –ü—Ä–æ–µ–∫—Ç {proj_id}...", end=' ')
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º table_id –∏–∑ –ë–î
            with db.get_session() as session:
                table_id = session.execute(text("""
                    SELECT table_id FROM projects WHERE id = :id
                """), {'id': proj_id}).scalar()
                
                if not table_id:
                    print(f"‚ùå –ù–µ—Ç table_id –≤ –ë–î")
                    errors += 1
                    continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ñ–∞–π–ª
            excel_path = excel_dir / f'project_{proj_id}_{table_id}.xlsx'
            
            if excel_path.exists() and excel_path.stat().st_size > 0:
                print(f"‚úì –£–∂–µ —Å–∫–∞—á–∞–Ω ({excel_path.stat().st_size:,} –±–∞–π—Ç)")
                already_exist += 1
                continue
            
            # –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –µ—Å–ª–∏ –µ—Å—Ç—å
            if excel_path.exists():
                excel_path.unlink()
            
            # –°–∫–∞—á–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π URL
            url = f"https://docs.google.com/spreadsheets/d/{table_id}/export?format=xlsx"
            response = requests.get(url, headers={'Authorization': f'Bearer {creds.token}'})
            
            if response.status_code != 200:
                print(f"‚ùå HTTP {response.status_code}")
                errors += 1
                continue
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(excel_path, 'wb') as f:
                f.write(response.content)
            
            file_size = excel_path.stat().st_size
            if file_size == 0:
                print(f"‚ùå –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª")
                excel_path.unlink()
                errors += 1
                continue
            
            print(f"‚úì {file_size:,} –±–∞–π—Ç")
            success += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(0.5)
            
        except Exception as e:
            print(f"‚ùå {str(e)}")
            errors += 1
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 80)
    print("üìä –ò–¢–û–ì–ò –°–ö–ê–ß–ò–í–ê–ù–ò–Ø:")
    print("=" * 80)
    print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ:        {success}")
    print(f"‚úì  –£–∂–µ –±—ã–ª–∏:       {already_exist}")
    print(f"‚ùå –û—à–∏–±–æ–∫:         {errors}")
    print(f"üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:   {success + already_exist}")
    print("=" * 80)
    
    if success > 0 or already_exist > 0:
        print("\n‚úÖ –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ –ø–∞—Ä—Å–∏–Ω–≥—É!")
        print("–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: python3 reparse_images_from_excel.py")

if __name__ == '__main__':
    download_excel_files()



"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è 132 Excel —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–æ –±–µ–∑ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import sys
from pathlib import Path
import gspread
from google.oauth2.service_account import Credentials
import requests
import time

sys.path.insert(0, str(Path(__file__).parent))
from database.postgresql_manager import PostgreSQLManager
from sqlalchemy import text

# Google Sheets credentials
SCOPES = ['https://www.googleapis.com/auth/spreadsheets', 
          'https://www.googleapis.com/auth/drive']
CREDS_FILE = 'service_account.json'

def download_excel_files():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç Excel —Ñ–∞–π–ª—ã –¥–ª—è 132 –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    
    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    with open('projects_need_images.txt', 'r') as f:
        project_ids = [int(line.strip()) for line in f if line.strip().isdigit()]
    
    print("=" * 80)
    print("üì• –°–ö–ê–ß–ò–í–ê–ù–ò–ï EXCEL –§–ê–ô–õ–û–í")
    print("=" * 80)
    print(f"\nüìä –ü—Ä–æ–µ–∫—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é: {len(project_ids)}")
    
    db = PostgreSQLManager()
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    print("\nüîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets API...")
    creds = Credentials.from_service_account_file(CREDS_FILE, scopes=SCOPES)
    
    success = 0
    errors = 0
    already_exist = 0
    
    excel_dir = Path('excel_files')
    excel_dir.mkdir(exist_ok=True)
    
    for i, proj_id in enumerate(project_ids, 1):
        print(f"\n[{i}/{len(project_ids)}] –ü—Ä–æ–µ–∫—Ç {proj_id}...", end=' ')
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º table_id –∏–∑ –ë–î
            with db.get_session() as session:
                table_id = session.execute(text("""
                    SELECT table_id FROM projects WHERE id = :id
                """), {'id': proj_id}).scalar()
                
                if not table_id:
                    print(f"‚ùå –ù–µ—Ç table_id –≤ –ë–î")
                    errors += 1
                    continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ñ–∞–π–ª
            excel_path = excel_dir / f'project_{proj_id}_{table_id}.xlsx'
            
            if excel_path.exists() and excel_path.stat().st_size > 0:
                print(f"‚úì –£–∂–µ —Å–∫–∞—á–∞–Ω ({excel_path.stat().st_size:,} –±–∞–π—Ç)")
                already_exist += 1
                continue
            
            # –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –µ—Å–ª–∏ –µ—Å—Ç—å
            if excel_path.exists():
                excel_path.unlink()
            
            # –°–∫–∞—á–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π URL
            url = f"https://docs.google.com/spreadsheets/d/{table_id}/export?format=xlsx"
            response = requests.get(url, headers={'Authorization': f'Bearer {creds.token}'})
            
            if response.status_code != 200:
                print(f"‚ùå HTTP {response.status_code}")
                errors += 1
                continue
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(excel_path, 'wb') as f:
                f.write(response.content)
            
            file_size = excel_path.stat().st_size
            if file_size == 0:
                print(f"‚ùå –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª")
                excel_path.unlink()
                errors += 1
                continue
            
            print(f"‚úì {file_size:,} –±–∞–π—Ç")
            success += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(0.5)
            
        except Exception as e:
            print(f"‚ùå {str(e)}")
            errors += 1
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 80)
    print("üìä –ò–¢–û–ì–ò –°–ö–ê–ß–ò–í–ê–ù–ò–Ø:")
    print("=" * 80)
    print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ:        {success}")
    print(f"‚úì  –£–∂–µ –±—ã–ª–∏:       {already_exist}")
    print(f"‚ùå –û—à–∏–±–æ–∫:         {errors}")
    print(f"üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:   {success + already_exist}")
    print("=" * 80)
    
    if success > 0 or already_exist > 0:
        print("\n‚úÖ –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ –ø–∞—Ä—Å–∏–Ω–≥—É!")
        print("–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: python3 reparse_images_from_excel.py")

if __name__ == '__main__':
    download_excel_files()










