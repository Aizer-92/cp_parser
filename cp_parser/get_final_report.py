#!/usr/bin/env python3
"""
–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ—Å–ª–µ –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –±–∞—Ç—á–µ–π
"""

import re
from pathlib import Path

log_file = Path('batch_processing.log')

if not log_file.exists():
    print("‚ùå –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

with open(log_file, 'r', encoding='utf-8') as f:
    content = f.read()

# –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –∏—Ç–æ–≥–∏ –±–∞—Ç—á–µ–π
batches = re.findall(
    r'–ë–ê–¢–ß #(\d+).*?'
    r'–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: (\d+).*?'
    r'–£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ([\d,]+).*?'
    r'–ü–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ([\d,]+).*?'
    r'–ù–∞–∑–Ω–∞—á–µ–Ω–æ –≥–ª–∞–≤–Ω—ã—Ö: ([\d,]+).*?'
    r'–û—à–∏–±–æ–∫: (\d+)',
    content,
    re.DOTALL
)

if not batches:
    print("‚ö†Ô∏è  –ù–∏ –æ–¥–∏–Ω –±–∞—Ç—á –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω")
    exit(0)

print("\n" + "="*80)
print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –í–°–ï–ú –ë–ê–¢–ß–ê–ú")
print("="*80 + "\n")

total_projects = 0
total_duplicates = 0
total_relinked = 0
total_main = 0
total_errors = 0

print("–ë–∞—Ç—á | –ü—Ä–æ–µ–∫—Ç–æ–≤ | –î—É–±–ª–∏–∫–∞—Ç–æ–≤ | –ü–µ—Ä–µ–ø—Ä–∏–≤—è–∑–æ–∫ | –ì–ª–∞–≤–Ω—ã—Ö | –û—à–∏–±–æ–∫")
print("-"*80)

for batch_num, projects, dupes, relinked, main, errors in batches:
    # –£–±–∏—Ä–∞–µ–º –∑–∞–ø—è—Ç—ã–µ –∏–∑ —á–∏—Å–µ–ª
    dupes = int(dupes.replace(',', ''))
    relinked = int(relinked.replace(',', ''))
    main = int(main.replace(',', ''))
    
    print(f"  #{batch_num:2} | {int(projects):8} | {dupes:10,} | {relinked:12,} | {int(main):7,} | {int(errors):6}")
    
    total_projects += int(projects)
    total_duplicates += dupes
    total_relinked += relinked
    total_main += int(main)
    total_errors += int(errors)

print("-"*80)
print(f"–ò–¢–û–ì–û | {total_projects:8} | {total_duplicates:10,} | {total_relinked:12,} | {total_main:7,} | {total_errors:6}")

print("\n" + "="*80)
print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
print("="*80)
print(f"  ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–∞—Ç—á–µ–π:           {len(batches)}/14")
print(f"  üì¶ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤:         {total_projects}")
print(f"  üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:          {total_duplicates:,}")
print(f"  üîÑ –ü–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:   {total_relinked:,}")
print(f"  üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–æ –≥–ª–∞–≤–Ω—ã—Ö:           {total_main:,}")
print(f"  ‚ùå –û—à–∏–±–æ–∫:                      {total_errors}")
print(f"  üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:                    {total_projects/268*100:.1f}%")
print("="*80 + "\n")

if len(batches) < 14:
    remaining = 14 - len(batches)
    print(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –±–∞—Ç—á–µ–π: {remaining}")
    print(f"‚è±Ô∏è  –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: ~{remaining * 2} –º–∏–Ω—É—Ç\n")
else:
    print("üéâ –í–°–ï –ë–ê–¢–ß–ò –ó–ê–í–ï–†–®–ï–ù–´!\n")

