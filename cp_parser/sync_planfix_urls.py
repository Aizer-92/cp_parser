#!/usr/bin/env python3
"""
–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –∑–∞–¥–∞—á–∏ Planfix –∏–∑ –º–∞—Å—Ç–µ—Ä-—Ç–∞–±–ª–∏—Ü—ã
"""

import sys
import csv
from pathlib import Path
sys.path.insert(0, str(Path.cwd()))
from database.postgresql_manager import PostgreSQLManager
from sqlalchemy import text

# –ü—É—Ç—å –∫ CSV —Ñ–∞–π–ª—É
CSV_PATH = "/Users/bakirovresad/Downloads/Reshad 1/projects/–ö–æ–ø–∏–ª–∫–∞ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π - –ü—Ä–æ—Å—á–µ—Ç—ã  (1).csv"

def main():
    print("=" * 80)
    print("üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø PLANFIX URLs")
    print("=" * 80)
    
    db = PostgreSQLManager()
    
    # –ß–∏—Ç–∞–µ–º CSV
    print("\nüìñ –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª...")
    mappings = []  # [(google_sheets_url, planfix_url), ...]
    
    try:
        with open(CSV_PATH, 'r', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            for row in reader:
                google_url = row.get('–°—Å—ã–ª–∫–∞ –Ω–∞ GoogleSheets', '').strip()
                planfix_url = row.get('URL', '').strip()
                
                if google_url and planfix_url:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ Google Sheets URL
                    if '/d/' in google_url:
                        table_id = google_url.split('/d/')[1].split('/')[0]
                        mappings.append((table_id, planfix_url))
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(mappings)} –∑–∞–ø–∏—Å–µ–π —Å —Å—Å—ã–ª–∫–∞–º–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è CSV: {e}")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ë–î
    print("\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    updated = 0
    not_found = 0
    
    with db.get_session() as session:
        for table_id, planfix_url in mappings:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–µ–∫—Ç —Å —Ç–∞–∫–∏–º table_id
            result = session.execute(text("""
                UPDATE projects 
                SET planfix_task_url = :url 
                WHERE table_id = :table_id
                RETURNING id, project_name
            """), {'url': planfix_url, 'table_id': table_id}).first()
            
            if result:
                updated += 1
                if updated <= 5:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    print(f"  ‚úÖ {result.project_name[:60]}")
            else:
                not_found += 1
        
        session.commit()
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated}")
    print(f"  ‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î: {not_found}")
    print(f"  üìù –í—Å–µ–≥–æ –≤ CSV: {len(mappings)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç Planfix URL
    with db.get_session() as session:
        total_projects = session.execute(text("SELECT COUNT(*) FROM projects")).scalar()
        with_planfix = session.execute(text("""
            SELECT COUNT(*) FROM projects WHERE planfix_task_url IS NOT NULL
        """)).scalar()
        
        print(f"\nüìå –ò–¢–û–ì–û –í –ë–î:")
        print(f"  –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {total_projects}")
        print(f"  –° Planfix URL: {with_planfix} ({with_planfix*100//total_projects}%)")
    
    print("=" * 80)

if __name__ == "__main__":
    main()

