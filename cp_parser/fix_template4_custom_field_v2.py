#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ custom_field - –æ–¥–Ω–∏–º SQL –∑–∞–ø—Ä–æ—Å–æ–º
"""

import sys
from pathlib import Path
from sqlalchemy import text

sys.path.insert(0, str(Path.cwd()))
from database.postgresql_manager import PostgreSQLManager

db = PostgreSQLManager()

print("=" * 100)
print("üîß –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CUSTOM_FIELD –í –®–ê–ë–õ–û–ù–ï 4")
print("=" * 100)

with open('template_4_perfect_ids.txt', 'r') as f:
    project_ids = [int(line.strip()) for line in f if line.strip()]

with db.get_session() as session:
    # –£–±–∏—Ä–∞–µ–º "–û–±—Ä–∞–∑–µ—Ü" –∏–∑ custom_field –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    print("\nüìù –£–±–∏—Ä–∞–µ–º '–û–±—Ä–∞–∑–µ—Ü' –∏–∑ custom_field...")
    
    result = session.execute(text("""
        UPDATE products
        SET custom_field = TRIM(REGEXP_REPLACE(custom_field, ',?\s*–û–±—Ä–∞–∑–µ—Ü$', '', 'i'))
        WHERE project_id = ANY(:ids)
        AND custom_field LIKE '%–û–±—Ä–∞–∑–µ—Ü%'
    """), {'ids': project_ids})
    
    updated = result.rowcount
    session.commit()
    
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {updated}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
    
    stats = session.execute(text("""
        SELECT 
            COUNT(*) as total,
            COUNT(CASE WHEN custom_field LIKE '%–û–±—Ä–∞–∑–µ—Ü%' THEN 1 END) as still_with_obrazec
        FROM products
        WHERE project_id = ANY(:ids)
    """), {'ids': project_ids}).fetchone()
    
    total, still_with = stats
    
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤:             {total:,}")
    print(f"   –ï—â–µ —Å '–û–±—Ä–∞–∑–µ—Ü':           {still_with:,}")
    
    if still_with == 0:
        print("\n‚úÖ –£–°–ü–ï–®–ù–û! –í—Å–µ '–û–±—Ä–∞–∑—Ü—ã' —É–±—Ä–∞–Ω—ã –∏–∑ custom_field")
    else:
        print(f"\n‚ö†Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å {still_with} —Ç–æ–≤–∞—Ä–æ–≤ —Å '–û–±—Ä–∞–∑–µ—Ü'")
    
    # –ü—Ä–∏–º–µ—Ä—ã
    print("\nüìã –ü–†–ò–ú–ï–†–´ (–ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è):")
    examples = session.execute(text("""
        SELECT id, name, custom_field
        FROM products
        WHERE project_id = ANY(:ids)
        AND custom_field IS NOT NULL
        ORDER BY id
        LIMIT 5
    """), {'ids': project_ids}).fetchall()
    
    for prod_id, name, custom in examples:
        print(f"\nID {prod_id}: {name[:40]}")
        print(f"   Custom: {custom[:80]}")
    
    print("\n" + "=" * 100)

PYTHON_SCRIPT




