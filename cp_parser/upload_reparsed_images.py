#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (94 —à—Ç.) –Ω–∞ Beget FTP
"""

import sys
from pathlib import Path
from ftplib import FTP_TLS
from sqlalchemy import text
import time

sys.path.insert(0, str(Path.cwd()))
from database.postgresql_manager import PostgreSQLManager

# FTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Beget
FTP_HOST = 'ftp.ru1.storage.beget.cloud'
FTP_USER = 'RECD00AQJIM4300MLJ0W'
FTP_PASS = 'FIucJ3i9iIWZ5ieJvabvI0OxEn2Yv4gG5XRUeSNf'
FTP_PATH = '/73d16f7545b3-promogoods/images/'

def main():
    db = PostgreSQLManager()
    
    print("=" * 80)
    print("üöÄ –ó–ê–ì–†–£–ó–ö–ê –î–û–ü–ê–†–°–ï–ù–ù–´–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ù–ê FTP")
    print("=" * 80)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø–∞—Ä—Å–∏–ª–∏
    template4_missing = []
    with open('missing_images_template4.txt', 'r') as f:
        for line in f:
            parts = line.strip().split('\t')
            if len(parts) >= 1:
                template4_missing.append(int(parts[0]))
    
    template5_missing = []
    with open('missing_images_template5.txt', 'r') as f:
        for line in f:
            parts = line.strip().split('\t')
            if len(parts) >= 1:
                template5_missing.append(int(parts[0]))
    
    all_missing = template4_missing + template5_missing
    
    print(f"\nüìã –ü—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(all_missing)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ë–ï–ó URL (—Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ)
    with db.get_session() as session:
        images = session.execute(text("""
            SELECT pi.id, pi.image_filename, pi.local_path
            FROM product_images pi
            JOIN products p ON pi.product_id = p.id
            WHERE p.project_id = ANY(:ids)
            AND (pi.image_url IS NULL OR pi.image_url = '')
            AND pi.local_path IS NOT NULL
            ORDER BY pi.id
        """), {'ids': all_missing}).fetchall()
        
        print(f"üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: {len(images)}")
        
        if len(images) == 0:
            print("\n‚úÖ –ù–µ—á–µ–≥–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å!")
            return
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ FTP
        print(f"\nüîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FTP: {FTP_HOST}")
        ftp = FTP_TLS(FTP_HOST)
        ftp.login(FTP_USER, FTP_PASS)
        ftp.prot_p()  # –ó–∞—â–∏—â–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –¥–∞–Ω–Ω—ã—Ö
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω—É–∂–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        try:
            ftp.cwd(FTP_PATH)
        except:
            print(f"üìÅ –°–æ–∑–¥–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {FTP_PATH}")
            ftp.mkd(FTP_PATH)
            ftp.cwd(FTP_PATH)
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ FTP\n")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        uploaded = 0
        errors = 0
        
        for idx, (image_id, filename, local_path) in enumerate(images, 1):
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
                local_file = Path(local_path)
                if not local_file.exists():
                    print(f"[{idx}/{len(images)}] ‚ùå {filename}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    errors += 1
                    continue
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ FTP
                with open(local_file, 'rb') as f:
                    ftp.storbinary(f'STOR {filename}', f)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º URL –≤ –ë–î (–ü–†–ê–í–ò–õ–¨–ù–´–ô —Ñ–æ—Ä–º–∞—Ç —Å s3. –ø—Ä–µ—Ñ–∏–∫—Å–æ–º!)
                new_url = f"https://s3.ru1.storage.beget.cloud/73d16f7545b3-promogoods/images/{filename}"
                
                session.execute(text("""
                    UPDATE product_images
                    SET image_url = :url
                    WHERE id = :image_id
                """), {'url': new_url, 'image_id': image_id})
                session.commit()
                
                uploaded += 1
                
                if uploaded % 10 == 0:
                    print(f"[{idx}/{len(images)}] ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {uploaded}")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                time.sleep(0.1)
                
            except Exception as e:
                print(f"[{idx}/{len(images)}] ‚ùå {filename}: {e}")
                errors += 1
                continue
        
        ftp.quit()
        
        print("\n" + "=" * 80)
        print("‚úÖ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
        print("=" * 80)
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  ‚Ä¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {uploaded}")
        print(f"  ‚Ä¢ –û—à–∏–±–æ–∫: {errors}")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ: {len(images)}")
        print("\n" + "=" * 80)

if __name__ == '__main__':
    main()

