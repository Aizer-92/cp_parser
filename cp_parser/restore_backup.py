#!/usr/bin/env python3
"""
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∏—Ä–∞–∂–µ–π –∏–∑ –±—ç–∫–∞–ø–∞
"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path.cwd()))

from database.postgresql_manager import PostgreSQLManager
from sqlalchemy import text
import os
import csv as csv_lib

# Railway DB
os.environ['USE_RAILWAY_DB'] = 'true'

def restore_from_backup(db, backup_file):
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç quantity –∏–∑ –±—ç–∫–∞–ø–∞"""
    print(f"\nüìÇ –ß–∏—Ç–∞—é –±—ç–∫–∞–ø: {backup_file}", flush=True)
    
    updates = []
    with open(backup_file, 'r', encoding='utf-8') as f:
        reader = csv_lib.DictReader(f)
        for row in reader:
            updates.append({
                'id': int(row['ID_–û—Ñ—Ñ–µ—Ä–∞']),
                'quantity': int(row['Quantity_OLD'])
            })
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(updates)}", flush=True)
    
    print(f"\nüîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç–∏—Ä–∞–∂–∏...", flush=True)
    
    with db.get_session() as session:
        for upd in updates:
            session.execute(text("""
                UPDATE price_offers
                SET quantity = :qty
                WHERE id = :id
            """), {'id': upd['id'], 'qty': upd['quantity']})
        
        session.commit()
    
    print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {len(updates)} –æ—Ñ—Ñ–µ—Ä–æ–≤", flush=True)

def main():
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 restore_backup.py <backup_file.csv>", flush=True)
        return
    
    backup_file = sys.argv[1]
    
    if not Path(backup_file).exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {backup_file}", flush=True)
        return
    
    print("="*80, flush=True)
    print("üîÑ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ò–ó –ë–≠–ö–ê–ü–ê", flush=True)
    print("="*80, flush=True)
    
    db = PostgreSQLManager()
    
    print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –ë—É–¥—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è quantity", flush=True)
    response = input("‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–≤–≤–µ–¥–∏—Ç–µ '–î–ê'): ")
    
    if response.strip().upper() != '–î–ê':
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞", flush=True)
        return
    
    restore_from_backup(db, backup_file)
    
    print("\n‚úÖ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!", flush=True)

if __name__ == '__main__':
    main()

