#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ FTP –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ Beget
"""

import os
import sys
from pathlib import Path
import ftplib
from ftplib import FTP_TLS
import time
from concurrent.futures import ThreadPoolExecutor, as_completed
import threading
from tqdm import tqdm

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ FTP
FTP_HOST = 'ftp.ru1.storage.beget.cloud'
FTP_USERNAME = 'RECD00AQJIM4300MLJ0W'
FTP_PASSWORD = 'FIucJ3i9iIWZ5ieJvabvI0OxEn2Yv4gG5XRUeSNf'
FTP_REMOTE_DIR = '/73d16f7545b3-promogoods/images'  # –ü–∞–ø–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
LOCAL_IMAGES_DIR = Path('storage/images')
MAX_WORKERS = 2  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫ (FTP –æ–≥—Ä–∞–Ω–∏—á–µ–Ω)
BATCH_SIZE = 50  # –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞
UPLOAD_DELAY = 0.1  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–≥—Ä—É–∑–∫–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

class FTPImageUploader:
    def __init__(self):
        self.uploaded_count = 0
        self.failed_count = 0
        self.lock = threading.Lock()
        self.start_time = time.time()
    
    def upload_single_file(self, local_path, remote_path, max_retries=3):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª —á–µ—Ä–µ–∑ FTP —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
        for attempt in range(max_retries):
            try:
                # –°–æ–∑–¥–∞–µ–º FTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                ftp = FTP_TLS()
                ftp.connect(FTP_HOST, 21, timeout=30)
                ftp.login(FTP_USERNAME, FTP_PASSWORD)
                ftp.prot_p()  # –í–∫–ª—é—á–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
                
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É images
                try:
                    ftp.cwd(FTP_REMOTE_DIR)
                except ftplib.error_perm:
                    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
                    ftp.mkd(FTP_REMOTE_DIR)
                    ftp.cwd(FTP_REMOTE_DIR)
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                remote_dir = os.path.dirname(remote_path)
                if remote_dir and remote_dir != '.':
                    try:
                        ftp.cwd(remote_dir)
                    except ftplib.error_perm:
                        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
                        parts = remote_dir.split('/')
                        current_path = ''
                        for part in parts:
                            if part:
                                current_path += '/' + part
                                try:
                                    ftp.cwd(current_path)
                                except ftplib.error_perm:
                                    ftp.mkd(current_path)
                                    ftp.cwd(current_path)
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
                with open(local_path, 'rb') as f:
                    ftp.storbinary(f'STOR {os.path.basename(remote_path)}', f)
                
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                ftp.quit()
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limit
                time.sleep(UPLOAD_DELAY)
                
                with self.lock:
                    self.uploaded_count += 1
                    if self.uploaded_count % BATCH_SIZE == 0:
                        elapsed = time.time() - self.start_time
                        rate = self.uploaded_count / elapsed
                        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {self.uploaded_count} —Ñ–∞–π–ª–æ–≤, —Å–∫–æ—Ä–æ—Å—Ç—å: {rate:.1f} —Ñ–∞–π–ª/—Å–µ–∫")
                
                return True, None
                
            except ftplib.error_temp as e:
                if "rate limit" in str(e).lower() and attempt < max_retries - 1:
                    # Rate limit - –∂–¥–µ–º –¥–æ–ª—å—à–µ –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º
                    wait_time = (attempt + 1) * 2  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
                    print(f"‚ö†Ô∏è  Rate limit –¥–ª—è {local_path.name}, –∂–¥—É {wait_time} —Å–µ–∫...")
                    time.sleep(wait_time)
                    continue
                else:
                    raise e
            except Exception as e:
                if attempt < max_retries - 1:
                    print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –¥–ª—è {local_path.name}, –ø–æ–≤—Ç–æ—Ä—è—é —á–µ—Ä–µ–∑ 1 —Å–µ–∫...")
                    time.sleep(1)
                    continue
                else:
                    raise e
        
        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
        with self.lock:
            self.failed_count += 1
        return False, f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å–ª–µ {max_retries} –ø–æ–ø—ã—Ç–æ–∫"
    
    def test_connection(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç FTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"""
        try:
            print("üîå –¢–µ—Å—Ç–∏—Ä—É—é FTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...")
            ftp = FTP_TLS()
            ftp.connect(FTP_HOST, 21, timeout=30)
            ftp.login(FTP_USERNAME, FTP_PASSWORD)
            ftp.prot_p()  # –í–∫–ª—é—á–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
            
            print("‚úÖ FTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            current_dir = ftp.pwd()
            print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
            
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            try:
                ftp.mkd(FTP_REMOTE_DIR)
                print(f"‚úÖ –ü–∞–ø–∫–∞ {FTP_REMOTE_DIR} —Å–æ–∑–¥–∞–Ω–∞")
            except ftplib.error_perm as e:
                if "exists" in str(e).lower():
                    print(f"‚úÖ –ü–∞–ø–∫–∞ {FTP_REMOTE_DIR} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É: {e}")
            
            ftp.quit()
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ FTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
            return False
    
    def upload_images(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        print("üöÄ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ FTP...")
        print(f"üìÅ –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞: {LOCAL_IMAGES_DIR}")
        print(f"üåê FTP —Å–µ—Ä–≤–µ—Ä: {FTP_HOST}")
        print(f"üìä –ú–∞–∫—Å–∏–º—É–º –ø–æ—Ç–æ–∫–æ–≤: {MAX_WORKERS}")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if not self.test_connection():
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        image_files = list(LOCAL_IMAGES_DIR.rglob('*'))
        image_files = [f for f in image_files if f.is_file()]
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(image_files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
        print()
        
        if not image_files:
            print("‚ùå –§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        upload_tasks = []
        for local_path in image_files:
            # –°–æ–∑–¥–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
            relative_path = local_path.relative_to(LOCAL_IMAGES_DIR)
            remote_path = f"{FTP_REMOTE_DIR}/{relative_path}"
            
            upload_tasks.append((local_path, remote_path))
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        with ThreadPoolExecutor(max_workers=MAX_WORKERS) as executor:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
            future_to_task = {
                executor.submit(self.upload_single_file, local_path, remote_path): (local_path, remote_path)
                for local_path, remote_path in upload_tasks
            }
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
            with tqdm(total=len(upload_tasks), desc="–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π") as pbar:
                for future in as_completed(future_to_task):
                    local_path, remote_path = future_to_task[future]
                    try:
                        success, error = future.result()
                        if not success:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {local_path.name}: {error}")
                    except Exception as e:
                        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è {local_path.name}: {e}")
                    
                    pbar.update(1)
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_time = time.time() - self.start_time
        print()
        print("=" * 60)
        print("üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
        print("=" * 60)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {self.uploaded_count} —Ñ–∞–π–ª–æ–≤")
        print(f"‚ùå –û—à–∏–±–æ–∫: {self.failed_count} —Ñ–∞–π–ª–æ–≤")
        print(f"‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time:.1f} —Å–µ–∫—É–Ω–¥")
        print(f"üöÄ –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {self.uploaded_count/total_time:.1f} —Ñ–∞–π–ª/—Å–µ–∫")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {self.uploaded_count/(self.uploaded_count+self.failed_count)*100:.1f}%")
        print()
        
        if self.uploaded_count > 0:
            print("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print(f"üåê –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å—É: https://s3.ru1.storage.beget.cloud/73d16f7545b3-promogoods/images/")
            print()
            print("üìù –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
            print("1. –û–±–Ω–æ–≤–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print("2. –ò–∑–º–µ–Ω–∏—Ç–µ serve_image —Ñ—É–Ω–∫—Ü–∏—é –≤ app.py")
        else:
            print("‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üñºÔ∏è  –ó–∞–≥—Ä—É–∑—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ FTP –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ Beget")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    if not LOCAL_IMAGES_DIR.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {LOCAL_IMAGES_DIR}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    uploader = FTPImageUploader()
    uploader.upload_images()

if __name__ == "__main__":
    main()
