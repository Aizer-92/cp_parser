#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ Template 6 –±–µ–∑ –æ—Ñ—Ñ–µ—Ä–æ–≤ –∏–ª–∏ —Å –º–∞–ª—ã–º % –æ—Ñ—Ñ–µ—Ä–æ–≤
1. –£–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã
2. –£–¥–∞–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
3. –ú–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –Ω–∞ 'pending'
"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path.cwd()))
from database.postgresql_manager import PostgreSQLManager
from sqlalchemy import text

def main():
    db = PostgreSQLManager()
    
    print("=" * 80)
    print("üîÑ –°–ë–†–û–° –ü–†–û–ï–ö–¢–û–í TEMPLATE 6 –ë–ï–ó –û–§–§–ï–†–û–í")
    print("=" * 80)
    
    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    projects_file = Path('projects_to_reset_all.txt')
    
    if not projects_file.exists():
        print("\n‚ùå –§–∞–π–ª projects_to_reset_all.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑")
        return
    
    with open(projects_file, 'r') as f:
        project_ids = [int(line.strip()) for line in f if line.strip().isdigit()]
    
    print(f"\nüìã –ü—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —Å–±—Ä–æ—Å–∞: {len(project_ids)}")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï!")
    print(f"   –≠—Ç–æ —É–¥–∞–ª–∏—Ç:")
    print(f"   ‚Ä¢ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ {len(project_ids)} –ø—Ä–æ–µ–∫—Ç–æ–≤")
    print(f"   ‚Ä¢ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç—Ç–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    print(f"   ‚Ä¢ –í—Å–µ —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)")
    print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ 'pending'")
    
    response = input(f"\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
    
    if response.lower() != 'yes':
        print("\n‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    with db.get_session() as session:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –î–û
        stats_before = session.execute(text("""
            SELECT 
                COUNT(DISTINCT p.id) as products,
                COUNT(DISTINCT pi.id) as images,
                COUNT(DISTINCT po.id) as offers
            FROM products p
            JOIN projects proj ON proj.table_id = p.table_id
            LEFT JOIN product_images pi ON pi.product_id = p.id
            LEFT JOIN price_offers po ON po.product_id = p.id
            WHERE proj.id = ANY(:ids)
        """), {'ids': project_ids}).first()
        
        print(f"\nüìä –î–ê–ù–ù–´–ï –î–û:")
        print(f"   –¢–æ–≤–∞—Ä–æ–≤: {stats_before.products:,}")
        print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats_before.images:,}")
        print(f"   –û—Ñ—Ñ–µ—Ä–æ–≤: {stats_before.offers:,}")
        
        # –≠–¢–ê–ü 1: –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        print(f"\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        result_images = session.execute(text("""
            DELETE FROM product_images
            WHERE product_id IN (
                SELECT p.id
                FROM products p
                JOIN projects proj ON proj.table_id = p.table_id
                WHERE proj.id = ANY(:ids)
            )
        """), {'ids': project_ids})
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {result_images.rowcount:,}")
        
        # –≠–¢–ê–ü 2: –£–¥–∞–ª—è–µ–º —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        print(f"\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...")
        result_offers = session.execute(text("""
            DELETE FROM price_offers
            WHERE product_id IN (
                SELECT p.id
                FROM products p
                JOIN projects proj ON proj.table_id = p.table_id
                WHERE proj.id = ANY(:ids)
            )
        """), {'ids': project_ids})
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ—Ñ—Ñ–µ—Ä–æ–≤: {result_offers.rowcount:,}")
        
        # –≠–¢–ê–ü 3: –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
        print(f"\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...")
        result_products = session.execute(text("""
            DELETE FROM products
            WHERE table_id IN (
                SELECT table_id FROM projects WHERE id = ANY(:ids)
            )
        """), {'ids': project_ids})
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {result_products.rowcount:,}")
        
        # –≠–¢–ê–ü 4: –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–æ–≤
        print(f"\nüîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...")
        result_status = session.execute(text("""
            UPDATE projects
            SET parsing_status = 'pending',
                total_products_found = 0,
                total_images_found = 0,
                updated_at = NOW()
            WHERE id = ANY(:ids)
        """), {'ids': project_ids})
        print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {result_status.rowcount}")
        
        # –ö–æ–º–º–∏—Ç
        session.commit()
        
        print(f"\n" + "=" * 80)
        print(f"‚úÖ –°–ë–†–û–° –ó–ê–í–ï–†–®–ï–ù!")
        print(f"=" * 80)
        print(f"   –£–¥–∞–ª–µ–Ω–æ:")
        print(f"   ‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤: {result_products.rowcount:,}")
        print(f"   ‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {result_images.rowcount:,}")
        print(f"   ‚Ä¢ –û—Ñ—Ñ–µ—Ä–æ–≤: {result_offers.rowcount:,}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {result_status.rowcount}")
        
        print(f"\nüí° –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:")
        print(f"   –≠—Ç–∏ –ø—Ä–æ–µ–∫—Ç—ã —Ç–µ–ø–µ—Ä—å –≤ —Å—Ç–∞—Ç—É—Å–µ 'pending'")
        print(f"   –ú–æ–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø—Ä–æ–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —à–∞–±–ª–æ–Ω–æ–º")

if __name__ == '__main__':
    main()

