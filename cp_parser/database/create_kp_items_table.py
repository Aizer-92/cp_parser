#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã kp_items –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ö–ü
"""

import os
import sys
from sqlalchemy import create_engine, text
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

load_dotenv()

def create_kp_items_table():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É kp_items –≤ –ë–î"""
    
    db_url = os.getenv('DATABASE_URL') or os.getenv('DATABASE_URL_PRIVATE')
    
    if not db_url:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω DATABASE_URL")
        sys.exit(1)
    
    print(f"üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: {db_url[:50]}...")
    engine = create_engine(db_url, pool_pre_ping=True)
    
    with engine.begin() as conn:
        print("\n1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
        result = conn.execute(text("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'kp_items'
            )
        """))
        exists = result.scalar()
        
        if exists:
            print("‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ kp_items —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            confirm = input("–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å? (y/n): ").strip().lower()
            if confirm != 'y':
                print("–û—Ç–º–µ–Ω–µ–Ω–æ")
                return
            
            print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É...")
            conn.execute(text("DROP TABLE IF EXISTS kp_items CASCADE"))
        
        print("\n2Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã kp_items...")
        
        conn.execute(text("""
            CREATE TABLE kp_items (
                id SERIAL PRIMARY KEY,
                
                -- –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                session_id VARCHAR(255) NOT NULL,
                
                -- –°–≤—è–∑—å —Å —Ç–æ–≤–∞—Ä–æ–º –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º —Ü–µ–Ω—ã
                product_id INTEGER NOT NULL REFERENCES products(id) ON DELETE CASCADE,
                price_offer_id INTEGER NOT NULL REFERENCES price_offers(id) ON DELETE CASCADE,
                
                -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–Ω–∞ –±—É–¥—É—â–µ–µ, –ø–æ–∫–∞ –≤—Å–µ–≥–¥–∞ 1)
                quantity INTEGER DEFAULT 1,
                
                -- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                user_comment TEXT,
                
                -- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
                added_at TIMESTAMP DEFAULT NOW(),
                updated_at TIMESTAMP DEFAULT NOW(),
                
                -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç —Ü–µ–Ω—ã –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –ö–ü
                UNIQUE(session_id, price_offer_id)
            )
        """))
        
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ kp_items —Å–æ–∑–¥–∞–Ω–∞")
        
        print("\n3Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
        
        # –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ö–ü –ø–æ —Å–µ—Å—Å–∏–∏
        conn.execute(text("""
            CREATE INDEX idx_kp_items_session_id ON kp_items(session_id)
        """))
        
        # –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ "—Ç–æ–≤–∞—Ä –≤ –ö–ü?"
        conn.execute(text("""
            CREATE INDEX idx_kp_items_session_price ON kp_items(session_id, price_offer_id)
        """))
        
        print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        print("\n4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
        
        result = conn.execute(text("""
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns
            WHERE table_name = 'kp_items'
            ORDER BY ordinal_position
        """))
        
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã kp_items:")
        for row in result:
            nullable = "NULL" if row[2] == 'YES' else "NOT NULL"
            print(f"   ‚Ä¢ {row[0]:20s} {row[1]:20s} {nullable}")
    
    print("\n" + "="*80)
    print("‚úÖ –¢–ê–ë–õ–ò–¶–ê kp_items –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–ê!")
    print("="*80)
    print("\nüìù –ß—Ç–æ –¥–∞–ª—å—à–µ:")
    print("1. –°–æ–∑–¥–∞—Ç—å API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã (/api/kp/*)")
    print("2. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ '–î–æ–±–∞–≤–∏—Ç—å –≤ –ö–ü' –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞")
    print("3. –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É /kp –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ö–ü")
    print()

if __name__ == "__main__":
    create_kp_items_table()

