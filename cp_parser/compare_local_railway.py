#!/usr/bin/env python3
"""
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –∏ Railway –¥–ª—è –®–∞–±–ª–æ–Ω–∞ 4
"""

import sys
from pathlib import Path
from sqlalchemy import text, create_engine
from sqlalchemy.orm import sessionmaker

sys.path.insert(0, str(Path.cwd()))
from database.postgresql_manager import PostgreSQLManager

# –õ–æ–∫–∞–ª—å–Ω–∞—è –ë–î
local_db = PostgreSQLManager()

# Railway –ë–î
railway_engine = create_engine(
    'postgresql://postgres:dyLiJiVKlMSYHXdVOGzfXmCZZoQqhHTg@junction.proxy.rlwy.net:57758/railway',
    pool_pre_ping=True,
    pool_size=1,
    max_overflow=0
)
RailwaySession = sessionmaker(bind=railway_engine)

print("=" * 100)
print("üîç –°–†–ê–í–ù–ï–ù–ò–ï –õ–û–ö–ê–õ–¨–ù–û–ô –ë–î –ò RAILWAY - –®–ê–ë–õ–û–ù 4")
print("=" * 100)

with open('template_4_perfect_ids.txt', 'r') as f:
    project_ids = [int(line.strip()) for line in f if line.strip()]

print(f"\nüìã –ü—Ä–æ–µ–∫—Ç–æ–≤ –®–∞–±–ª–æ–Ω–∞ 4: {len(project_ids)}")

# –õ–û–ö–ê–õ–¨–ù–ê–Ø –ë–î
print("\nüè† –õ–û–ö–ê–õ–¨–ù–ê–Ø –ë–î:")
print("-" * 100)
with local_db.get_session() as session:
    local_stats = session.execute(text('''
        SELECT 
            COUNT(DISTINCT pr.id) as projects,
            COUNT(DISTINCT p.id) as products,
            COUNT(DISTINCT po.id) as offers,
            COUNT(DISTINCT pi.id) as images,
            COUNT(DISTINCT CASE WHEN pi.image_url IS NOT NULL AND pi.image_url != '' THEN pi.id END) as images_with_url
        FROM projects pr
        LEFT JOIN products p ON pr.id = p.project_id
        LEFT JOIN price_offers po ON p.id = po.product_id
        LEFT JOIN product_images pi ON p.id = pi.product_id
        WHERE pr.id = ANY(:ids)
    '''), {'ids': project_ids}).fetchone()
    
    local_projects, local_products, local_offers, local_images, local_images_url = local_stats
    
    # –û–±—Ä–∞–∑—Ü—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ
    local_samples = session.execute(text('''
        SELECT COUNT(*) FROM products p
        WHERE p.project_id = ANY(:ids) AND custom_field LIKE '%–û–±—Ä–∞–∑–µ—Ü%'
    '''), {'ids': project_ids}).fetchone()[0]
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ (—Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏)
    all_images = session.execute(text('''
        SELECT image_filename FROM product_images pi
        JOIN products p ON pi.product_id = p.id
        WHERE p.project_id = ANY(:ids)
    '''), {'ids': project_ids}).fetchall()
    
    local_additional = sum(1 for (fn,) in all_images 
                          if len(fn.replace('.png','').split('_')) >= 4 
                          and fn.replace('.png','').split('_')[-2].isdigit())
    
    print(f"   –ü—Ä–æ–µ–∫—Ç—ã:                   {local_projects:,}")
    print(f"   –¢–æ–≤–∞—Ä—ã:                    {local_products:,}")
    print(f"   –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:               {local_offers:,} ({local_offers/local_products:.2f} –Ω–∞ —Ç–æ–≤–∞—Ä)")
    print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–≥–æ:         {local_images:,}")
    print(f"   - —Å URL:                   {local_images_url:,} ({local_images_url/local_images*100:.1f}%)")
    print(f"   - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ (—Å—É—Ñ—Ñ.):  {local_additional:,}")
    print(f"   –¢–æ–≤–∞—Ä—ã —Å '–û–±—Ä–∞–∑–µ—Ü':        {local_samples:,} ({local_samples/local_products*100:.1f}%)")

# RAILWAY –ë–î
print("\nüöÇ RAILWAY –ë–î:")
print("-" * 100)
try:
    railway_session = RailwaySession()
    railway_stats = railway_session.execute(text('''
        SELECT 
            COUNT(DISTINCT pr.id) as projects,
            COUNT(DISTINCT p.id) as products,
            COUNT(DISTINCT po.id) as offers,
            COUNT(DISTINCT pi.id) as images,
            COUNT(DISTINCT CASE WHEN pi.image_url IS NOT NULL AND pi.image_url != '' THEN pi.id END) as images_with_url
        FROM projects pr
        LEFT JOIN products p ON pr.id = p.project_id
        LEFT JOIN price_offers po ON p.id = po.product_id
        LEFT JOIN product_images pi ON p.id = pi.product_id
        WHERE pr.id = ANY(:ids)
    '''), {'ids': project_ids}).fetchone()
    
    railway_projects, railway_products, railway_offers, railway_images, railway_images_url = railway_stats
    
    # –û–±—Ä–∞–∑—Ü—ã
    railway_samples = railway_session.execute(text('''
        SELECT COUNT(*) FROM products p
        WHERE p.project_id = ANY(:ids) AND custom_field LIKE '%–û–±—Ä–∞–∑–µ—Ü%'
    '''), {'ids': project_ids}).fetchone()[0]
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ
    railway_all_images = railway_session.execute(text('''
        SELECT image_filename FROM product_images pi
        JOIN products p ON pi.product_id = p.id
        WHERE p.project_id = ANY(:ids)
    '''), {'ids': project_ids}).fetchall()
    
    railway_additional = sum(1 for (fn,) in railway_all_images 
                            if len(fn.replace('.png','').split('_')) >= 4 
                            and fn.replace('.png','').split('_')[-2].isdigit())
    
    print(f"   –ü—Ä–æ–µ–∫—Ç—ã:                   {railway_projects:,}")
    print(f"   –¢–æ–≤–∞—Ä—ã:                    {railway_products:,}")
    print(f"   –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:               {railway_offers:,} ({railway_offers/railway_products:.2f} –Ω–∞ —Ç–æ–≤–∞—Ä –µ—Å–ª–∏ > 0)")
    print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–≥–æ:         {railway_images:,}")
    print(f"   - —Å URL:                   {railway_images_url:,} ({railway_images_url/railway_images*100 if railway_images > 0 else 0:.1f}%)")
    print(f"   - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ (—Å—É—Ñ—Ñ.):  {railway_additional:,}")
    print(f"   –¢–æ–≤–∞—Ä—ã —Å '–û–±—Ä–∞–∑–µ—Ü':        {railway_samples:,} ({railway_samples/railway_products*100 if railway_products > 0 else 0:.1f}%)")
    
    # –°–†–ê–í–ù–ï–ù–ò–ï
    print("\n" + "=" * 100)
    print("üìä –†–ê–ó–ù–ò–¶–ê (Railway - –õ–æ–∫–∞–ª—å–Ω–∞—è):")
    print("-" * 100)
    print(f"   –ü—Ä–æ–µ–∫—Ç—ã:                   {railway_projects - local_projects:+,}")
    print(f"   –¢–æ–≤–∞—Ä—ã:                    {railway_products - local_products:+,}")
    print(f"   –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:               {railway_offers - local_offers:+,}")
    print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–≥–æ:         {railway_images - local_images:+,}")
    print(f"   - —Å URL:                   {railway_images_url - local_images_url:+,}")
    print(f"   - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ (—Å—É—Ñ—Ñ.):  {railway_additional - local_additional:+,}")
    print(f"   –¢–æ–≤–∞—Ä—ã —Å '–û–±—Ä–∞–∑–µ—Ü':        {railway_samples - local_samples:+,}")
    
    print("\n" + "=" * 100)
    if railway_products == local_products and railway_offers == local_offers and railway_images_url == local_images_url:
        print("‚úÖ –ë–ê–ó–´ –ò–î–ï–ù–¢–ò–ß–ù–´! –ú–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    elif railway_products > 0:
        print("‚ö†Ô∏è  –ù–∞ Railway —É–∂–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –®–∞–±–ª–æ–Ω–∞ 4, –Ω–æ –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è.")
        print("    –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–∞—Å—Ç–∏—á–Ω–æ.")
    else:
        print("üì¶ –ù–∞ Railway –ù–ï–¢ –¥–∞–Ω–Ω—ã—Ö –®–∞–±–ª–æ–Ω–∞ 4. –ù—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è.")
    print("=" * 100)
    
    railway_session.close()
    
except Exception as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway: {type(e).__name__}")
    print(f"   {str(e)}")
    print("\n‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å Railway –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
    print("=" * 100)




