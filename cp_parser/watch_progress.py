#!/usr/bin/env python3
"""
–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Template 7
"""
import sys
from pathlib import Path
sys.path.insert(0, str(Path.cwd()))

from database.postgresql_manager import PostgreSQLManager
from sqlalchemy import text
import json
import time
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ Template 7
with open('TEMPLATE7_FILTERED_RESULTS.json', 'r') as f:
    data = json.load(f)
template7_ids = [int(pid) for pid in data.get('template7_projects', [])]

# ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (–ø—Ä–æ–µ–∫—Ç 1188)
BASELINE_ID = 25680

db = PostgreSQLManager()

print(f"\n{'='*80}")
print(f"üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–ê–†–°–ò–ù–ì–ê TEMPLATE 7")
print(f"{'='*80}")
print(f"–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ Template 7: {len(template7_ids)}")
print(f"–ë–∞–∑–æ–≤—ã–π ID (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑ —Ç–µ—Å—Ç–∞): {BASELINE_ID}")
print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥. –ù–∞–∂–º–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
print(f"{'='*80}\n")

try:
    prev_products = 0
    start_time = time.time()
    
    while True:
        with db.get_session() as session:
            # –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
            stats = session.execute(
                text("""
                    SELECT 
                        COUNT(DISTINCT p.project_id) as projects,
                        COUNT(p.id) as products,
                        COUNT(po.id) as offers,
                        COUNT(pi.id) as images,
                        MAX(p.id) as max_id
                    FROM products p
                    LEFT JOIN price_offers po ON p.id = po.product_id
                    LEFT JOIN product_images pi ON p.id = pi.product_id
                    WHERE p.id > :baseline
                      AND p.project_id = ANY(:pids)
                """),
                {'baseline': BASELINE_ID, 'pids': template7_ids}
            ).fetchone()
            
            projects, products, offers, images, max_id = stats
            
            # –°–∫–æ—Ä–æ—Å—Ç—å
            elapsed = time.time() - start_time
            speed = (products - prev_products) / 10 if elapsed > 10 else 0
            prev_products = products
            
            # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ –∫–æ–Ω—Ü–∞
            remaining_projects = len(template7_ids) - projects - 1  # -1 —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç 1188
            eta_minutes = (remaining_projects / (projects / (elapsed / 60))) if projects > 0 and elapsed > 60 else 0
            
            # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω (–¥–ª—è macOS/Linux)
            print("\033[2J\033[H", end="")
            
            print(f"{'='*80}")
            print(f"üìä –ü–†–û–ì–†–ï–°–° –ü–ê–†–°–ò–ù–ì–ê TEMPLATE 7 - {datetime.now().strftime('%H:%M:%S')}")
            print(f"{'='*80}\n")
            
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤:  {projects:>4} / 405  ({projects*100//405:>2}%)")
            print(f"   {'‚ñì' * (projects * 60 // 405)}{'‚ñë' * (60 - projects * 60 // 405)}\n")
            
            print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤:       {products:>6,}")
            print(f"üí∞ –û—Ñ—Ñ–µ—Ä–æ–≤:       {offers:>6,}")
            print(f"üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:   {images:>6,}\n")
            
            if products > 0:
                print(f"üìà –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:")
                print(f"   –û—Ñ—Ñ–µ—Ä–æ–≤ –Ω–∞ —Ç–æ–≤–∞—Ä:      {offers/products:.1f}")
                print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Ç–æ–≤–∞—Ä:  {images/products:.1f}\n")
            
            print(f"‚ö° –°–∫–æ—Ä–æ—Å—Ç—å:      {speed:.1f} —Ç–æ–≤–∞—Ä–æ–≤/10 —Å–µ–∫")
            
            if eta_minutes > 0:
                hours = int(eta_minutes // 60)
                mins = int(eta_minutes % 60)
                print(f"‚è±Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å:      ~{hours}—á {mins}–º–∏–Ω")
            
            print(f"\nüíæ –ü–æ—Å–ª–µ–¥–Ω–∏–π ID —Ç–æ–≤–∞—Ä–∞: {max_id}")
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
            recent = session.execute(
                text("""
                    SELECT 
                        p.project_id,
                        COUNT(p.id) as products,
                        MAX(p.id) as last_id
                    FROM products p
                    WHERE p.id > :baseline
                      AND p.project_id = ANY(:pids)
                    GROUP BY p.project_id
                    ORDER BY last_id DESC
                    LIMIT 5
                """),
                {'baseline': BASELINE_ID, 'pids': template7_ids}
            ).fetchall()
            
            print(f"\nüÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø—Ä–æ–µ–∫—Ç–æ–≤:")
            for proj_id, prods, last_id in recent:
                print(f"   #{proj_id:<5} ‚Üí {prods:>3} —Ç–æ–≤–∞—Ä–æ–≤")
            
            print(f"\n{'='*80}")
            print(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')} | –°–ª–µ–¥—É—é—â–µ–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫...")
            
        time.sleep(10)

except KeyboardInterrupt:
    print(f"\n\n‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n")
except Exception as e:
    print(f"\n\n‚ùå –û—à–∏–±–∫–∞: {e}\n")

