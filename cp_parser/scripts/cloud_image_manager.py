#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –æ–±–ª–∞—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –æ–±–ª–∞–∫–æ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏—Ö –ø–æ–≤—Ç–æ—Ä–Ω–æ
"""

import json
import os
from pathlib import Path
from typing import Set, Dict, Optional
import logging

class CloudImageManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±–ª–∞—á–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"""
    
    def __init__(self, report_file: str = 'uploaded_images_index.json'):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        
        Args:
            report_file: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–Ω–¥–µ–∫—Å–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        """
        self.report_file = Path(report_file)
        self.uploaded_filenames: Set[str] = set()
        self.uploaded_images_data: Dict[str, Dict] = {}
        self.load_uploaded_images()
    
    def load_uploaded_images(self) -> None:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
        try:
            if self.report_file.exists():
                with open(self.report_file, 'r', encoding='utf-8') as f:
                    index_data = json.load(f)
                
                self.uploaded_filenames = set(index_data.get('filenames', []))
                logging.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω –∏–Ω–¥–µ–∫—Å: {len(self.uploaded_filenames)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            else:
                logging.warning(f"–§–∞–π–ª –∏–Ω–¥–µ–∫—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.report_file}")
                self.uploaded_filenames = set()
                
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–¥–µ–∫—Å–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {e}")
            self.uploaded_filenames = set()
    
    def is_image_uploaded(self, filename: str) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ–±–ª–∞–∫–æ
        
        Args:
            filename: –ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            
        Returns:
            True –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, False –∏–Ω–∞—á–µ
        """
        return filename in self.uploaded_filenames
    
    def get_cloud_url(self, filename: str) -> Optional[str]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ–±–ª–∞—á–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        
        Args:
            filename: –ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            
        Returns:
            URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ–±–ª–∞–∫–µ –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
        """
        if self.is_image_uploaded(filename):
            return f"https://s3.ru1.storage.beget.cloud/73d16f7545b3-promogoods/images/{filename}"
        return None
    
    def add_uploaded_image(self, filename: str, size_bytes: int = 0) -> None:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö (–¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞)
        
        Args:
            filename: –ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            size_bytes: –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
        """
        self.uploaded_filenames.add(filename)
        logging.info(f"–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–Ω–¥–µ–∫—Å: {filename}")
    
    def get_upload_stats(self) -> Dict[str, int]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        """
        return {
            'total_uploaded': len(self.uploaded_filenames),
            'index_file_exists': self.report_file.exists()
        }
    
    def should_upload_image(self, filename: str) -> bool:
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        
        Args:
            filename: –ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            
        Returns:
            True –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å, False –µ—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
        """
        return not self.is_image_uploaded(filename)
    
    def get_missing_images(self, image_filenames: list) -> list:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å
        
        Args:
            image_filenames: –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            
        Returns:
            –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –æ–±–ª–∞–∫–æ
        """
        return [filename for filename in image_filenames 
                if self.should_upload_image(filename)]
    
    def get_uploaded_images(self, image_filenames: list) -> list:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        
        Args:
            image_filenames: –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            
        Returns:
            –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –æ–±–ª–∞–∫–æ
        """
        return [filename for filename in image_filenames 
                if self.is_image_uploaded(filename)]

def create_image_manager() -> CloudImageManager:
    """
    –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ–±–ª–∞—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    
    Returns:
        CloudImageManager: –≠–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    """
    return CloudImageManager()

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO)
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = create_image_manager()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = manager.get_upload_stats()
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    test_filenames = [
        "1D9Wk9TV-nc-Cq7Eic83-6MQ4G13xy4MUCLhdOCVKzAw_A4_6c.png",
        "test_new_image.jpg",
        "another_test.png"
    ]
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:")
    for filename in test_filenames:
        is_uploaded = manager.is_image_uploaded(filename)
        cloud_url = manager.get_cloud_url(filename)
        should_upload = manager.should_upload_image(filename)
        
        print(f"üìÅ {filename}")
        print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {'‚úÖ' if is_uploaded else '‚ùå'}")
        print(f"   URL: {cloud_url or '–ù–µ—Ç'}")
        print(f"   –ù—É–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å: {'–î–∞' if should_upload else '–ù–µ—Ç'}")
        print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    missing = manager.get_missing_images(test_filenames)
    uploaded = manager.get_uploaded_images(test_filenames)
    
    print(f"üìã –ù—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å: {len(missing)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print(f"üìã –£–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(uploaded)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
