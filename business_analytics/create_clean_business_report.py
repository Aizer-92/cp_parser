#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–û–ó–î–ê–ù–ò–ï –ß–ò–°–¢–û–ì–û –ë–ò–ó–ù–ï–°-–û–¢–ß–ï–¢–ê
–ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π, —Ç–æ–ª—å–∫–æ –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞
"""

from pathlib import Path
from business_final_analyzer import BusinessFinalAnalyzer

def format_number(value, format_type='number'):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª –¥–ª—è –æ—Ç—á–µ—Ç–∞"""
    if value is None:
        return '–Ω/–¥'
    
    if format_type == 'currency_rub':
        return f"{value:,.0f} ‚ÇΩ"
    elif format_type == 'currency_cny':
        return f"{value:,.1f} ¬•"
    elif format_type == 'currency_usd':
        return f"${value:,.1f}"
    elif format_type == 'number':
        return f"{value:,.0f}"
    elif format_type == 'percentage':
        return f"{value:.1f}%"
    elif format_type == 'density':
        return f"{value:,.1f} –∫–≥/–º¬≥"
    else:
        return f"{value:,.1f}"

def format_gaussian_for_report(ranges, field):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–∞—É—Å—Å–æ–≤—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞"""
    if field not in ranges:
        return '–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö'
    
    r = ranges[field]
    
    if field == 'price_rub':
        return f"{r['lower_70']:,.0f} - {r['upper_70']:,.0f} ‚ÇΩ (–º–µ–¥–∏–∞–Ω–∞ {r['median']:,.0f} ‚ÇΩ)"
    elif field == 'price_cny':
        return f"{r['lower_70']:,.1f} - {r['upper_70']:,.1f} ¬• (–º–µ–¥–∏–∞–Ω–∞ {r['median']:,.1f} ¬•)"
    elif field == 'avg_requested_tirage':
        return f"{r['lower_70']:,.0f} - {r['upper_70']:,.0f} —à—Ç (–º–µ–¥–∏–∞–Ω–∞ {r['median']:,.0f} —à—Ç)"
    elif field == 'cargo_density':
        return f"{r['lower_70']:,.1f} - {r['upper_70']:,.1f} –∫–≥/–º¬≥ (–º–µ–¥–∏–∞–Ω–∞ {r['median']:,.1f} –∫–≥/–º¬≥)"
    elif field == 'transport_tariff':
        return f"${r['lower_70']:,.1f} - ${r['upper_70']:,.1f}/–∫–≥ (–º–µ–¥–∏–∞–Ω–∞ ${r['median']:,.1f}/–∫–≥)"
    else:
        return f"{r['lower_70']:,.1f} - {r['upper_70']:,.1f}"

def create_clean_business_report():
    """–°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç–∞"""
    
    print("üìä –°–û–ó–î–ê–ù–ò–ï –ß–ò–°–¢–û–ì–û –ë–ò–ó–ù–ï–°-–û–¢–ß–ï–¢–ê")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
    db_path = Path(__file__).parent.parent / "promo_calculator" / "database" / "advanced_merged_products_clean.db"
    analyzer = BusinessFinalAnalyzer(db_path)
    
    try:
        stats, coverage, excluded_count, total_products = analyzer.run_business_analysis()
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        main_categories = [stat for stat in stats if stat['—Ç–∏–ø'] == 'main']
        subcategories = [stat for stat in stats if stat['—Ç–∏–ø'] == 'sub']
        
        total_categorized = sum(stat['—Ç–æ–≤–∞—Ä—ã'] for stat in stats)
        analyzed_products = total_products - excluded_count
        
        # –¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        top_10 = sorted(main_categories, key=lambda x: x['—Ç–æ–≤–∞—Ä—ã'], reverse=True)[:10]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        report_content = f"""# üìä –ê–Ω–∞–ª–∏–∑ –¢–æ–≤–∞—Ä–Ω–æ–≥–æ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ –ö–æ–º–ø–∞–Ω–∏–∏

**–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:** 23 —Å–µ–Ω—Ç—è–±—Ä—è 2025  
**–û—Ö–≤–∞—Ç:** {total_categorized:,} —Ç–æ–≤–∞—Ä–æ–≤ ({coverage:.1f}% –æ—Ç –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞)

---

## üéØ –ö–ª—é—á–µ–≤—ã–µ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã

### üìà –û–±—â–∏–µ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- **–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ:** {analyzed_products:,}
- **–¢–æ–≤–∞—Ä–æ–≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:** {total_categorized:,}
- **–ü–æ–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏:** {coverage:.1f}%
- **–û—Å–Ω–æ–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:** {len(main_categories)}
- **–î–µ—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–¥–∫ategor–∏–π:** {len(subcategories)}

### üèÜ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞

**–¢–û–ü-10 –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –æ–±—ä–µ–º—É:**

"""

        for i, category in enumerate(top_10, 1):
            percentage = (category['—Ç–æ–≤–∞—Ä—ã'] / analyzed_products) * 100
            report_content += f"{i:2d}. **{category['–∫–∞—Ç–µ–≥–æ—Ä–∏—è'].title()}** ‚Äî {category['—Ç–æ–≤–∞—Ä—ã']:,} —Ç–æ–≤–∞—Ä–æ–≤ ({percentage:.1f}% –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞)\n"
        
        report_content += f"""
---

## üí∞ –¶–µ–Ω–æ–≤–∞—è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞

### üéØ –†–µ–∞–ª—å–Ω—ã–µ 70% –î–∏–∞–ø–∞–∑–æ–Ω—ã –ø–æ –ö–∞—Ç–µ–≥–æ—Ä–∏—è–º
*–ü–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ 70% —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫—É–ø–æ–∫*

"""

        # –¶–µ–Ω–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ —Ç–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        for category in top_10[:5]:
            report_content += f"#### {category['–∫–∞—Ç–µ–≥–æ—Ä–∏—è'].title()}\n"
            report_content += f"- **–¢–æ–≤–∞—Ä–æ–≤:** {category['—Ç–æ–≤–∞—Ä—ã']:,}\n"
            
            if category['gaussian_ranges']:
                if 'price_rub' in category['gaussian_ranges']:
                    report_content += f"- **–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω:** {format_gaussian_for_report(category['gaussian_ranges'], 'price_rub')}\n"
                if 'avg_requested_tirage' in category['gaussian_ranges']:
                    report_content += f"- **–¢–∏—Ä–∞–∂–∏:** {format_gaussian_for_report(category['gaussian_ranges'], 'avg_requested_tirage')}\n"
                if 'transport_tariff' in category['gaussian_ranges']:
                    report_content += f"- **–õ–æ–≥–∏—Å—Ç–∏–∫–∞:** {format_gaussian_for_report(category['gaussian_ranges'], 'transport_tariff')}\n"
            
            report_content += "\n"

        report_content += f"""---

## üì¶ –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞

### üöö –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –î–æ—Å—Ç–∞–≤–∫–∏

"""

        # –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        logistics_categories = []
        for category in main_categories[:10]:
            if category['gaussian_ranges'] and 'transport_tariff' in category['gaussian_ranges'] and 'cargo_density' in category['gaussian_ranges']:
                logistics_categories.append(category)

        for category in logistics_categories[:5]:
            report_content += f"**{category['–∫–∞—Ç–µ–≥–æ—Ä–∏—è'].title()}**\n"
            if 'cargo_density' in category['gaussian_ranges']:
                report_content += f"- –ü–ª–æ—Ç–Ω–æ—Å—Ç—å: {format_gaussian_for_report(category['gaussian_ranges'], 'cargo_density')}\n"
            if 'transport_tariff' in category['gaussian_ranges']:
                report_content += f"- –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: {format_gaussian_for_report(category['gaussian_ranges'], 'transport_tariff')}\n"
            report_content += "\n"

        report_content += f"""---

## üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –ê–Ω–∞–ª–∏–∑ –ö–∞—Ç–µ–≥–æ—Ä–∏–π

### üìã –ü–æ–ª–Ω–∞—è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞

"""

        # –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        sorted_main = sorted(main_categories, key=lambda x: x['—Ç–æ–≤–∞—Ä—ã'], reverse=True)
        
        for main_cat in sorted_main:
            percentage = (main_cat['—Ç–æ–≤–∞—Ä—ã'] / analyzed_products) * 100
            report_content += f"#### {main_cat['–∫–∞—Ç–µ–≥–æ—Ä–∏—è'].title()}\n"
            report_content += f"- **–¢–æ–≤–∞—Ä–æ–≤:** {main_cat['—Ç–æ–≤–∞—Ä—ã']:,} ({percentage:.1f}% –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞)\n"
            
            # –ú–µ–¥–∏–∞–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
            if main_cat['–º–µ–¥–∏–∞–Ω–∞_—Ü–µ–Ω—ã_rub']:
                report_content += f"- **–ú–µ–¥–∏–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞:** {format_number(main_cat['–º–µ–¥–∏–∞–Ω–∞_—Ü–µ–Ω—ã_rub'], 'currency_rub')}\n"
            if main_cat['—Å—Ä–µ–¥–Ω–∏–π_—Ç–∏—Ä–∞–∂']:
                report_content += f"- **–°—Ä–µ–¥–Ω–∏–π —Ç–∏—Ä–∞–∂:** {format_number(main_cat['—Å—Ä–µ–¥–Ω–∏–π_—Ç–∏—Ä–∞–∂'], 'number')} —à—Ç\n"
            
            # –†–µ–∞–ª—å–Ω—ã–µ 70% –¥–∏–∞–ø–∞–∑–æ–Ω—ã
            if main_cat['gaussian_ranges']:
                report_content += f"- **–î–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (—Ä–µ–∞–ª—å–Ω—ã–µ 70% —Ç–æ–≤–∞—Ä–æ–≤):**\n"
                if 'price_rub' in main_cat['gaussian_ranges']:
                    report_content += f"  - –¶–µ–Ω—ã: {format_gaussian_for_report(main_cat['gaussian_ranges'], 'price_rub')}\n"
                if 'avg_requested_tirage' in main_cat['gaussian_ranges']:
                    report_content += f"  - –¢–∏—Ä–∞–∂–∏: {format_gaussian_for_report(main_cat['gaussian_ranges'], 'avg_requested_tirage')}\n"
            
            # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            related_subcats = [s for s in subcategories if s['—Ä–æ–¥–∏—Ç–µ–ª—å'] == main_cat['–∫–∞—Ç–µ–≥–æ—Ä–∏—è']]
            if related_subcats:
                report_content += f"- **–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏:**\n"
                for subcat in sorted(related_subcats, key=lambda x: x['—Ç–æ–≤–∞—Ä—ã'], reverse=True):
                    sub_percentage = (subcat['—Ç–æ–≤–∞—Ä—ã'] / main_cat['—Ç–æ–≤–∞—Ä—ã']) * 100
                    report_content += f"  - {subcat['–∫–∞—Ç–µ–≥–æ—Ä–∏—è']}: {subcat['—Ç–æ–≤–∞—Ä—ã']:,} —Ç–æ–≤–∞—Ä–æ–≤ ({sub_percentage:.0f}%)\n"
            
            report_content += "\n"

        report_content += f"""---

## üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ë–∏–∑–Ω–µ—Å–∞

### üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

1. **–§–æ–∫—É—Å –Ω–∞ –ª–∏–¥–µ—Ä–æ–≤** ‚Äî –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{top_10[0]['–∫–∞—Ç–µ–≥–æ—Ä–∏—è']}", "{top_10[1]['–∫–∞—Ç–µ–≥–æ—Ä–∏—è']}", "{top_10[2]['–∫–∞—Ç–µ–≥–æ—Ä–∏—è']}" —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç {sum(cat['—Ç–æ–≤–∞—Ä—ã'] for cat in top_10[:3]) / analyzed_products * 100:.1f}% –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞

2. **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–∫—É–ø–æ–∫** ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ 70% –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∏—Ä–∞–∂–µ–π

3. **–¶–µ–Ω–æ–≤–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ** ‚Äî —Ä–µ–∞–ª—å–Ω—ã–µ 70% —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–º–æ–≥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ —Ü–µ–Ω—ã

### üí° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –†–æ—Å—Ç–∞

"""

        # –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ —Ä–æ—Å—Ç–∞
        growth_opportunities = []
        for category in main_categories:
            if 20 <= category['—Ç–æ–≤–∞—Ä—ã'] <= 100:  # –°—Ä–µ–¥–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º
                growth_opportunities.append(category)
        
        growth_opportunities = sorted(growth_opportunities, key=lambda x: x['—Ç–æ–≤–∞—Ä—ã'], reverse=True)[:5]
        
        for i, category in enumerate(growth_opportunities, 1):
            report_content += f"{i}. **{category['–∫–∞—Ç–µ–≥–æ—Ä–∏—è'].title()}** ‚Äî {category['—Ç–æ–≤–∞—Ä—ã']} —Ç–æ–≤–∞—Ä–æ–≤, –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è\n"

        report_content += f"""

### üìà –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ó–∞–∫—É–ø–æ–∫

**–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ 70% –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è:**
- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Ç–∏—Ä–∞–∂–µ–π –∑–∞–∫–∞–∑–æ–≤
- –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞—Ç—Ä–∞—Ç  
- –¶–µ–Ω–æ–≤–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–ª–∞–¥—Å–∫–∏—Ö –∑–∞–ø–∞—Å–æ–≤

---

## üìã –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–ê–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞–ª —Ö–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Å {len(main_categories)} –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤. 

**–ö–ª—é—á–µ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:**
- ‚úÖ {coverage:.1f}% —Ç–æ–≤–∞—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
- ‚úÖ {len([s for s in stats if s['gaussian_ranges']])} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–º–µ—é—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –∑–Ω–∞—á–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
- ‚úÖ –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å {len(subcategories)} –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞

**–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è:**
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–∫—É–ø–æ—á–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
- –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

---

*–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ {total_products:,} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.*
*–†–µ–∞–ª—å–Ω—ã–µ 70% –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.*
"""

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        output_file = Path(__file__).parent / 'CLEAN_BUSINESS_REPORT.md'
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(report_content)
        
        print(f"‚úÖ –ß–∏—Å—Ç—ã–π –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {output_file}")
        print(f"üìã –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:")
        print(f"  ‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞")
        print(f"  ‚Ä¢ –¶–µ–Ω–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å –≥–∞—É—Å—Å–æ–≤—Å–∫–∏–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏")
        print(f"  ‚Ä¢ –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
        print(f"  ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö {len(main_categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print(f"  ‚Ä¢ –ë–∏–∑–Ω–µ—Å-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–ª–∞–Ω—ã —Ä–æ—Å—Ç–∞")
        print(f"")
        print(f"üéØ –û–°–û–ë–ï–ù–ù–û–°–¢–ò –û–¢–ß–ï–¢–ê:")
        print(f"  ‚Ä¢ –ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π ‚Äî —Ç–æ–ª—å–∫–æ –±–∏–∑–Ω–µ—Å-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        print(f"  ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ 70% –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–¥–µ–ª—å–Ω–æ")
        print(f"  ‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π")
        print(f"  ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π")
        
        return output_file
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        analyzer.conn.close()

if __name__ == "__main__":
    create_clean_business_report()
