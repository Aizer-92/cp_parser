#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–∏—Ä–∞–∂–∞ - –≥–¥–µ —Ç–µ—Ä—è—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
"""

import openpyxl
from pathlib import Path
import sys
sys.path.append(str(Path(__file__).parent))

from scripts.complete_parsing_pipeline_v5 import EnhancedParser

def test_quantity_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–∏—Ä–∞–∂–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö"""
    
    parser = EnhancedParser()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã  
    test_values = [
        2130.0,   # –†–µ–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ E17
        2150.0,   # –†–µ–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ E19  
        "2130",   # –ö–∞–∫ —Å—Ç—Ä–æ–∫–∞
        "2150.0", # –ö–∞–∫ —Å—Ç—Ä–æ–∫–∞ —Å .0
        3.67,     # –¶–µ–Ω–∞ (–ù–ï –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∫–∞–∫ —Ç–∏—Ä–∞–∂)
        3,        # –¢–æ —á—Ç–æ —Å–µ–π—á–∞—Å –≤ –ë–î
        "3",      # –ö–∞–∫ —Å—Ç—Ä–æ–∫–∞
        None,     # –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    ]
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–ò–î–ê–¶–ò–ò –¢–ò–†–ê–ñ–ê:")
    print("=" * 50)
    
    for value in test_values:
        try:
            result = parser.validate_quantity_enhanced(value)
            print(f"–ó–Ω–∞—á–µ–Ω–∏–µ: {value} ({type(value).__name__}) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        except Exception as e:
            print(f"–ó–Ω–∞—á–µ–Ω–∏–µ: {value} ({type(value).__name__}) ‚Üí –û–®–ò–ë–ö–ê: {e}")

def debug_real_excel_parsing():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ–º —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ Excel"""
    
    file_path = "/Users/bakirovresad/Downloads/Reshad 1/projects/commercial_proposals_parser_clean/storage/excel_files/sheet_1nav9w2d_public.xlsx"
    
    if not Path(file_path).exists():
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"\nüìÅ –û–¢–õ–ê–î–ö–ê –†–ï–ê–õ–¨–ù–û–ì–û –ü–ê–†–°–ò–ù–ì–ê:")
    print("=" * 50)
    
    wb = openpyxl.load_workbook(file_path, data_only=True)
    ws = wb.active
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–æ–∫—É 17 (–Å–ª–æ—á–Ω–∞—è –∏–≥—Ä—É—à–∫–∞)
    row = 17
    print(f"üîç –°–¢–†–û–ö–ê {row}:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ E, F, G (5, 6, 7)
    for col in range(5, 8):
        cell_value = ws.cell(row=row, column=col).value
        col_letter = openpyxl.utils.get_column_letter(col)
        print(f"   {col_letter}{row}: {cell_value} (—Ç–∏–ø: {type(cell_value).__name__})")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        parser = EnhancedParser()
        
        if col == 5:  # –ö–æ–ª–æ–Ω–∫–∞ E - —Ç–∏—Ä–∞–∂
            qty_result = parser.validate_quantity_enhanced(cell_value)
            print(f"      ‚Üí validate_quantity_enhanced: {qty_result}")
        
        elif col == 6:  # –ö–æ–ª–æ–Ω–∫–∞ F - —Ü–µ–Ω–∞ USD
            price_result = parser.validate_price_enhanced(cell_value)
            print(f"      ‚Üí validate_price_enhanced: {price_result}")
    
    wb.close()

def debug_columns_detection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –∫–æ–ª–æ–Ω–∫–∏"""
    
    parser = EnhancedParser()
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∫–æ–ª–æ–Ω–æ–∫ –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø–∞—Ä—Å–µ—Ä–µ
    print(f"\nüéØ –û–¢–õ–ê–î–ö–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ö–û–õ–û–ù–û–ö:")
    print("=" * 50)
    
    # –ò–∑ –∞–Ω–∞–ª–∏–∑–∞ –∑–Ω–∞–µ–º —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏:
    # E: "–¢–∏—Ä–∞–∂, —à—Ç" 
    # F: "–î–æ—Å—Ç–∞–≤–∫–∞ –ñ–î" -> "–¶–µ–Ω–∞ –∑–∞ —à—Ç., $"
    # G: "–¶–µ–Ω–∞ –∑–∞ —à—Ç., —Ä—É–±"
    
    headers = {
        5: "–¢–∏—Ä–∞–∂, —à—Ç",
        6: "–¶–µ–Ω–∞ –∑–∞ —à—Ç., $", 
        7: "–¶–µ–Ω–∞ –∑–∞ —à—Ç., —Ä—É–±"
    }
    
    for col_num, header in headers.items():
        col_letter = openpyxl.utils.get_column_letter(col_num)
        print(f"–ö–æ–ª–æ–Ω–∫–∞ {col_letter} ({col_num}): '{header}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –ø–∞—Ä—Å–µ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–æ–ª–æ–Ω–∫–∏
        header_lower = header.lower()
        
        if any(word in header_lower for word in ['—Ç–∏—Ä–∞–∂', 'quantity', '—à—Ç', 'pcs']):
            print(f"   ‚Üí –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ QUANTITY ‚úÖ")
        elif any(word in header_lower for word in ['price', '—Ü–µ–Ω–∞', '$', 'usd']):
            print(f"   ‚Üí –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ PRICE_USD ‚úÖ")
        elif any(word in header_lower for word in ['—Ä—É–±', 'rub', '‚ÇΩ']):
            print(f"   ‚Üí –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ PRICE_RUB ‚úÖ")
        else:
            print(f"   ‚Üí –ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–ê ‚ùå")

if __name__ == "__main__":
    test_quantity_validation()
    debug_real_excel_parsing()
    debug_columns_detection()


