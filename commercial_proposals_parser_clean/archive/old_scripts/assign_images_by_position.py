#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –ø–æ–∑–∏—Ü–∏—è–º (—Å—Ç—Ä–æ–∫–∞ –∏ —Å—Ç–æ–ª–±–µ—Ü)
"""

import sys
import os
import re
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent.absolute()))

from database.manager_v4 import DatabaseManager
from database.models_v4 import SheetMetadata, Product, ProductImage

def extract_position_from_filename(filename):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é (—Å—Ç—Ä–æ–∫–∞, —Å—Ç–æ–ª–±–µ—Ü) –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    # –ü—Ä–∏–º–µ—Ä—ã: original_sheet_A4_main.png, –ú–µ—Ä—á –¥–ª—è Sense_1758096973_A13_main.png
    match = re.search(r'([A-Z]+)(\d+)', filename)
    if match:
        column = match.group(1)
        row = int(match.group(2))
        return row, column
    return None, None

def assign_images_by_position():
    """–ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º –ø–æ –ø–æ–∑–∏—Ü–∏—è–º"""
    session = DatabaseManager.get_session()
    
    print("=== –ü–†–ò–í–Ø–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ü–û –ü–û–ó–ò–¶–ò–Ø–ú ===\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    images_dir = Path("storage/images")
    all_images = list(images_dir.glob("*.png"))
    
    print(f"üì• –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ: {len(all_images)}")
    
    assigned_count = 0
    skipped_count = 0
    
    for image_path in all_images:
        filename = image_path.name
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø—ã (A1)
        if 'A1' in filename:
            print(f"   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø: {filename}")
            skipped_count += 1
            continue
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
        row, column = extract_position_from_filename(filename)
        
        if not row or not column:
            print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ø–æ–∑–∏—Ü–∏—é –∏–∑: {filename}")
            continue
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: main –µ—Å–ª–∏ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ A, additional –∏–Ω–∞—á–µ
        image_type = 'main' if column == 'A' else 'additional'
        
        # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä, –≤ –¥–∏–∞–ø–∞–∑–æ–Ω —Å—Ç—Ä–æ–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ø–∞–¥–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        products = session.query(Product).filter(
            Product.start_row.isnot(None),
            Product.end_row.isnot(None)
        ).all()
        
        correct_product = None
        for product in products:
            if product.start_row <= row <= product.end_row:
                correct_product = product
                break
        
        if not correct_product:
            print(f"   ‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ {column}{row}: {filename}")
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ë–î
        existing_image = session.query(ProductImage).filter(
            ProductImage.local_path == str(image_path)
        ).first()
        
        if existing_image:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            existing_image.product_id = correct_product.id
            existing_image.image_type = image_type
            existing_image.row = row
            existing_image.column = column
            session.add(existing_image)
            print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {filename} ‚Üí {correct_product.name} ({column}{row}, {image_type})")
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            try:
                from PIL import Image as PILImage
                with PILImage.open(image_path) as img:
                    width, height = img.size
            except:
                width, height = 0, 0
            
            new_image = ProductImage(
                product_id=correct_product.id,
                local_path=str(image_path),
                image_type=image_type,
                file_size=image_path.stat().st_size,
                width=width,
                height=height,
                format='png',
                row=row,
                column=column
            )
            
            session.add(new_image)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ: {filename} ‚Üí {correct_product.name} ({column}{row}, {image_type})")
        
        assigned_count += 1
    
    session.commit()
    session.close()
    
    print(f"\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===")
    print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {assigned_count}")
    print(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ –ª–æ–≥–æ—Ç–∏–ø–æ–≤: {skipped_count}")
    print(f"‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    try:
        assign_images_by_position()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

