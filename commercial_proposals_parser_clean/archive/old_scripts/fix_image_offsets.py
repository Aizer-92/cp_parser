#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —É—á–µ—Ç–æ–º —Å–¥–≤–∏–≥–∞
"""

import sys
import os
import re
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent.absolute()))

from database.manager_v4 import DatabaseManager
from database.models_v4 import SheetMetadata, Product, ProductImage

def fix_image_offsets():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤—è–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —É—á–µ—Ç–æ–º —Å–¥–≤–∏–≥–∞"""
    session = DatabaseManager.get_session()
    
    print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–ò–í–Ø–ó–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –° –£–ß–ï–¢–û–ú –°–î–í–ò–ì–ê ===\n")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º original_sheet
    original_sheet = session.query(SheetMetadata).filter(
        SheetMetadata.sheet_title == 'original_sheet'
    ).first()
    
    if not original_sheet:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'original_sheet' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"üìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É: {original_sheet.sheet_title}")
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ A3 (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä—É)
    a3_image_path = "storage/images/original_sheet_A3_main.png"
    
    if os.path.exists(a3_image_path):
        # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä
        cardholder = session.query(Product).filter(
            Product.name == "–ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä",
            Product.sheet_id == original_sheet.id
        ).first()
        
        if cardholder:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ë–î
            existing_image = session.query(ProductImage).filter(
                ProductImage.local_path == a3_image_path
            ).first()
            
            if not existing_image:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                from PIL import Image as PILImage
                try:
                    with PILImage.open(a3_image_path) as img:
                        width, height = img.size
                except:
                    width, height = 0, 0
                
                new_image = ProductImage(
                    product_id=cardholder.id,
                    local_path=a3_image_path,
                    image_type='main',
                    file_size=os.path.getsize(a3_image_path),
                    width=width,
                    height=height,
                    format='png'
                )
                
                session.add(new_image)
                session.commit()
                
                print(f"   ‚úÖ {a3_image_path} ‚Üí –ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä (—Å—Ç—Ä–æ–∫–∏ {cardholder.start_row}-{cardholder.end_row})")
            else:
                print(f"   ‚ÑπÔ∏è  {a3_image_path} —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Ç–æ–≤–∞—Ä—É ID {existing_image.product_id}")
        else:
            print(f"   ‚ùå –¢–æ–≤–∞—Ä '–ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print(f"   ‚ùå –§–∞–π–ª {a3_image_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ A4 (–µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ–∂–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä—É)
    a4_image_path = "storage/images/original_sheet_A4_main.png"
    
    if os.path.exists(a4_image_path):
        cardholder = session.query(Product).filter(
            Product.name == "–ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä",
            Product.sheet_id == original_sheet.id
        ).first()
        
        if cardholder:
            existing_image = session.query(ProductImage).filter(
                ProductImage.local_path == a4_image_path
            ).first()
            
            if not existing_image:
                from PIL import Image as PILImage
                try:
                    with PILImage.open(a4_image_path) as img:
                        width, height = img.size
                except:
                    width, height = 0, 0
                
                new_image = ProductImage(
                    product_id=cardholder.id,
                    local_path=a4_image_path,
                    image_type='main',
                    file_size=os.path.getsize(a4_image_path),
                    width=width,
                    height=height,
                    format='png'
                )
                
                session.add(new_image)
                session.commit()
                
                print(f"   ‚úÖ {a4_image_path} ‚Üí –ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä (—Å—Ç—Ä–æ–∫–∏ {cardholder.start_row}-{cardholder.end_row})")
            else:
                print(f"   ‚ÑπÔ∏è  {a4_image_path} —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Ç–æ–≤–∞—Ä—É ID {existing_image.product_id}")
    
    session.close()
    print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    try:
        fix_image_offsets()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()