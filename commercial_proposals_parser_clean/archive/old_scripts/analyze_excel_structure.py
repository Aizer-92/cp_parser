#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel —Ñ–∞–π–ª–æ–≤ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import sys
import os
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent.absolute()))

import openpyxl
from database.manager_v4 import DatabaseManager
from database.models_v4 import SheetMetadata

def analyze_excel_structure():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    session = DatabaseManager.get_session()
    
    print("=== –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ EXCEL –§–ê–ô–õ–û–í ===\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    sheets = session.query(SheetMetadata).all()
    
    for sheet in sheets:
        print(f"üìä –¢–∞–±–ª–∏—Ü–∞: {sheet.sheet_title}")
        print(f"   –§–∞–π–ª: {sheet.local_file_path}")
        
        if not os.path.exists(sheet.local_file_path):
            print(f"   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {sheet.local_file_path}")
            continue
            
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º Excel —Ñ–∞–π–ª
            wb = openpyxl.load_workbook(sheet.local_file_path)
            ws = wb.active
            
            print(f"   –†–∞–∑–º–µ—Ä: {ws.max_row} —Å—Ç—Ä–æ–∫, {ws.max_column} —Å—Ç–æ–ª–±—Ü–æ–≤")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            print("   –ü–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫:")
            for row in range(1, min(21, ws.max_row + 1)):
                row_data = []
                for col in range(1, min(6, ws.max_column + 1)):  # –ü–µ—Ä–≤—ã–µ 5 —Å—Ç–æ–ª–±—Ü–æ–≤
                    cell_value = ws.cell(row=row, column=col).value
                    if cell_value:
                        row_data.append(f"{col}:{str(cell_value)[:20]}")
                    else:
                        row_data.append(f"{col}:")
                
                if any(row_data):
                    print(f"     –°—Ç—Ä–æ–∫–∞ {row:2d}: {' | '.join(row_data)}")
            
            # –ò—â–µ–º —Å—Ç–æ–ª–±–µ—Ü —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
            name_column = None
            for col in range(1, ws.max_column + 1):
                for row in range(1, min(10, ws.max_row + 1)):
                    cell_value = ws.cell(row=row, column=col).value
                    if cell_value and '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ' in str(cell_value).lower():
                        name_column = col
                        print(f"   üìù –°—Ç–æ–ª–±–µ—Ü —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏: {col} (–Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–æ–∫–µ {row})")
                        break
                if name_column:
                    break
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —Å—Ç–æ–ª–±—Ü–µ –Ω–∞–∑–≤–∞–Ω–∏–π
            if name_column:
                print(f"   –¢–æ–≤–∞—Ä—ã –≤ —Å—Ç–æ–ª–±—Ü–µ {name_column}:")
                for row in range(1, min(50, ws.max_row + 1)):
                    cell_value = ws.cell(row=row, column=name_column).value
                    if cell_value and str(cell_value).strip() and '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ' not in str(cell_value).lower():
                        print(f"     –°—Ç—Ä–æ–∫–∞ {row:2d}: {str(cell_value)[:50]}")
            
            wb.close()
            print()
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
            print()
    
    session.close()

if __name__ == "__main__":
    try:
        analyze_excel_structure()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
