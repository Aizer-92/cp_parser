#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Ç–æ–≤–∞—Ä–∞–º
"""

import sys
import os
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent.absolute()))

from database.manager_v4 import DatabaseManager
from database.models_v4 import Product, ProductImage

def create_test_image(image_path, content="Test Image"):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    os.makedirs(os.path.dirname(image_path), exist_ok=True)
    with open(image_path, 'w') as f:
        f.write(content)

def create_test_images_with_correct_positioning():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Ç–æ–≤–∞—Ä–∞–º"""
    session = DatabaseManager.get_session()
    
    print("=== –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –° –ü–†–ê–í–ò–õ–¨–ù–û–ô –ü–†–ò–í–Ø–ó–ö–û–ô ===\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    products = session.query(Product).all()
    
    total_created = 0
    
    for product in products:
        print(f"üì¶ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä: {product.name}")
        print(f"   –î–∏–∞–ø–∞–∑–æ–Ω —Å—Ç—Ä–æ–∫: {product.start_row}-{product.end_row}")
        
        if not product.start_row or not product.end_row:
            print(f"   ‚ö†Ô∏è  –£ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–∏–∞–ø–∞–∑–æ–Ω —Å—Ç—Ä–æ–∫")
            continue
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ start_row
        main_image_path = f"storage/images/{product.sheet_id}_{product.id}_A{product.start_row}_main_{product.name.replace(' ', '_')}.png"
        create_test_image(main_image_path, f"Main image for {product.name} (row {product.start_row})")
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
        main_image = ProductImage(
            product_id=product.id,
            local_path=main_image_path,
            image_type='main',
            file_size=len(f"Main image for {product.name} (row {product.start_row})"),
            width=100,
            height=100,
            format='png'
        )
        session.add(main_image)
        total_created += 1
        
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: A{product.start_row}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–æ–∫ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        for row in range(product.start_row + 1, min(product.end_row + 1, product.start_row + 4)):  # –ú–∞–∫—Å–∏–º—É–º 3 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö
            additional_image_path = f"storage/images/{product.sheet_id}_{product.id}_B{row}_additional_{product.name.replace(' ', '_')}.png"
            create_test_image(additional_image_path, f"Additional image for {product.name} (row {row})")
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
            additional_image = ProductImage(
                product_id=product.id,
                local_path=additional_image_path,
                image_type='additional',
                file_size=len(f"Additional image for {product.name} (row {row})"),
                width=100,
                height=100,
                format='png'
            )
            session.add(additional_image)
            total_created += 1
            
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: B{row}")
    
    session.commit()
    session.close()
    
    print(f"\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===")
    print(f"–°–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_created}")
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    try:
        create_test_images_with_correct_positioning()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

