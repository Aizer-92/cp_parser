#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü–µ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ç–∏—Ä–∞–∂–∞–º–∏
"""

import openpyxl
from advanced_normalizer import AdvancedNormalizer

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ç–∏—Ä–∞–∂–∞–º–∏
def create_test_table():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏–º–µ—é—â–∏–º–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç–∏—Ä–∞–∂–µ–π"""
    
    wb = openpyxl.Workbook()
    ws = wb.active
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    ws.cell(row=1, column=1, value="–§–æ—Ç–æ")
    ws.cell(row=1, column=2, value="–ú–µ–Ω–µ–¥–∂–µ—Ä: –¢–µ—Å—Ç\n–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ")
    ws.cell(row=1, column=3, value="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
    ws.cell(row=1, column=4, value="–¢–∏—Ä–∞–∂, —à—Ç")
    ws.cell(row=1, column=5, value="–¶–µ–Ω–∞ –ñ–î, $")
    ws.cell(row=1, column=6, value="–¶–µ–Ω–∞ –ñ–î, ‚ÇΩ")
    ws.cell(row=1, column=7, value="–¶–µ–Ω–∞ –ê–í–ò–ê, $") 
    ws.cell(row=1, column=8, value="–¶–µ–Ω–∞ –ê–í–ò–ê, ‚ÇΩ")
    ws.cell(row=1, column=9, value="–û–±—Ä–∞–∑–µ—Ü, ‚ÇΩ")
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ 2-—è —Å—Ç—Ä–æ–∫–∞
    ws.cell(row=2, column=2, value="")
    ws.cell(row=2, column=3, value="")
    ws.cell(row=2, column=4, value="")
    ws.cell(row=2, column=5, value="")
    ws.cell(row=2, column=6, value="")
    ws.cell(row=2, column=7, value="")
    ws.cell(row=2, column=8, value="")
    ws.cell(row=2, column=9, value="")
    
    # –î–∞–Ω–Ω—ã–µ - –¢–æ–≤–∞—Ä 1 —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–∏—Ä–∞–∂–∞–º–∏
    ws.cell(row=3, column=2, value="–ö—Ä—É–∂–∫–∞ –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è")  # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–æ–≤–∞—Ä–∞
    ws.cell(row=3, column=3, value="–ú–∞—Ç–µ—Ä–∏–∞–ª: –∫–µ—Ä–∞–º–∏–∫–∞\n–†–∞–∑–º–µ—Ä: 330–º–ª")
    ws.cell(row=3, column=4, value=1000)  # 1000 —à—Ç
    ws.cell(row=3, column=5, value=2.50)  # –ñ–î $2.50
    ws.cell(row=3, column=6, value=225)   # –ñ–î 225‚ÇΩ
    ws.cell(row=3, column=7, value=2.80)  # –ê–í–ò–ê $2.80
    ws.cell(row=3, column=8, value=252)   # –ê–í–ò–ê 252‚ÇΩ
    ws.cell(row=3, column=9, value=1500)  # –û–±—Ä–∞–∑–µ—Ü 1500‚ÇΩ
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–∏—Ä–∞–∂–∏ –¥–ª—è —Ç–æ–π –∂–µ –∫—Ä—É–∂–∫–∏ (–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è!)
    ws.cell(row=4, column=2, value="")    # –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ - —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    ws.cell(row=4, column=3, value="")    # –ü—É—Å—Ç—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    ws.cell(row=4, column=4, value=5000)  # 5000 —à—Ç - –¥—Ä—É–≥–∞—è —Ü–µ–Ω–∞
    ws.cell(row=4, column=5, value=2.20)  # –ñ–î $2.20
    ws.cell(row=4, column=6, value=198)   # –ñ–î 198‚ÇΩ
    ws.cell(row=4, column=7, value=2.45)  # –ê–í–ò–ê $2.45
    ws.cell(row=4, column=8, value=220)   # –ê–í–ò–ê 220‚ÇΩ
    ws.cell(row=4, column=9, value=1500)  # –û–±—Ä–∞–∑–µ—Ü —Ç–æ—Ç –∂–µ
    
    ws.cell(row=5, column=2, value="")    # –ï—â–µ –æ–¥–∏–Ω —Ç–∏—Ä–∞–∂ —Ç–æ–π –∂–µ –∫—Ä—É–∂–∫–∏
    ws.cell(row=5, column=3, value="")
    ws.cell(row=5, column=4, value=10000) # 10000 —à—Ç - –µ—â–µ –¥–µ—à–µ–≤–ª–µ
    ws.cell(row=5, column=5, value=1.95)  # –ñ–î $1.95
    ws.cell(row=5, column=6, value=176)   # –ñ–î 176‚ÇΩ
    ws.cell(row=5, column=7, value=2.15)  # –ê–í–ò–ê $2.15
    ws.cell(row=5, column=8, value=194)   # –ê–í–ò–ê 194‚ÇΩ
    ws.cell(row=5, column=9, value=1500)  # –û–±—Ä–∞–∑–µ—Ü —Ç–æ—Ç –∂–µ
    
    # –¢–æ–≤–∞—Ä 2 —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–∏—Ä–∞–∂–∞–º–∏
    ws.cell(row=6, column=2, value="–†—É—á–∫–∞ —à–∞—Ä–∏–∫–æ–≤–∞—è")  # –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä
    ws.cell(row=6, column=3, value="–ú–∞—Ç–µ—Ä–∏–∞–ª: –ø–ª–∞—Å—Ç–∏–∫\n–¶–≤–µ—Ç: —Å–∏–Ω–∏–π")
    ws.cell(row=6, column=4, value=500)   # 500 —à—Ç
    ws.cell(row=6, column=5, value=0.65)  # –ñ–î $0.65
    ws.cell(row=6, column=6, value=58)    # –ñ–î 58‚ÇΩ
    ws.cell(row=6, column=7, value=0.75)  # –ê–í–ò–ê $0.75
    ws.cell(row=6, column=8, value=68)    # –ê–í–ò–ê 68‚ÇΩ
    ws.cell(row=6, column=9, value=150)   # –û–±—Ä–∞–∑–µ—Ü 150‚ÇΩ
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∏—Ä–∞–∂ —Ä—É—á–∫–∏
    ws.cell(row=7, column=2, value="")    # –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    ws.cell(row=7, column=3, value="")
    ws.cell(row=7, column=4, value=2000)  # 2000 —à—Ç
    ws.cell(row=7, column=5, value=0.55)  # –ñ–î $0.55
    ws.cell(row=7, column=6, value=50)    # –ñ–î 50‚ÇΩ
    ws.cell(row=7, column=7, value=0.62)  # –ê–í–ò–ê $0.62
    ws.cell(row=7, column=8, value=56)    # –ê–í–ò–ê 56‚ÇΩ
    ws.cell(row=7, column=9, value=150)   # –û–±—Ä–∞–∑–µ—Ü —Ç–æ—Ç –∂–µ
    
    # –¢–æ–≤–∞—Ä 3 —Å –æ–¥–Ω–∏–º —Ç–∏—Ä–∞–∂–æ–º (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
    ws.cell(row=8, column=2, value="–ë–ª–æ–∫–Ω–æ—Ç –ê5")
    ws.cell(row=8, column=3, value="–ú–∞—Ç–µ—Ä–∏–∞–ª: –±—É–º–∞–≥–∞\n50 –ª–∏—Å—Ç–æ–≤")
    ws.cell(row=8, column=4, value=1000)
    ws.cell(row=8, column=5, value=1.25)
    ws.cell(row=8, column=6, value=112)
    ws.cell(row=8, column=7, value=1.40)
    ws.cell(row=8, column=8, value=126)
    ws.cell(row=8, column=9, value=800)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    test_file = 'storage/excel_files/test_multiple_quantities.xlsx'
    wb.save(test_file)
    wb.close()
    
    return test_file

def test_advanced_normalizer():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–î–í–ò–ù–£–¢–û–ì–û –ù–û–†–ú–ê–õ–ò–ó–ê–¢–û–†–ê")
    print("=" * 80)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    test_file = create_test_table()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞: {test_file}")
    
    print("\nüìã –°–¢–†–£–ö–¢–£–†–ê –¢–ï–°–¢–û–í–û–ô –¢–ê–ë–õ–ò–¶–´:")
    print("   ‚Ä¢ –ö—Ä—É–∂–∫–∞ –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è: 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ç–∏—Ä–∞–∂–µ–π (1000, 5000, 10000 —à—Ç)")
    print("   ‚Ä¢ –†—É—á–∫–∞ —à–∞—Ä–∏–∫–æ–≤–∞—è: 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ç–∏—Ä–∞–∂–µ–π (500, 2000 —à—Ç)")
    print("   ‚Ä¢ –ë–ª–æ–∫–Ω–æ—Ç –ê5: 1 –≤–∞—Ä–∏–∞–Ω—Ç (1000 —à—Ç)")
    print("   ‚Ä¢ –û–∂–∏–¥–∞–µ–º: 6 —Å—Ç—Ä–æ–∫ –≤ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ")
    
    # –í–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
    import logging
    logging.getLogger('advanced_normalizer').setLevel(logging.DEBUG)
    logging.getLogger('table_normalizer').setLevel(logging.DEBUG)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä
    normalizer = AdvancedNormalizer()
    result_file = normalizer.normalize_table(test_file)
    
    if result_file:
        print(f"\n‚úÖ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {result_file}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        check_normalized_result(result_file)
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏")

def check_normalized_result(normalized_file):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏"""
    
    import json
    
    print("\nüîç –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
    
    # –ß–∏—Ç–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    metadata_file = normalized_file.replace('.xlsx', '_metadata.json')
    with open(metadata_file, 'r', encoding='utf-8') as f:
        metadata = json.load(f)
    
    print(f"üìä –¢–æ–≤–∞—Ä–æ–≤ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ: {metadata['data_ranges']['total_products']}")
    print(f"üó∫Ô∏è –ì—Ä—É–ø–ø —Å—Ç—Ä–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤: {len(metadata['product_row_groups'])}")
    
    print("\nüõçÔ∏è –ì–†–£–ü–ü–´ –°–¢–†–û–ö –¢–û–í–ê–†–û–í:")
    for product_name, original_rows in metadata['product_row_groups'].items():
        print(f"   ‚Ä¢ {product_name}: —Å—Ç—Ä–æ–∫–∏ {original_rows}")
    
    print("\nüîó –ú–ê–ü–ü–ò–ù–ì –°–¢–†–û–ö (–æ—Ä–∏–≥–∏–Ω–∞–ª ‚Üí –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è):")
    for orig_row, norm_row in sorted(metadata['row_mappings'].items(), key=lambda x: int(x[0])):
        print(f"   ‚Ä¢ –°—Ç—Ä–æ–∫–∞ {orig_row} ‚Üí –°—Ç—Ä–æ–∫–∞ {norm_row}")
    
    # –ß–∏—Ç–∞–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    wb = openpyxl.load_workbook(normalized_file, data_only=True)
    ws = wb.active
    
    print("\nüìã –ù–û–†–ú–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï:")
    for row in range(3, ws.max_row + 1):
        name = ws.cell(row=row, column=1).value or ""
        qty_avia = ws.cell(row=row, column=8).value or ""
        price_avia_usd = ws.cell(row=row, column=9).value or ""
        price_avia_rub = ws.cell(row=row, column=10).value or ""
        print(f"   {row-2}: {name[:25]:<25} | {qty_avia} —à—Ç | ${price_avia_usd} | ‚ÇΩ{price_avia_rub}")
    
    wb.close()

if __name__ == "__main__":
    test_advanced_normalizer()
