#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –≤ —Ç–æ–≤–∞—Ä–∞—Ö
"""

import openpyxl
from pathlib import Path
from database.manager_v4 import DatabaseManager  
from database.models_v4 import Product, SheetMetadata

def debug_currency_for_products(product_ids):
    """–û—Ç–ª–∞–¥–∫–∞ –≤–∞–ª—é—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    
    session = DatabaseManager.get_session()
    
    try:
        for product_id in product_ids:
            product = session.query(Product).get(product_id)
            if not product:
                print(f"‚ùå –¢–æ–≤–∞—Ä ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
                
            print(f"\nüîç –¢–û–í–ê–† ID {product_id}: {product.name}")
            print("=" * 50)
            
            # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            sheet = session.query(SheetMetadata).get(product.sheet_id)
            if not sheet or not sheet.local_file_path:
                print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã {product.sheet_id}")
                continue
            
            file_path = sheet.local_file_path
            print(f"üìÅ –§–∞–π–ª: {file_path}")
            print(f"üìã –°—Ç—Ä–æ–∫–∞ —Ç–æ–≤–∞—Ä–∞: {product.start_row}")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º Excel —Ñ–∞–π–ª
            if not Path(file_path).exists():
                print(f"‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
                continue
                
            try:
                wb = openpyxl.load_workbook(file_path, data_only=True)
                ws = wb.active
                
                print(f"\nüìä –î–ê–ù–ù–´–ï –ò–ó EXCEL –§–ê–ô–õ–ê:")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏)
                print("üî§ –ó–ê–ì–û–õ–û–í–ö–ò:")
                for row_num in range(1, 4):
                    row_data = []
                    for col in range(1, 16):  # –ü–µ—Ä–≤—ã–µ 15 –∫–æ–ª–æ–Ω–æ–∫
                        cell_value = ws.cell(row=row_num, column=col).value
                        if cell_value:
                            col_letter = openpyxl.utils.get_column_letter(col)
                            row_data.append(f"{col_letter}: {str(cell_value)[:20]}")
                    if row_data:
                        print(f"   –°—Ç—Ä–æ–∫–∞ {row_num}: {' | '.join(row_data[:5])}")  # –ü–µ—Ä–≤—ã–µ 5 –∫–æ–ª–æ–Ω–æ–∫
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                print(f"\nüì¶ –î–ê–ù–ù–´–ï –¢–û–í–ê–†–ê (—Å—Ç—Ä–æ–∫–∞ {product.start_row}):")
                row_data = []
                for col in range(1, 16):  # –ü–µ—Ä–≤—ã–µ 15 –∫–æ–ª–æ–Ω–æ–∫
                    cell_value = ws.cell(row=product.start_row, column=col).value
                    col_letter = openpyxl.utils.get_column_letter(col)
                    row_data.append(f"{col_letter}: {cell_value}")
                
                # –í—ã–≤–æ–¥–∏–º –ø–æ 3 –∫–æ–ª–æ–Ω–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                for i in range(0, len(row_data), 3):
                    print(f"   {' | '.join(row_data[i:i+3])}")
                
                # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫–∏ —Å —Ü–µ–Ω–∞–º–∏
                print(f"\nüí∞ –ê–ù–ê–õ–ò–ó –¶–ï–ù–û–í–´–• –ö–û–õ–û–ù–û–ö:")
                for col in range(1, 16):
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
                    headers = []
                    for row in range(1, 4):
                        cell_value = ws.cell(row=row, column=col).value
                        if cell_value:
                            headers.append(str(cell_value).lower())
                    
                    combined_header = ' '.join(headers)
                    col_letter = openpyxl.utils.get_column_letter(col)
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ —Ü–µ–Ω–æ–≤–æ–π
                    is_usd = any(word in combined_header for word in ['$', 'usd', '–¥–æ–ª–ª']) and '—Ü–µ–Ω–∞' in combined_header
                    is_rub = any(word in combined_header for word in ['—Ä—É–±', '‚ÇΩ', 'rub']) and '—Ü–µ–Ω–∞' in combined_header
                    
                    if is_usd or is_rub:
                        value = ws.cell(row=product.start_row, column=col).value
                        currency = "USD" if is_usd else "RUB"
                        print(f"   {col_letter} ({currency}): {combined_header} = {value}")
                
                wb.close()
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Excel: {e}")
    
    finally:
        session.close()

if __name__ == "__main__":
    # –û—Ç–ª–∞–∂–∏–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏
    debug_currency_for_products([104, 114])

