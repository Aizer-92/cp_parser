#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ CSV —Ñ–∞–π–ª–æ–≤ –æ—Ç AdvancedDownloader
"""

import os
import pandas as pd
from pathlib import Path
import shutil
from database.manager_v4 import DatabaseManager
from database.models_v4 import SheetMetadata
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def fix_csv_files():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º CSV —Ñ–∞–π–ª—ã - –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∏—Ö –≤ .csv –∏ —Å–æ–∑–¥–∞–µ–º Excel –≤–µ—Ä—Å–∏–∏"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CSV –§–ê–ô–õ–û–í")
    print("=" * 60)
    
    storage_path = Path("storage/excel_files")
    csv_files_fixed = 0
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ CSV
    for file_path in storage_path.glob("*.xlsx"):
        if file_path.stat().st_size == 0:
            continue
            
        # –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ—Å–ª–∏ —ç—Ç–æ CSV —Ñ–∞–π–ª
        try:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–º–µ–µ—Ç —Ä–∞–∑–º–µ—Ä < 10KB –∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ Excel - –≤–µ—Ä–æ—è—Ç–Ω–æ CSV
            if file_path.stat().st_size < 10000:
                # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–∞–∫ CSV
                with open(file_path, 'r', encoding='utf-8') as f:
                    first_line = f.readline().strip()
                    if ',' in first_line or ';' in first_line:
                        logger.info(f"üìÑ –ù–∞–π–¥–µ–Ω CSV —Ñ–∞–π–ª: {file_path.name}")
                        
                        # –ß–∏—Ç–∞–µ–º CSV
                        try:
                            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
                            for sep in [',', ';', '\t']:
                                try:
                                    df = pd.read_csv(file_path, sep=sep, encoding='utf-8')
                                    if len(df.columns) > 1:
                                        break
                                except:
                                    continue
                            else:
                                # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∏ —Å –æ–¥–Ω–∏–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
                                df = pd.read_csv(file_path, sep=',', encoding='utf-8')
                            
                            if not df.empty:
                                # –°–æ–∑–¥–∞–µ–º Excel –≤–µ—Ä—Å–∏—é
                                excel_path = file_path.with_suffix('.xlsx')
                                temp_excel_path = file_path.with_name(f"{file_path.stem}_fixed.xlsx")
                                
                                df.to_excel(temp_excel_path, index=False, engine='openpyxl')
                                
                                # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –≤ CSV
                                csv_path = file_path.with_suffix('.csv')
                                if csv_path.exists():
                                    csv_path.unlink()
                                    
                                shutil.move(str(file_path), str(csv_path))
                                
                                # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–π Excel —Ñ–∞–π–ª
                                shutil.move(str(temp_excel_path), str(file_path))
                                
                                logger.info(f"   ‚úÖ –°–æ–∑–¥–∞–Ω Excel —Ñ–∞–π–ª: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} –∫–æ–ª–æ–Ω–æ–∫")
                                csv_files_fixed += 1
                                
                        except Exception as e:
                            logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV: {e}")
                            
        except Exception as e:
            # –ï—Å–ª–∏ –Ω–µ CSV —Ñ–∞–π–ª - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            continue
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ CSV —Ñ–∞–π–ª–æ–≤: {csv_files_fixed}")
    
    return csv_files_fixed

def update_database_paths():
    """–û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    
    session = DatabaseManager.get_session()
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã
        sheets = session.query(SheetMetadata).filter(
            SheetMetadata.status == 'downloaded',
            SheetMetadata.local_file_path.isnot(None)
        ).all()
        
        updated = 0
        for sheet in sheets:
            file_path = Path(sheet.local_file_path)
            if file_path.exists() and file_path.stat().st_size > 0:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å
                try:
                    import openpyxl
                    wb = openpyxl.load_workbook(file_path, read_only=True)
                    wb.close()
                    
                    # –ï—Å–ª–∏ —Ñ–∞–π–ª –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è - –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    if sheet.status != 'pending':
                        sheet.status = 'pending'
                        updated += 1
                        
                except Exception as e:
                    logger.warning(f"–§–∞–π–ª {file_path.name} –≤—Å–µ –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è: {e}")
        
        session.commit()
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î: {updated}")
        
    finally:
        session.close()

if __name__ == "__main__":
    fixed_count = fix_csv_files()
    if fixed_count > 0:
        update_database_paths()
        print(f"\nüöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–ø–∞—Ä—Å–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.")
        print(f"   –ö–æ–º–∞–Ω–¥–∞: python3 parse_existing_tables.py")


