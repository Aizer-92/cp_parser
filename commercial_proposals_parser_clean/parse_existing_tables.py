#!/usr/bin/env python3
"""
–ü–∞—Ä—Å–∏–Ω–≥ —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
"""

import sys
import os
from pathlib import Path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.manager_v4 import DatabaseManager
from database.models_v4 import SheetMetadata
from scripts.complete_parsing_pipeline_v5 import EnhancedParser

def parse_existing_downloaded_tables(limit=25):
    """–ü–∞—Ä—Å–∏—Ç —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã"""
    
    session = DatabaseManager.get_session()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å–æ —Å–∫–∞—á–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏, –Ω–æ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏
        tables_to_parse = session.query(SheetMetadata).filter(
            SheetMetadata.status != 'completed',  # –ù–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
            SheetMetadata.local_file_path.isnot(None)  # –§–∞–π–ª –µ—Å—Ç—å
        ).limit(limit).all()
        
        if not tables_to_parse:
            print("‚úÖ –í—Å–µ —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
            return
        
        print(f"üöÄ –ü–ê–†–°–ò–ù–ì {len(tables_to_parse)} –£–ñ–ï –°–ö–ê–ß–ê–ù–ù–´–• –¢–ê–ë–õ–ò–¶")
        print("=" * 70)
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
        parser = EnhancedParser()
        
        successful = 0
        failed = 0
        
        for i, sheet in enumerate(tables_to_parse, 1):
            print(f"\nüìä [{i}/{len(tables_to_parse)}] –ü–∞—Ä—Å–∏–º: {sheet.sheet_title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            if not sheet.local_file_path:
                print("‚ùå –ù–µ—Ç –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É")
                failed += 1
                continue
                
            excel_file_path = Path(sheet.local_file_path)
            if not excel_file_path.exists():
                print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {excel_file_path}")
                failed += 1
                continue
            
            try:
                # –ü–∞—Ä—Å–∏–º —Ç–∞–±–ª–∏—Ü—É (–º–µ—Ç–æ–¥—É –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ sheet_id)
                success = parser.parse_sheet_complete(sheet_id=sheet.id)
                
                if success:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    sheet.status = 'completed'
                    session.commit()
                    successful += 1
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                else:
                    failed += 1
                    print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    
            except Exception as e:
                print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
                failed += 1
                continue
        
        print(f"\nüìä –ò–¢–û–ì–ò –ü–ê–†–°–ò–ù–ì–ê:")
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {successful}")  
        print(f"   ‚ùå –û—à–∏–±–æ–∫: {failed}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–≤–∞—Ä–æ–≤
        if successful > 0:
            print(f"\nüéâ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {successful} –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü!")
            print(f"   üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π: python3 scripts/final_validation_report.py")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        session.close()

if __name__ == "__main__":
    parse_existing_downloaded_tables()
