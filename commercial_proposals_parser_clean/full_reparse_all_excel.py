#!/usr/bin/env python3
"""
–ü–û–õ–ù–´–ô –ü–ï–†–ï–ü–ê–†–°–ò–ù–ì –≤—Å–µ—Ö Excel —Ñ–∞–π–ª–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ü–µ–Ω
"""

import os
from pathlib import Path
from database.manager_v4 import DatabaseManager
from database.models_v4 import SheetMetadata, Product, PriceOffer
from scripts.complete_parsing_pipeline_v5 import EnhancedParser
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def clear_all_products_and_prices():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ–ø–∞—Ä—Å–∏–Ω–≥–∞"""
    session = DatabaseManager.get_session()
    try:
        print("üóëÔ∏è –û–ß–ò–°–¢–ö–ê –¢–û–í–ê–†–û–í –ò –¶–ï–ù...")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        price_count = session.query(PriceOffer).count()
        session.query(PriceOffer).delete()
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ù–ï —É–¥–∞–ª—è–µ–º!)
        product_count = session.query(Product).count()
        session.query(Product).delete()
        
        session.commit()
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ {product_count} —Ç–æ–≤–∞—Ä–æ–≤ –∏ {price_count} —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
        print(f"   üìå –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –°–û–•–†–ê–ù–ï–ù–´ (–Ω–µ —É–¥–∞–ª—è–µ–º)")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
        session.rollback()
    finally:
        session.close()

def full_reparse_all_excel():
    """–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–ø–∞—Ä—Å–∏–Ω–≥ –≤—Å–µ—Ö Excel —Ñ–∞–π–ª–æ–≤"""
    
    print("üîÑ –ü–û–õ–ù–´–ô –ü–ï–†–ï–ü–ê–†–°–ò–ù–ì –í–°–ï–• EXCEL –§–ê–ô–õ–û–í")
    print("=" * 80)
    
    # –û—á–∏—â–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã
    clear_all_products_and_prices()
    
    session = DatabaseManager.get_session()
    parser = EnhancedParser()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        sheets_with_files = session.query(SheetMetadata)\
            .filter(SheetMetadata.local_file_path.isnot(None))\
            .order_by(SheetMetadata.id).all()
        
        print(f"\nüìÅ –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü —Å —Ñ–∞–π–ª–∞–º–∏: {len(sheets_with_files)}")
        
        total_products = 0
        total_prices = 0
        processed_count = 0
        errors = []
        
        for i, sheet in enumerate(sheets_with_files, 1):
            try:
                print(f"\n[{i}/{len(sheets_with_files)}] üìä –ü–ê–†–°–ò–ù–ì: {sheet.sheet_title[:50]}")
                print(f"   üìÅ –§–∞–π–ª: {sheet.local_file_path}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                file_path = Path(sheet.local_file_path)
                if not file_path.exists():
                    print(f"   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    errors.append(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {sheet.sheet_title}")
                    continue
                
                if file_path.stat().st_size == 0:
                    print(f"   ‚è≠Ô∏è  –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                    continue
                
                # –ü–∞—Ä—Å–∏–º —Ç–∞–±–ª–∏—Ü—É
                result = parser.parse_sheet_complete(sheet.id)
                
                if result:
                    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã –¥–ª—è —ç—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã
                    products_in_sheet = session.query(Product).filter(Product.sheet_id == sheet.id).count()
                    prices_in_sheet = session.query(PriceOffer)\
                        .join(Product)\
                        .filter(Product.sheet_id == sheet.id).count()
                    
                    total_products += products_in_sheet
                    total_prices += prices_in_sheet
                    processed_count += 1
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–∞–±–ª–∏—Ü—ã
                    sheet.status = 'completed'
                    sheet.product_count = products_in_sheet
                    sheet.parsed_successfully = True
                    session.commit()
                    
                    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {products_in_sheet} —Ç–æ–≤–∞—Ä–æ–≤, {prices_in_sheet} —Ü–µ–Ω")
                    
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                    errors.append(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {sheet.sheet_title}")
                    sheet.status = 'error'
                    session.commit()
                
            except Exception as e:
                print(f"   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
                errors.append(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ {sheet.sheet_title}: {e}")
                session.rollback()
                continue
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\nüéØ –ò–¢–û–ì–ò –ü–û–õ–ù–û–ì–û –ü–ï–†–ï–ü–ê–†–°–ò–ù–ì–ê:")
        print(f"   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: {processed_count}/{len(sheets_with_files)}")
        print(f"   üõçÔ∏è  –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_products}")
        print(f"   üí∞ –í—Å–µ–≥–æ —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {total_prices}")
        print(f"   üìä –°—Ä–µ–¥–Ω–µ–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: {total_products/max(1,processed_count):.1f}")
        print(f"   üí∞ –°—Ä–µ–¥–Ω–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —Ç–æ–≤–∞—Ä: {total_prices/max(1,total_products):.1f}")
        
        if errors:
            print(f"\n‚ùå –û–®–ò–ë–ö–ò ({len(errors)}):")
            for error in errors[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                print(f"   {error}")
                
        # –û—Ü–µ–Ω–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if total_products > 300:
            print(f"\nüéâ –û–¢–õ–ò–ß–ù–û! –¢–æ–≤–∞—Ä–æ–≤ —Å—Ç–∞–ª–æ –±–æ–ª—å—à–µ!")
        elif total_products > 200:
            print(f"\nüëç –•–û–†–û–®–û! –ü—Ä–æ–≥—Ä–µ—Å—Å –µ—Å—Ç—å")
        else:
            print(f"\n‚ö†Ô∏è  –í—Å–µ –µ—â–µ –º–∞–ª–æ —Ç–æ–≤–∞—Ä–æ–≤, –Ω—É–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–ª—å—à–µ")
            
        return {
            'processed': processed_count,
            'total_products': total_products,
            'total_prices': total_prices,
            'errors': errors
        }
        
    finally:
        session.close()

if __name__ == "__main__":
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã –∏–∑ –ë–î!")
    print("   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
    print("   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): ", end="")
    
    # –í –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    response = "y"  # input().strip().lower()
    
    if response == 'y':
        results = full_reparse_all_excel()
        print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Å–∫—Ä–∏–ø—Ç–∞")
    else:
        print("–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")


