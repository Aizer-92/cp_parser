// CalculationHistoryV3.js - –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏
window.CalculationHistoryV3 = {
    props: {
        positionId: Number
    },
    
    data() {
        return {
            calculations: [],
            isLoading: false
        };
    },
    
    mounted() {
        if (this.positionId) {
            this.loadCalculations();
        }
    },
    
    watch: {
        positionId(newId) {
            if (newId) {
                this.loadCalculations();
            }
        }
    },
    
    methods: {
        async loadCalculations() {
            this.isLoading = true;
            
            try {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏
                const positionsAPI = window.usePositionsV3();
                const position = await positionsAPI.getPosition(this.positionId);
                
                // –ò–∑–≤–ª–µ–∫–∞–µ–º –º–∞—Å—Å–∏–≤ —Ä–∞—Å—á–µ—Ç–æ–≤
                this.calculations = position.calculations || [];
                
                console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', this.calculations.length);
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å—á–µ—Ç–æ–≤');
            } finally {
                this.isLoading = false;
            }
        },
        
        async openCalculation(calcId) {
            console.log('üìÇ –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–∞—Å—á–µ—Ç–∞:', calcId);
            
            try {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞
                const response = await axios.get(`/api/v3/calculations/${calcId}`);
                
                console.log('‚úÖ –†–∞—Å—á–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
                
                // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
                this.$emit('open-calculation', response.data);
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–∞:', error);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—á–µ—Ç');
            }
        },
        
        formatDate(dateString) {
            if (!dateString) return '‚Äî';
            
            try {
                const date = new Date(dateString);
                return date.toLocaleString('ru-RU', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            } catch {
                return dateString;
            }
        },
        
        formatPrice(value) {
            if (!value) return '0';
            return Number(value).toFixed(2);
        }
    },
    
    template: `
    <div class="calculation-history">
        <h3 style="font-size: 16px; font-weight: 600; margin-bottom: 16px; color: #111827;">
            –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤ ({{ calculations.length }})
        </h3>
        
        <!-- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ -->
        <div v-if="isLoading" class="loading-state">
            <div class="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</p>
        </div>
        
        <!-- –°–ø–∏—Å–æ–∫ —Ä–∞—Å—á–µ—Ç–æ–≤ -->
        <div v-else-if="calculations.length > 0" class="history-list">
            <div
                v-for="calc in calculations"
                :key="calc.id"
                @click="openCalculation(calc.id)"
                class="history-item"
            >
                <div class="history-header">
                    <div>
                        <div class="history-date">
                            {{ formatDate(calc.created_at) }}
                        </div>
                        <div v-if="calc.updated_at && calc.updated_at !== calc.created_at" class="history-updated">
                            –û–±–Ω–æ–≤–ª–µ–Ω–æ: {{ formatDate(calc.updated_at) }}
                        </div>
                    </div>
                    <div class="history-arrow">‚Üí</div>
                </div>
                
                <div class="history-params">
                    <div class="history-param">
                        <span class="param-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
                        <span class="param-value">{{ calc.quantity }} —à—Ç</span>
                    </div>
                    <div class="history-param">
                        <span class="param-label">–ù–∞—Ü–µ–Ω–∫–∞:</span>
                        <span class="param-value">√ó{{ calc.markup }}</span>
                    </div>
                    <div v-if="calc.category" class="history-param">
                        <span class="param-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                        <span class="param-value">{{ calc.category }}</span>
                    </div>
                </div>
                
                <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ -->
                <div v-if="calc.custom_logistics || calc.forced_category" class="history-badges">
                    <span v-if="calc.forced_category" class="history-badge">
                        –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞
                    </span>
                    <span v-if="calc.custom_logistics" class="history-badge">
                        –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
                    </span>
                </div>
            </div>
        </div>
        
        <!-- –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ -->
        <div v-else class="empty-state">
            <p>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤ –ø—É—Å—Ç–∞</p>
            <p style="font-size: 14px; color: #6b7280;">
                –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–≤—ã–π —Ä–∞—Å—á–µ—Ç –¥–ª—è —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏
            </p>
        </div>
    </div>
    `
};

