// PriceCalculatorAppV3.js - –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è V3
window.PriceCalculatorAppV3 = {
    template: `
    <div class="app-v3">
        <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è -->
        <nav class="tabs-nav">
            <button
                v-for="tab in tabs"
                :key="tab.id"
                @click="activeTab = tab.id"
                :class="['tab', { 'tab-active': activeTab === tab.id }]"
            >
                {{ tab.label }}
            </button>
        </nav>
        
        <!-- –ö–æ–Ω—Ç–µ–Ω—Ç -->
        <div class="tab-content">
            <component
                :is="currentTabComponent"
                :position="positionForCalculation"
                :result="calculationResult"
                :initialRequestData="calculationRequestData"
                v-model="settings"
                @save-as-position="handleSaveAsPosition"
                @switch-tab="activeTab = $event"
                @switch-to-quick-calc="handleSwitchToQuickCalc"
                @calculation-complete="handleCalculationComplete"
                @recalculate="handleRecalculate"
                @new-calculation="handleNewCalculation"
                @save="saveSettings"
            />
        </div>
    </div>
    `,
    
    data() {
        return {
            activeTab: 'positions',
            tabs: [
                { id: 'positions', label: '–ü–æ–∑–∏—Ü–∏–∏', component: 'PositionsListV3' },
                { id: 'quick', label: '–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á—ë—Ç', component: 'QuickModeV3' },
                { id: 'results', label: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', component: 'CalculationResultsV3' },
                { id: 'factories', label: '–§–∞–±—Ä–∏–∫–∏', component: 'FactoriesManagerV3' },
                { id: 'settings', label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', component: 'SettingsPanelV3' }
            ],
            positionForCalculation: null,
            calculationResult: null,
            calculationRequestData: null,
            settings: {
                currencies: {
                    yuan_to_usd: 0.139,
                    usd_to_rub: 84.0,
                    yuan_to_rub: 11.67,
                    eur_to_rub: 100.0
                },
                formula: {
                    toni_commission_percent: 5.0,
                    transfer_percent: 18.0,
                    local_delivery_rate_yuan_per_kg: 2.0,
                    msk_pickup_total_rub: 1000.0,
                    other_costs_percent: 2.5
                },
                defaultMarkup: 1.4,
                defaultQuantity: 1000,
                autoSaveCalculations: true
            }
        };
    },
    
    mounted() {
        this.loadSettings();
    },
    
    computed: {
        currentTabComponent() {
            const tab = this.tabs.find(t => t.id === this.activeTab);
            return tab ? tab.component : 'QuickModeV3';
        }
    },
    
    methods: {
        loadSettings() {
            const saved = localStorage.getItem('price_calculator_settings_v3');
            if (saved) {
                try {
                    this.settings = JSON.parse(saved);
                    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage (V3)');
                } catch (e) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', e);
                }
            }
        },
        
        saveSettings(settings) {
            this.settings = settings;
            localStorage.setItem('price_calculator_settings_v3', JSON.stringify(settings));
            console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (V3)');
            alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
        },
        
        handleSaveAsPosition(data) {
            console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∫ –ø–æ–∑–∏—Ü–∏—è:', data);
            // TODO: –°–æ–∑–¥–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é –∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –Ω–µ—ë
            // this.$emit('create-position', data);
            // this.activeTab = 'positions';
            alert('–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ');
        },
        
        handleSwitchToQuickCalc(position) {
            console.log('üöÄ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ QuickMode —Å –ø–æ–∑–∏—Ü–∏–µ–π:', position);
            this.positionForCalculation = position;
            this.activeTab = 'quick';
            
            // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ —á–µ—Ä–µ–∑ 100–º—Å, —á—Ç–æ–±—ã QuickMode —É—Å–ø–µ–ª –∏—Ö –ø—Ä–∏–Ω—è—Ç—å
            setTimeout(() => {
                this.positionForCalculation = null;
            }, 100);
        },
        
        handleCalculationComplete(data) {
            console.log('‚úÖ –†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –†–µ–∑—É–ª—å—Ç–∞—Ç—ã');
            this.calculationResult = data.result;
            this.calculationRequestData = data.requestData;
            this.activeTab = 'results';
        },
        
        handleRecalculate(newResult) {
            console.log('üîÑ –ü–µ—Ä–µ—Å—á–µ—Ç —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏');
            this.calculationResult = newResult;
        },
        
        handleNewCalculation() {
            console.log('üÜï –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç');
            this.calculationResult = null;
            this.calculationRequestData = null;
            this.activeTab = 'quick';
        }
    }
};


