// PositionFormV3.js - –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è –ø–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
window.PositionFormV3 = {
    template: `
    <div class="position-form-fullscreen">
        <div class="fullscreen-content">
            <div class="modal-header">
                <div>
                    <h2>{{ isEdit ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é' : '–°–æ–∑–¥–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é' }}</h2>
                    <div class="step-indicator">
                        –®–∞–≥ {{ currentStep }} –∏–∑ 2
                    </div>
                </div>
                <button @click="close" class="btn-close">√ó</button>
            </div>
            
            <form @submit.prevent="handleSubmit" class="form">
                <!-- –®–ê–ì 1: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è + –§–æ—Ç–æ + –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è -->
                <div v-show="currentStep === 1" class="step-content">
                    <h3 class="step-title">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ</h3>
                    
                    <div class="form-row">
                        <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è -->
                        <div style="flex: 1; padding-right: 20px;">
                            <div class="form-group">
                                <label for="name">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
                                <input
                                    id="name"
                                    v-model="form.name"
                                    type="text"
                                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –§—É—Ç–±–æ–ª–∫–∞ —Ö–ª–æ–ø–∫–æ–≤–∞—è"
                                    required
                                    class="form-input"
                                    @input="detectCategory"
                                />
                            </div>
                            
                            <div class="form-group">
                                <label for="category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è * <span style="font-size: 12px; color: #9ca3af;">(–∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è)</span></label>
                                <input
                                    id="category"
                                    v-model="form.category"
                                    type="text"
                                    placeholder="—Ñ—É—Ç–±–æ–ª–∫–∞, –∫—Ä—É–∂–∫–∞, —Ä—é–∫–∑–∞–∫..."
                                    required
                                    class="form-input"
                                />
                            </div>
                            
                            <div class="form-group">
                                <label for="description">–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</label>
                                <textarea
                                    id="description"
                                    v-model="form.description"
                                    rows="3"
                                    placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞..."
                                    class="form-input"
                                ></textarea>
                            </div>
                            
                            <div class="form-group">
                                <label for="customization">–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞</label>
                                <textarea
                                    id="customization"
                                    v-model="form.customization"
                                    rows="2"
                                    placeholder="–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ (–ø–µ—á–∞—Ç—å, –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∞ –∏ —Ç.–¥.)"
                                    class="form-input"
                                ></textarea>
                            </div>
                        </div>
                        
                        <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ -->
                        <div style="flex: 1;">
                            <div class="form-group">
                                <label>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ç–æ–≤–∞—Ä–∞</label>
                                <div 
                                    class="photo-dropzone"
                                    @drop.prevent="handleDrop"
                                    @dragover.prevent
                                    @dragenter.prevent="isDragging = true"
                                    @dragleave.prevent="isDragging = false"
                                    :class="{ 'dragging': isDragging }"
                                >
                                    <div v-if="form.design_files_urls.length === 0" class="dropzone-placeholder">
                                        <div style="text-align: center; width: 100%;">
                                            <div style="font-size: 14px; color: #6b7280; margin-bottom: 16px;">
                                                –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–æ—Ç–æ —Å—é–¥–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª<br>–∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É
                                            </div>
                                            <input
                                                type="file"
                                                accept="image/*"
                                                multiple
                                                @change="handleFileSelect"
                                                style="display: none;"
                                                :ref="el => fileInputRef = el"
                                            />
                                            <button type="button" @click="triggerFileInput" class="btn-primary" style="margin-bottom: 12px; width: 100%;">
                                                üìÅ –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                                            </button>
                                            <div style="display: flex; gap: 8px; align-items: center;">
                                                <input
                                                    v-model="photoUrl"
                                                    type="url"
                                                    placeholder="–ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ"
                                                    class="form-input"
                                                    @keyup.enter="addPhoto"
                                                    style="flex: 1;"
                                                />
                                                <button type="button" @click="addPhoto" class="btn-secondary">
                                                    + –°—Å—ã–ª–∫–∞
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div v-else class="photo-grid">
                                        <div v-for="(url, index) in form.design_files_urls" :key="index" class="photo-preview">
                                            <img :src="url" :alt="'–§–æ—Ç–æ ' + (index + 1)" />
                                            <span v-if="index === 0" class="main-badge">–æ—Å–Ω–æ–≤–Ω–∞—è</span>
                                            <button type="button" @click="removePhoto(index)" class="btn-remove-photo">√ó</button>
                                        </div>
                                        <div class="photo-add-more">
                                            <input
                                                type="file"
                                                accept="image/*"
                                                multiple
                                                @change="handleFileSelect"
                                                style="display: none;"
                                                :ref="el => fileInputMoreRef = el"
                                            />
                                            <button type="button" @click="triggerFileInputMore" class="btn-primary btn-sm" style="margin-bottom: 8px; width: 100%;">
                                                üìÅ –§–∞–π–ª
                                            </button>
                                            <input
                                                v-model="photoUrl"
                                                type="url"
                                                placeholder="–°—Å—ã–ª–∫–∞"
                                                class="form-input"
                                                @keyup.enter="addPhoto"
                                                style="font-size: 12px; margin-bottom: 4px;"
                                            />
                                            <button type="button" @click="addPhoto" class="btn-secondary btn-sm" style="width: 100%;">+ –°—Å—ã–ª–∫–∞</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- –®–ê–ì 2: –§–∞–±—Ä–∏–∫–∞, —Ü–µ–Ω–∞ –∏ –ø–∞–∫–∫–∏–Ω–≥ -->
                <div v-show="currentStep === 2" class="step-content">
                    <h3 class="step-title">–î–∞–Ω–Ω—ã–µ –æ—Ç —Ñ–∞–±—Ä–∏–∫–∏ –∏ –ø–∞–∫–∫–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞</h3>
                    
                    <div class="form-row">
                        <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: —Ñ–∞–±—Ä–∏–∫–∞ –∏ —Ü–µ–Ω–∞ -->
                        <div style="flex: 1; padding-right: 20px;">
                            <div class="form-group">
                                <label for="factory">–§–∞–±—Ä–∏–∫–∞ (WeChat / URL)</label>
                                <input
                                    id="factory"
                                    v-model="form.factory_url"
                                    type="text"
                                    placeholder="https://... –∏–ª–∏ WeChat ID"
                                    class="form-input"
                                />
                            </div>
                            
                            <div class="form-group">
                                <label for="price">–¶–µ–Ω–∞ –≤ —é–∞–Ω—è—Ö *</label>
                                <input
                                    id="price"
                                    v-model.number="form.price_yuan"
                                    type="number"
                                    step="0.01"
                                    min="0"
                                    required
                                    placeholder="125.00"
                                    class="form-input"
                                />
                            </div>
                            
                            <div class="form-group" style="margin-top: 20px;">
                                <label>
                                    <input type="checkbox" v-model="useSimpleWeight" />
                                    <span style="margin-left: 8px;">–£–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–µ—Å –µ–¥–∏–Ω–∏—Ü—ã (–±–µ–∑ –ø–∞–∫–∫–∏–Ω–≥–∞)</span>
                                </label>
                            </div>
                            
                            <div v-if="useSimpleWeight" class="form-group">
                                <label for="weight_kg">–í–µ—Å –µ–¥–∏–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞ (–∫–≥) *</label>
                                <input
                                    id="weight_kg"
                                    v-model.number="form.weight_kg"
                                    type="number"
                                    step="0.001"
                                    min="0"
                                    required
                                    placeholder="0.25"
                                    class="form-input"
                                />
                            </div>
                        </div>
                        
                        <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –ø–∞–∫–∫–∏–Ω–≥ -->
                        <div style="flex: 1;">
                            <div v-if="!useSimpleWeight" class="packing-section">
                                <h4 style="margin-bottom: 16px; font-size: 16px; font-weight: 600;">–ü–∞–∫–∫–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)</h4>
                                
                                <div class="form-group">
                                    <label for="box_length">–î–ª–∏–Ω–∞ –∫–æ—Ä–æ–±–∫–∏ (—Å–º) *</label>
                                    <input
                                        id="box_length"
                                        v-model.number="form.packing_box_length"
                                        type="number"
                                        step="0.1"
                                        min="0"
                                        :required="!useSimpleWeight"
                                        placeholder="50"
                                        class="form-input"
                                    />
                                </div>
                                
                                <div class="form-group">
                                    <label for="box_width">–®–∏—Ä–∏–Ω–∞ –∫–æ—Ä–æ–±–∫–∏ (—Å–º) *</label>
                                    <input
                                        id="box_width"
                                        v-model.number="form.packing_box_width"
                                        type="number"
                                        step="0.1"
                                        min="0"
                                        :required="!useSimpleWeight"
                                        placeholder="40"
                                        class="form-input"
                                    />
                                </div>
                                
                                <div class="form-group">
                                    <label for="box_height">–í—ã—Å–æ—Ç–∞ –∫–æ—Ä–æ–±–∫–∏ (—Å–º) *</label>
                                    <input
                                        id="box_height"
                                        v-model.number="form.packing_box_height"
                                        type="number"
                                        step="0.1"
                                        min="0"
                                        :required="!useSimpleWeight"
                                        placeholder="30"
                                        class="form-input"
                                    />
                                </div>
                                
                                <div class="form-group">
                                    <label for="box_weight">–í–µ—Å –∫–æ—Ä–æ–±–∫–∏ (–∫–≥) *</label>
                                    <input
                                        id="box_weight"
                                        v-model.number="form.packing_box_weight"
                                        type="number"
                                        step="0.01"
                                        min="0"
                                        :required="!useSimpleWeight"
                                        placeholder="12.5"
                                        class="form-input"
                                    />
                                </div>
                                
                                <div class="form-group">
                                    <label for="units_per_box">–®—Ç—É–∫ –≤ –∫–æ—Ä–æ–±–∫–µ *</label>
                                    <input
                                        id="units_per_box"
                                        v-model.number="form.packing_units_per_box"
                                        type="number"
                                        step="1"
                                        min="1"
                                        :required="!useSimpleWeight"
                                        placeholder="50"
                                        class="form-input"
                                    />
                                </div>
                                
                                <div v-if="calculatedWeight > 0" class="calculated-info">
                                    ‚Ñπ –†–∞—Å—á–µ—Ç–Ω—ã–π –≤–µ—Å –µ–¥–∏–Ω–∏—Ü—ã: <strong>{{ calculatedWeight.toFixed(3) }} –∫–≥</strong>
                                </div>
                            </div>
                            <div v-else style="padding: 40px; text-align: center; color: #9ca3af;">
                                <div style="font-size: 14px;">–ü–∞–∫–∫–∏–Ω–≥ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è</div>
                                <div style="font-size: 12px; margin-top: 8px;">–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–µ—Å –µ–¥–∏–Ω–∏—Ü—ã</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è -->
                <div class="form-actions" style="justify-content: space-between; margin-top: 30px;">
                    <div>
                        <button type="button" @click="prevStep" v-if="currentStep > 1" class="btn-secondary">
                            ‚Üê –ù–∞–∑–∞–¥
                        </button>
                    </div>
                    <div style="display: flex; gap: 12px;">
                        <button type="button" @click="close" class="btn-secondary">
                            –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="button" @click="nextStep" v-if="currentStep < 2" class="btn-primary">
                            –î–∞–ª–µ–µ ‚Üí
                        </button>
                        <button type="submit" v-if="currentStep === 2" :disabled="isSaving" class="btn-primary">
                            {{ isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : (isEdit ? '–û–±–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é' : '–°–æ–∑–¥–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é') }}
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    `,
    
    props: {
        position: {
            type: Object,
            default: null
        }
    },
    
    data() {
        return {
            currentStep: 1,
            useSimpleWeight: false,
            isDragging: false,
            availableCategories: [],
            fileInputRef: null,
            fileInputMoreRef: null,
            form: {
                name: '',
                category: '',
                description: '',
                factory_url: '',
                price_yuan: null,
                weight_kg: null,
                customization: '',
                design_files_urls: [],
                // –ü–∞–∫–∫–∏–Ω–≥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                packing_box_length: null,
                packing_box_width: null,
                packing_box_height: null,
                packing_box_weight: null,
                packing_units_per_box: null
            },
            photoUrl: '',
            isSaving: false
        };
    },
    
    computed: {
        isEdit() {
            return !!this.position;
        },
        
        calculatedWeight() {
            if (!this.useSimpleWeight && 
                this.form.packing_box_weight && 
                this.form.packing_units_per_box && 
                this.form.packing_units_per_box > 0) {
                return this.form.packing_box_weight / this.form.packing_units_per_box;
            }
            return 0;
        }
    },
    
    async mounted() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        await this.loadCategories();
        
        if (this.position) {
            this.form = { 
                ...this.position,
                design_files_urls: this.position.design_files_urls || []
            };
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º: –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞–∫–∫–∏–Ω–≥ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
            if (this.position.packing_units_per_box) {
                this.useSimpleWeight = false;
            } else {
                this.useSimpleWeight = true;
            }
        }
    },
    
    methods: {
        nextStep() {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞ 1
            if (this.currentStep === 1) {
                if (!this.form.name || !this.form.category) {
                    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é');
                    return;
                }
            }
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞ 2
            if (this.currentStep === 2) {
                if (!this.form.price_yuan || this.form.price_yuan <= 0) {
                    alert('–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –≤ —é–∞–Ω—è—Ö');
                    return;
                }
                
                if (this.useSimpleWeight) {
                    if (!this.form.weight_kg || this.form.weight_kg <= 0) {
                        alert('–£–∫–∞–∂–∏—Ç–µ –≤–µ—Å –µ–¥–∏–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞');
                        return;
                    }
                } else {
                    if (!this.form.packing_box_length || !this.form.packing_box_width || 
                        !this.form.packing_box_height || !this.form.packing_box_weight || 
                        !this.form.packing_units_per_box) {
                        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –ø–∞–∫–∫–∏–Ω–≥–∞');
                        return;
                    }
                }
            }
            
            this.currentStep++;
        },
        
        prevStep() {
            this.currentStep--;
        },
        
        handleSubmit() {
            if (this.currentStep === 2) {
                this.save();
            }
        },
        
        async save() {
            this.isSaving = true;
            try {
                const positionsAPI = window.usePositionsV3();
                
                // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                const data = { ...this.form };
                
                // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–µ—Å - –æ—á–∏—â–∞–µ–º –ø–∞–∫–∫–∏–Ω–≥
                if (this.useSimpleWeight) {
                    data.packing_box_length = null;
                    data.packing_box_width = null;
                    data.packing_box_height = null;
                    data.packing_box_weight = null;
                    data.packing_units_per_box = null;
                } else {
                    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞–∫–∫–∏–Ω–≥ - –≤—ã—á–∏—Å–ª—è–µ–º weight_kg
                    data.weight_kg = this.calculatedWeight;
                }
                
                // –£–±–∏—Ä–∞–µ–º null/–ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                Object.keys(data).forEach(key => {
                    if (data[key] === null || data[key] === '') {
                        delete data[key];
                    }
                });
                
                let savedPosition;
                if (this.isEdit) {
                    savedPosition = await positionsAPI.updatePosition(this.position.id, data);
                    console.log('‚úÖ –ü–æ–∑–∏—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
                } else {
                    savedPosition = await positionsAPI.createPosition(data);
                    console.log('‚úÖ –ü–æ–∑–∏—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', savedPosition);
                }
                
                // –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è - —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—á–µ—Ç
                if (!this.isEdit) {
                    this.$emit('saved', savedPosition);
                    this.$emit('calculate-routes', savedPosition);
                } else {
                    this.$emit('saved');
                }
                
                this.close();
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
                const errorMsg = error.response?.data?.detail || error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é';
                alert(`–û—à–∏–±–∫–∞: ${errorMsg}`);
            } finally {
                this.isSaving = false;
            }
        },
        
        async loadCategories() {
            try {
                const response = await axios.get('/api/v3/categories');
                const data = response.data;
                
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
                if (Array.isArray(data)) {
                    this.availableCategories = data;
                } else if (data.categories && Array.isArray(data.categories)) {
                    this.availableCategories = data.categories;
                } else {
                    this.availableCategories = [];
                }
                
                console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.availableCategories);
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
            }
        },
        
        detectCategory() {
            if (!this.form.name || this.form.name.length < 3) return;
            
            const name = this.form.name.toLowerCase().trim();
            
            // –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ availableCategories
            const categories = this.availableCategories.map(c => {
                if (typeof c === 'string') return c.toLowerCase();
                if (c.category) return c.category.toLowerCase();
                return '';
            }).filter(c => c);
            
            console.log('üîç –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è:', name, '–≤ —Å–ø–∏—Å–∫–µ:', categories);
            
            // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
            for (const category of categories) {
                if (!category) continue;
                
                // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
                if (name.includes(category)) {
                    this.form.category = category;
                    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞:', category);
                    return;
                }
                
                // –ò–ª–∏ –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                if (category.includes(name)) {
                    this.form.category = category;
                    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞:', category);
                    return;
                }
            }
            
            console.log('‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è:', name);
        },
        
        triggerFileInput() {
            if (this.fileInputRef) {
                this.fileInputRef.click();
            }
        },
        
        triggerFileInputMore() {
            if (this.fileInputMoreRef) {
                this.fileInputMoreRef.click();
            }
        },
        
        handleDrop(e) {
            this.isDragging = false;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
            if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {
                this.handleFileUpload(e.dataTransfer.files);
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            const url = e.dataTransfer.getData('text/plain');
            if (url && (url.startsWith('http://') || url.startsWith('https://'))) {
                this.form.design_files_urls.push(url);
            } else {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ');
            }
        },
        
        handleFileSelect(e) {
            const files = e.target.files;
            if (files && files.length > 0) {
                this.handleFileUpload(files);
            }
        },
        
        async handleFileUpload(files) {
            console.log('üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤:', files.length);
            
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
                if (!file.type.startsWith('image/')) {
                    alert(`–§–∞–π–ª ${file.name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º`);
                    continue;
                }
                
                try {
                    // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
                    const formData = new FormData();
                    formData.append('file', file);
                    formData.append('folder', 'calc');
                    
                    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ SFTP
                    const response = await axios.post('/api/sftp/upload', formData, {
                        headers: { 'Content-Type': 'multipart/form-data' }
                    });
                    
                    if (response.data.url) {
                        this.form.design_files_urls.push(response.data.url);
                        console.log('‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', response.data.url);
                    }
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:', error);
                    alert(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ${file.name}`);
                }
            }
        },
        
        addPhoto() {
            if (this.photoUrl && this.photoUrl.trim()) {
                const url = this.photoUrl.trim();
                if (url.startsWith('http://') || url.startsWith('https://')) {
                    this.form.design_files_urls.push(url);
                    this.photoUrl = '';
                } else {
                    alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http:// –∏–ª–∏ https://)');
                }
            }
        },
        
        removePhoto(index) {
            this.form.design_files_urls.splice(index, 1);
        },
        
        close() {
            this.$emit('close');
        }
    }
};
