/**
 * üì¶ CATEGORIES PANEL V2 COMPONENT
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è V2 –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 * –î–∏–∑–∞–π–Ω –≤ —Å—Ç–∏–ª–µ RouteDetailsV2
 */

window.CategoriesPanelV2 = {
    name: 'CategoriesPanelV2',
    
    data() {
        return {
            categories: [],
            statistics: {},
            searchQuery: '',
            isLoading: false,
            editingCategory: null,
            showEditForm: false,
            showAddForm: false,
            
            // –ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            newCategory: {
                category: '',
                material: '',
                tnved_code: '',
                density: null,
                duty_type: 'percent',  // percent, specific, combined
                duty_rate: '',  // –î–ª—è percent –∏ combined (ad valorem)
                specific_rate: '',  // –î–ª—è specific –∏ combined
                ad_valorem_rate: '',  // –î–ª—è combined
                vat_rate: '',
                certificates: [],
                rates: {
                    rail_base: null,
                    air_base: null
                }
            }
        };
    },
    
    computed: {
        filteredCategories() {
            if (!this.searchQuery) {
                return this.categories;
            }
            const query = this.searchQuery.toLowerCase();
            return this.categories.filter(cat => 
                cat.category.toLowerCase().includes(query) ||
                (cat.tnved_code && cat.tnved_code.includes(query))
            );
        },
        
        // –¢–µ–∫—É—â–∞—è —Ñ–æ—Ä–º–∞ (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è)
        currentForm() {
            return this.showEditForm ? this.editingCategory : this.newCategory;
        }
    },
    
    mounted() {
        this.loadCategories();
        this.loadStatistics();
    },
    
    methods: {
        async loadCategories() {
            this.isLoading = true;
            try {
                const response = await axios.get('/api/categories');
                console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', response.data.length);
                this.categories = response.data;
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
            } finally {
                this.isLoading = false;
            }
        },
        
        async loadStatistics() {
            try {
                const response = await axios.get('/api/categories/statistics');
                console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', response.data.length);
                // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Map –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
                this.statistics = response.data.reduce((acc, stat) => {
                    acc[stat.category] = stat;
                    return acc;
                }, {});
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            }
        },
        
        getStats(categoryName) {
            return this.statistics[categoryName] || null;
        },
        
        formatPrice(price) {
            if (!price) return '‚Äî';
            return price.toFixed(2) + ' ¬•';
        },
        
        startAdd() {
            this.newCategory = {
                category: '',
                material: '',
                tnved_code: '',
                density: null,
                duty_type: 'percent',
                duty_rate: '',
                specific_rate: '',
                ad_valorem_rate: '',
                vat_rate: '',
                certificates: [],
                rates: {
                    rail_base: null,
                    air_base: null
                }
            };
            this.showAddForm = true;
            this.showEditForm = false;
        },
        
        startEdit(category) {
            const categoryClone = JSON.parse(JSON.stringify(category));
            if (!categoryClone.id && category.id) {
                categoryClone.id = category.id;
            }
            if (!categoryClone.rates) {
                categoryClone.rates = {
                    rail_base: null,
                    air_base: null
                };
            }
            this.editingCategory = categoryClone;
            this.showEditForm = true;
            this.showAddForm = false;
            console.log('üîß –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:', this.editingCategory.category);
        },
        
        cancelEdit() {
            this.showEditForm = false;
            this.showAddForm = false;
            this.editingCategory = null;
        },
        
        async saveCategory() {
            console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', this.editingCategory);
            if (!this.editingCategory.id) {
                alert('‚ùå –û—à–∏–±–∫–∞: ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return;
            }
            try {
                await axios.put(`/api/categories/${this.editingCategory.id}`, this.editingCategory);
                this.cancelEdit();
                this.loadCategories();
                this.loadStatistics();
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
                alert('–û—à–∏–±–∫–∞: ' + (error.response?.data?.detail || error.message));
            }
        },
        
        async addCategory() {
            if (!this.newCategory.category || !this.newCategory.rates.rail_base || !this.newCategory.rates.air_base) {
                alert('‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
                return;
            }
            try {
                await axios.post('/api/categories', this.newCategory);
                this.cancelEdit();
                this.loadCategories();
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', error);
                alert('–û—à–∏–±–∫–∞: ' + (error.response?.data?.detail || error.message));
            }
        },
        
        async deleteCategory(category) {
            if (!confirm(`–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${category.category}"?`)) {
                return;
            }
            try {
                await axios.delete(`/api/categories/${category.id}`);
                this.loadCategories();
                this.loadStatistics();
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
                alert('–û—à–∏–±–∫–∞: ' + (error.response?.data?.detail || error.message));
            }
        },
        
        getCustomsInfo(category) {
            const customs = {
                duty_rate: null,
                vat_rate: null,
                duty_type: null,
                certificates: []
            };
            if (category.customs_info) {
                customs.duty_rate = category.customs_info.duty_rate;
                customs.vat_rate = category.customs_info.vat_rate;
                customs.duty_type = category.customs_info.duty_type;
                customs.certificates = category.customs_info.certificates || [];
            }
            if (!customs.duty_rate && category.duty_rate) {
                customs.duty_rate = category.duty_rate;
            }
            if (!customs.vat_rate && category.vat_rate) {
                customs.vat_rate = category.vat_rate;
            }
            if (!customs.duty_type && category.duty_type) {
                customs.duty_type = category.duty_type;
            }
            if (!customs.certificates.length && category.certificates) {
                customs.certificates = Array.isArray(category.certificates) 
                    ? category.certificates 
                    : category.certificates.split(',').map(c => c.trim());
            }
            if (customs.duty_rate || customs.vat_rate) {
                return customs;
            }
            return null;
        }
    },
    
    template: `
        <div>
            <!-- Header -->
            <div style="margin-bottom: 20px;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                    <input 
                        v-model="searchQuery" 
                        type="text" 
                        placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –¢–ù –í–≠–î..." 
                        style="padding: 10px 14px; border: 1px solid #d1d5db; border-radius: 6px; width: 400px; font-size: 14px;"
                    />
                    <button 
                        @click="startAdd" 
                        style="padding: 10px 20px; background: #111827; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500; font-size: 14px;"
                    >
                        –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    </button>
                </div>
            </div>
            
            <!-- Loading -->
            <div v-if="isLoading" style="display: flex; flex-direction: column; align-items: center; padding: 60px;">
                <div style="width: 40px; height: 40px; border: 3px solid #e5e7eb; border-top-color: #111827; border-radius: 50%; animation: spin 0.8s linear infinite;"></div>
                <p style="margin-top: 16px; color: #6b7280; font-size: 14px;">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
            </div>
            
            <!-- Add/Edit Form -->
            <div v-else-if="showAddForm || showEditForm" style="background: #f9fafb; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
                <h3 style="font-size: 16px; font-weight: 600; color: #111827; margin-bottom: 20px;">
                    {{ showAddForm ? '–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è' : ('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ' + (currentForm.category || '')) }}
                </h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 16px; margin-bottom: 16px;">
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–ù–∞–∑–≤–∞–Ω–∏–µ *</label>
                        <input 
                            v-model="currentForm.category" 
                            type="text" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–ú–∞—Ç–µ—Ä–∏–∞–ª</label>
                        <input 
                            v-model="currentForm.material" 
                            type="text" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 16px; margin-bottom: 16px;">
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–¢–ù –í–≠–î</label>
                        <input 
                            v-model="currentForm.tnved_code" 
                            type="text" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (–∫–≥/–º¬≥)</label>
                        <input 
                            v-model.number="currentForm.density" 
                            type="number" 
                            step="0.1" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 16px; margin-bottom: 16px;">
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–ñ–î ($/–∫–≥) *</label>
                        <input 
                            v-model.number="currentForm.rates.rail_base" 
                            type="number" 
                            step="0.1" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–ê–≤–∏–∞ ($/–∫–≥) *</label>
                        <input 
                            v-model.number="currentForm.rates.air_base" 
                            type="number" 
                            step="0.1" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                </div>
                
                <!-- –¢–∏–ø –ø–æ—à–ª–∏–Ω—ã -->
                <div style="margin-bottom: 20px;">
                    <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–¢–∏–ø –ø–æ—à–ª–∏–Ω—ã</label>
                    <select 
                        v-model="currentForm.duty_type" 
                        style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px; background: white;"
                    >
                        <option value="percent">–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ (—Ç–æ–ª—å–∫–æ %)</option>
                        <option value="specific">–í–µ—Å–æ–≤—ã–µ (—Ç–æ–ª—å–∫–æ EUR/–∫–≥)</option>
                        <option value="combined">–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ (% –ò–õ–ò EUR/–∫–≥)</option>
                    </select>
                </div>
                
                <!-- –ü–æ–ª—è –ø–æ—à–ª–∏–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ -->
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 16px; margin-bottom: 20px;">
                    <!-- –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞ (percent –∏–ª–∏ combined) -->
                    <div v-if="currentForm.duty_type === 'percent' || currentForm.duty_type === 'combined'">
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">
                            {{ currentForm.duty_type === 'combined' ? '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞' : '–ü–æ—à–ª–∏–Ω–∞' }}
                        </label>
                        <input 
                            v-model="currentForm.duty_type === 'combined' ? currentForm.ad_valorem_rate : currentForm.duty_rate" 
                            type="text" 
                            placeholder="10%" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                    
                    <!-- –í–µ—Å–æ–≤–∞—è –ø–æ—à–ª–∏–Ω–∞ (specific –∏–ª–∏ combined) -->
                    <div v-if="currentForm.duty_type === 'specific' || currentForm.duty_type === 'combined'">
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">
                            –í–µ—Å–æ–≤–∞—è –ø–æ—à–ª–∏–Ω–∞ 
                            <span style="font-size: 12px; color: #6b7280;">(EUR/–∫–≥)</span>
                        </label>
                        <input 
                            v-model.number="currentForm.specific_rate" 
                            type="number" 
                            step="0.1"
                            min="0"
                            placeholder="2.2" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                    
                    <!-- –ù–î–° (–≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º) -->
                    <div>
                        <label style="display: block; margin-bottom: 6px; font-size: 13px; font-weight: 500; color: #374151;">–ù–î–°</label>
                        <input 
                            v-model="currentForm.vat_rate" 
                            type="text" 
                            placeholder="20%" 
                            style="width: 100%; padding: 9px 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px;"
                        />
                    </div>
                </div>
                
                <!-- –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ —Ç–∏–ø—É –ø–æ—à–ª–∏–Ω—ã -->
                <div v-if="currentForm.duty_type" style="background: #f0f9ff; padding: 12px; border-radius: 6px; margin-bottom: 20px; font-size: 12px; color: #0369a1;">
                    <div v-if="currentForm.duty_type === 'percent'">
                        <strong>–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ –ø–æ—à–ª–∏–Ω—ã:</strong> –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞ + –ª–æ–≥–∏—Å—Ç–∏–∫–∞).
                    </div>
                    <div v-if="currentForm.duty_type === 'specific'">
                        <strong>–í–µ—Å–æ–≤—ã–µ –ø–æ—à–ª–∏–Ω—ã:</strong> –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –≤–µ—Å—É —Ç–æ–≤–∞—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2.2 EUR –∑–∞ –∫–∞–∂–¥—ã–π –∫–∏–ª–æ–≥—Ä–∞–º–º). –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ–∫—Å—Ç–∏–ª—è –¢–ù –í–≠–î 6307.
                    </div>
                    <div v-if="currentForm.duty_type === 'combined'">
                        <strong>–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—à–ª–∏–Ω—ã:</strong> –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ (–ø—Ä–æ—Ü–µ–Ω—Ç –ò –≤–µ—Å), –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ë–û–õ–¨–®–ê–Ø. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–¥–µ–∂–¥—ã –∏ —Ç–µ–∫—Å—Ç–∏–ª—è.
                    </div>
                </div>
                
                <div style="display: flex; gap: 12px; justify-content: flex-end;">
                    <button @click="cancelEdit" style="padding: 10px 20px; background: #6b7280; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500; font-size: 14px;">–û—Ç–º–µ–Ω–∞</button>
                    <button @click="showAddForm ? addCategory() : saveCategory()" style="padding: 10px 20px; background: #111827; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500; font-size: 14px;">{{ showAddForm ? '–î–æ–±–∞–≤–∏—Ç—å' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' }}</button>
                </div>
            </div>
            
            <!-- Categories List -->
            <div v-else>
                <div v-for="cat in filteredCategories" :key="cat.id" style="background: #f9fafb; border-radius: 8px; padding: 16px; margin-bottom: 12px;">
                    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -->
                    <div style="display: flex; justify-content: space-between; align-items: start; margin-bottom: 12px;">
                        <div>
                            <div style="font-size: 15px; font-weight: 600; color: #111827;">{{ cat.category }}</div>
                            <div v-if="cat.material" style="font-size: 13px; color: #6b7280; margin-top: 2px;">{{ cat.material }}</div>
                        </div>
                        <div style="display: flex; gap: 8px;">
                            <button @click="startEdit(cat)" style="padding: 6px 14px; background: white; border: 1px solid #d1d5db; border-radius: 6px; cursor: pointer; font-size: 13px; color: #374151;">–ò–∑–º–µ–Ω–∏—Ç—å</button>
                            <button @click="deleteCategory(cat)" style="padding: 6px 14px; background: white; border: 1px solid #ef4444; color: #ef4444; border-radius: 6px; cursor: pointer; font-size: 13px;">–£–¥–∞–ª–∏—Ç—å</button>
                        </div>
                    </div>
                    
                    <!-- –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -->
                    <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 12px; margin-bottom: 12px;">
                        <div style="background: white; border-radius: 6px; padding: 10px;">
                            <div style="font-size: 11px; text-transform: uppercase; letter-spacing: 0.5px; color: #6b7280; margin-bottom: 4px;">–¢–ù –í–≠–î</div>
                            <div style="font-size: 13px; font-weight: 600; color: #111827; font-family: monospace;">{{ cat.tnved_code || '‚Äî' }}</div>
                        </div>
                        <div style="background: white; border-radius: 6px; padding: 10px;">
                            <div style="font-size: 11px; text-transform: uppercase; letter-spacing: 0.5px; color: #6b7280; margin-bottom: 4px;">–ñ–î</div>
                            <div style="font-size: 13px; font-weight: 600; color: #111827;">{{ cat.rates?.rail_base || '‚Äî' }} $/–∫–≥</div>
                        </div>
                        <div style="background: white; border-radius: 6px; padding: 10px;">
                            <div style="font-size: 11px; text-transform: uppercase; letter-spacing: 0.5px; color: #6b7280; margin-bottom: 4px;">–ê–≤–∏–∞</div>
                            <div style="font-size: 13px; font-weight: 600; color: #111827;">{{ cat.rates?.air_base || '‚Äî' }} $/–∫–≥</div>
                        </div>
                        <div style="background: white; border-radius: 6px; padding: 10px;">
                            <div style="font-size: 11px; text-transform: uppercase; letter-spacing: 0.5px; color: #6b7280; margin-bottom: 4px;">
                                –¢–∏–ø –ø–æ—à–ª–∏–Ω—ã
                            </div>
                            <div style="font-size: 12px; font-weight: 600; color: #111827;">
                                <span v-if="getCustomsInfo(cat)?.duty_type === 'combined'" style="color: #059669;">
                                    –ö–æ–º–±–∏–Ω–∏—Ä.
                                </span>
                                <span v-else-if="getCustomsInfo(cat)?.duty_type === 'specific'" style="color: #0369a1;">
                                    –í–µ—Å–æ–≤—ã–µ
                                </span>
                                <span v-else style="color: #6b7280;">
                                    –ü—Ä–æ—Ü–µ–Ω—Ç
                                </span>
                            </div>
                            <div style="font-size: 11px; color: #6b7280; margin-top: 4px;">
                                {{ getCustomsInfo(cat)?.duty_rate || '‚Äî' }} / –ù–î–° {{ getCustomsInfo(cat)?.vat_rate || '‚Äî' }}
                            </div>
                        </div>
                    </div>
                    
                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–µ–Ω -->
                    <div v-if="getStats(cat.category)" style="border-top: 1px solid #e5e7eb; padding-top: 12px;">
                        <div style="font-size: 11px; text-transform: uppercase; letter-spacing: 0.5px; color: #6b7280; margin-bottom: 8px;">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–µ–Ω (–∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—á–µ—Ç–æ–≤)</div>
                        <div style="display: grid; grid-template-columns: repeat(5, 1fr); gap: 10px;">
                            <div style="background: white; border-radius: 6px; padding: 8px;">
                                <div style="font-size: 10px; color: #9ca3af; margin-bottom: 3px;">–†–∞—Å—á–µ—Ç–æ–≤</div>
                                <div style="font-size: 14px; font-weight: 700; color: #111827;">{{ getStats(cat.category).count }}</div>
                            </div>
                            <div style="background: white; border-radius: 6px; padding: 8px;">
                                <div style="font-size: 10px; color: #9ca3af; margin-bottom: 3px;">–ú–∏–Ω</div>
                                <div style="font-size: 14px; font-weight: 700; color: #111827;">{{ formatPrice(getStats(cat.category).min_price) }}</div>
                            </div>
                            <div style="background: white; border-radius: 6px; padding: 8px;">
                                <div style="font-size: 10px; color: #9ca3af; margin-bottom: 3px;">–ú–∞–∫—Å</div>
                                <div style="font-size: 14px; font-weight: 700; color: #111827;">{{ formatPrice(getStats(cat.category).max_price) }}</div>
                            </div>
                            <div style="background: white; border-radius: 6px; padding: 8px;">
                                <div style="font-size: 10px; color: #9ca3af; margin-bottom: 3px;">–°—Ä–µ–¥–Ω—è—è</div>
                                <div style="font-size: 14px; font-weight: 700; color: #111827;">{{ formatPrice(getStats(cat.category).avg_price) }}</div>
                            </div>
                            <div v-if="getStats(cat.category).median_price" style="background: white; border-radius: 6px; padding: 8px;">
                                <div style="font-size: 10px; color: #9ca3af; margin-bottom: 3px;">–ú–µ–¥–∏–∞–Ω–∞</div>
                                <div style="font-size: 14px; font-weight: 700; color: #111827;">{{ formatPrice(getStats(cat.category).median_price) }}</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div v-if="filteredCategories.length === 0" style="padding: 60px; text-align: center; color: #6b7280;">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                </div>
            </div>
        </div>
        
        <style>
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        </style>
    `
};
