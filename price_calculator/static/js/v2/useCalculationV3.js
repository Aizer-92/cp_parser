/**
 * Vue Composable –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å V3 API (State Machine + Strategy Pattern)
 * 
 * –°–∫—Ä—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
 * UI –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º - –º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ª–æ–≥–∏–∫–∞.
 */

window.useCalculationV3 = function() {
    return {
        /**
         * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞—Å—á—ë—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º workflow
         * 
         * @param {Object} requestData - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞
         * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á—ë—Ç–∞
         */
        async calculate(requestData) {
            console.log('üîµ V3 Calculate:', requestData.product_name);
            console.log('   forced_category:', requestData.forced_category);
            console.log('   custom_logistics:', !!requestData.custom_logistics);
            
            try {
                // –°–¢–†–ê–¢–ï–ì–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–µ–º /api/v3/calculate/execute –¥–ª—è –≤—Å–µ—Ö —Å–ª—É—á–∞–µ–≤
                // –û–Ω —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –Ω—É–∂–µ–Ω –ª–∏ –≤–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å
                
                const response = await axios.post('/api/v3/calculate/execute', requestData);
                
                console.log('‚úÖ V3 Calculate SUCCESS:', response.data.id);
                
                return response.data;
                
            } catch (error) {
                console.error('‚ùå V3 Calculate ERROR:', error);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ V3
                if (error.response?.status === 400) {
                    const detail = error.response.data?.detail || '–û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞';
                    
                    // –ï—Å–ª–∏ —Ç—Ä–µ–±—É—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    if (detail.includes('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å—á—ë—Ç')) {
                        throw new Error('–î–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–≥–∏—Å—Ç–∏–∫–∏');
                    }
                    
                    if (detail.includes('–ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã')) {
                        throw new Error(detail);
                    }
                    
                    throw new Error(detail);
                }
                
                throw error;
            }
        },
        
        /**
         * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω—É–∂–µ–Ω –ª–∏ –≤–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
         * 
         * @param {Object} requestData - –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
         * @returns {Promise<Object>} { needsInput, requiredParams, category }
         */
        async checkRequirements(requestData) {
            try {
                const response = await axios.post('/api/v3/calculate/start', requestData);
                
                return {
                    needsInput: response.data.needs_user_input,
                    requiredParams: response.data.required_params || [],
                    category: response.data.category,
                    state: response.data.state,
                    message: response.data.message
                };
                
            } catch (error) {
                console.error('‚ùå V3 Check Requirements ERROR:', error);
                // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –Ω—É–∂–Ω—ã
                return {
                    needsInput: false,
                    requiredParams: [],
                    category: null,
                    state: 'unknown'
                };
            }
        },
        
        /**
         * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥ —Ä–∞—Å—á—ë—Ç–æ–º
         * 
         * @param {Object} requestData - –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å custom_logistics
         * @returns {Promise<Object>} { valid, errors, canCalculate }
         */
        async validateCustomParams(requestData) {
            try {
                const response = await axios.post('/api/v3/calculate/params', {
                    product_name: requestData.product_name,
                    quantity: requestData.quantity,
                    weight_kg: requestData.weight_kg,
                    unit_price_yuan: requestData.price_yuan,
                    markup: requestData.markup,
                    forced_category: requestData.forced_category,
                    custom_logistics: requestData.custom_logistics
                });
                
                return {
                    valid: response.data.valid,
                    errors: response.data.errors || [],
                    canCalculate: response.data.can_calculate,
                    state: response.data.state
                };
                
            } catch (error) {
                console.error('‚ùå V3 Validate Params ERROR:', error);
                return {
                    valid: false,
                    errors: ['–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤'],
                    canCalculate: false
                };
            }
        },
        
        /**
         * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
         * 
         * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
         */
        async getCategories() {
            try {
                const response = await axios.get('/api/v3/categories');
                return response.data.categories || [];
            } catch (error) {
                console.error('‚ùå V3 Get Categories ERROR:', error);
                return [];
            }
        },
        
        /**
         * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–∞—Å—á—ë—Ç
         * 
         * @param {number} calculationId - ID —Ä–∞—Å—á—ë—Ç–∞
         * @param {Object} requestData - –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
         * @returns {Promise<Object>} –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
         */
        async updateCalculation(calculationId, requestData) {
            try {
                // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º V2 endpoint –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                // TODO: —Å–æ–∑–¥–∞—Ç—å V3 endpoint –¥–ª—è update
                const response = await axios.put(`/api/v2/calculation/${calculationId}`, requestData);
                
                console.log('‚úÖ V3 Update SUCCESS:', calculationId);
                
                return response.data;
                
            } catch (error) {
                console.error('‚ùå V3 Update ERROR:', error);
                throw error;
            }
        },
        
        /**
         * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
         * 
         * –§–æ—Ä–º–∞ –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –µ—Å–ª–∏:
         * - –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è (–µ—Å—Ç—å –±–∞–∑–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏)
         * - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã (custom_logistics —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
         * 
         * –§–æ—Ä–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏:
         * - "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" –ò custom_logistics –ø—É—Å—Ç–æ–π
         * 
         * @param {string} category - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
         * @param {Object} customLogistics - –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ custom_logistics
         * @returns {boolean} –ù—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É
         */
        shouldShowEditForm(category, customLogistics) {
            // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ù–æ–≤–∞—è" –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
            if (category === '–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è') {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—å –æ–¥–∏–Ω –º–∞—Ä—à—Ä—É—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                if (!customLogistics) return true;
                
                const hasAnyParams = Object.values(customLogistics).some(route => {
                    if (!route) return false;
                    return route.custom_rate != null || 
                           route.duty_rate != null || 
                           route.vat_rate != null;
                });
                
                return !hasAnyParams;
            }
            
            // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π - –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –æ—Ç–∫—Ä–æ–µ—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            return false;
        },
        
        /**
         * –°–æ–∑–¥–∞—ë—Ç –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç custom_logistics –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
         * 
         * @returns {Object} –ü—É—Å—Ç—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
         */
        createEmptyCustomLogistics() {
            return {
                highway_rail: { custom_rate: null, duty_rate: null, vat_rate: null, specific_rate: null },
                highway_air: { custom_rate: null, duty_rate: null, vat_rate: null, specific_rate: null },
                highway_contract: { custom_rate: null, duty_rate: null, vat_rate: null, specific_rate: null },
                prologix: { custom_rate: null, duty_rate: null, vat_rate: null, specific_rate: null },
                sea_container: { custom_rate: null, duty_rate: null, vat_rate: null, specific_rate: null }
            };
        },
        
        /**
         * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞
         * 
         * @param {Object} routeParams - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∞—Ä—à—Ä—É—Ç–∞
         * @returns {boolean} –ó–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
         */
        isRouteParamsFilled(routeParams) {
            if (!routeParams) return false;
            
            return routeParams.custom_rate != null || 
                   routeParams.duty_rate != null || 
                   routeParams.vat_rate != null ||
                   routeParams.specific_rate != null;
        }
    };
};

