/**
 * üì¶ CATEGORIES PANEL COMPONENT
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
 */

const CategoriesPanel = {
    name: 'CategoriesPanel',
    
    data: function() {
        return {
            categories: [],
            searchQuery: '',
            isLoading: false,
            editingCategory: null,
            showEditForm: false,
            showAddForm: false,
            
            // –ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            newCategory: {
                category: '',
                material: '',
                tnved_code: '',
                density: null,
                rates: {
                    rail_base: null,
                    air_base: null
                }
            }
        }
    },
    
    computed: {
        filteredCategories: function() {
            if (!this.searchQuery) {
                return this.categories;
            }
            var query = this.searchQuery.toLowerCase();
            return this.categories.filter(function(cat) {
                return cat.category.toLowerCase().includes(query) ||
                       (cat.tnved_code && cat.tnved_code.includes(query));
            });
        }
    },
    
    mounted: function() {
        this.loadCategories();
    },
    
    methods: {
        loadCategories: function() {
            var self = this;
            self.isLoading = true;
            
            axios.get('/api/categories')
                .then(function(response) {
                    console.log('üîç RAW API RESPONSE:', response.data);
                    console.log('üîç –¢–∏–ø response.data:', typeof response.data, Array.isArray(response.data));
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –î–û –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è
                    if (response.data && response.data.length > 0) {
                        console.log('üîç –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ API:', response.data[0]);
                        console.log('üîç ID –≤ –ø–µ—Ä–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ:', response.data[0].id);
                        console.log('üîç –í—Å–µ –∫–ª—é—á–∏ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:', Object.keys(response.data[0]));
                    }
                    
                    self.categories = response.data;
                    console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', self.categories.length);
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ü–û–°–õ–ï –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è
                    if (self.categories.length > 0) {
                        console.log('–ü–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ü–û–°–õ–ï:', self.categories[0]);
                        console.log('ID –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ü–û–°–õ–ï:', self.categories[0].id);
                    }
                })
                .catch(function(error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
                    alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
                })
                .finally(function() {
                    self.isLoading = false;
                });
        },
        
        startAdd: function() {
            this.newCategory = {
                category: '',
                material: '',
                tnved_code: '',
                density: null,
                rates: {
                    rail_base: null,
                    air_base: null
                }
            };
            this.showAddForm = true;
            this.showEditForm = false;
        },
        
        startEdit: function(category) {
            // –ì–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è —Å —è–≤–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º ID
            var categoryClone = JSON.parse(JSON.stringify(category));
            
            // –ö–†–ò–¢–ò–ß–ù–û: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ ID —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω
            if (!categoryClone.id && category.id) {
                categoryClone.id = category.id;
            }
            
            this.editingCategory = categoryClone;
            this.showEditForm = true;
            this.showAddForm = false;
            
            console.log('üîß –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', this.editingCategory.category);
            console.log('üîß ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', this.editingCategory.id, '—Ç–∏–ø:', typeof this.editingCategory.id);
            console.log('üîß –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ID:', category.id, '—Ç–∏–ø:', typeof category.id);
        },
        
        cancelEdit: function() {
            this.showEditForm = false;
            this.showAddForm = false;
            this.editingCategory = null;
        },
        
        saveCategory: function() {
            var self = this;
            
            console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', this.editingCategory);
            console.log('ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', this.editingCategory.id);
            
            if (!this.editingCategory.id) {
                alert('–û—à–∏–±–∫–∞: ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ' + JSON.stringify(this.editingCategory));
                return;
            }
            
            axios.put('/api/categories/' + this.editingCategory.id, this.editingCategory)
                .then(function(response) {
                    alert('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
                    self.cancelEdit();
                    self.loadCategories();
                })
                .catch(function(error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
                    alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + (error.response?.data?.detail || error.message));
                });
        },
        
        addCategory: function() {
            var self = this;
            
            if (!this.newCategory.category || !this.newCategory.rates.rail_base || !this.newCategory.rates.air_base) {
                alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—Ç–∞–≤–∫–∏ –ñ–î –∏ –ê–≤–∏–∞');
                return;
            }
            
            axios.post('/api/categories', this.newCategory)
                .then(function(response) {
                    alert('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
                    self.cancelEdit();
                    self.loadCategories();
                })
                .catch(function(error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', error);
                    alert('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ' + (error.response?.data?.detail || error.message));
                });
        },
        
        deleteCategory: function(category) {
            console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category.category);
            console.log('üóëÔ∏è ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category.id, '—Ç–∏–ø:', typeof category.id);
            console.log('üóëÔ∏è –ü–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç:', JSON.stringify(category));
            
            if (!category.id) {
                alert('–û—à–∏–±–∫–∞: ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!\n\n–û–±—ä–µ–∫—Ç: ' + JSON.stringify(category, null, 2));
                return;
            }
            
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é "' + category.category + '"?')) {
                return;
            }
            
            var self = this;
            var categoryId = category.id;
            console.log('üóëÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º DELETE –∑–∞–ø—Ä–æ—Å –¥–ª—è ID:', categoryId);
            
            axios.delete('/api/categories/' + categoryId)
                .then(function() {
                    alert('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞');
                    self.loadCategories();
                })
                .catch(function(error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
                    alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + (error.response?.data?.detail || error.message));
                });
        },
        
        getCustomsInfo: function(category) {
            // –ü–æ—à–ª–∏–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:
            // 1. –í customs_info (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
            // 2. –ù–∞–ø—Ä—è–º—É—é –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
            // 3. –í –ø–æ–ª–µ duty_rate/vat_rate
            
            var customs = {
                duty_rate: null,
                vat_rate: null,
                duty_type: null,
                certificates: []
            };
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º customs_info
            if (category.customs_info) {
                customs.duty_rate = category.customs_info.duty_rate;
                customs.vat_rate = category.customs_info.vat_rate;
                customs.duty_type = category.customs_info.duty_type;
                customs.certificates = category.customs_info.certificates || [];
            }
            
            // Fallback –Ω–∞ –ø—Ä—è–º—ã–µ –ø–æ–ª—è
            if (!customs.duty_rate && category.duty_rate) {
                customs.duty_rate = category.duty_rate;
            }
            if (!customs.vat_rate && category.vat_rate) {
                customs.vat_rate = category.vat_rate;
            }
            if (!customs.duty_type && category.duty_type) {
                customs.duty_type = category.duty_type;
            }
            if (!customs.certificates.length && category.certificates) {
                customs.certificates = Array.isArray(category.certificates) 
                    ? category.certificates 
                    : category.certificates.split(',').map(function(c) { return c.trim(); });
            }
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ
            if (customs.duty_rate || customs.vat_rate) {
                return customs;
            }
            
            return null;
        }
    },
    
    template:
        '<div class="categories-panel-content">' +
            '<!-- Header -->' +
            '<div class="panel-header-row">' +
                '<h3 class="panel-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤</h3>' +
                '<div class="panel-actions">' +
                    '<input v-model="searchQuery" type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –¢–ù –í–≠–î..." class="search-input-field" />' +
                    '<button @click="startAdd" class="btn-primary">+ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</button>' +
                '</div>' +
            '</div>' +
            
            '<!-- Loading -->' +
            '<div v-if="isLoading" class="loading-container">' +
                '<div class="spinner-loader"></div>' +
                '<p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...</p>' +
            '</div>' +
            
            '<!-- Add Form -->' +
            '<div v-else-if="showAddForm" class="form-card">' +
                '<div class="form-card-header">' +
                    '<h4>–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è</h4>' +
                    '<button @click="cancelEdit" class="btn-close-form">‚úñ</button>' +
                '</div>' +
                '<div class="form-card-body">' +
                    '<div class="form-row-grid">' +
                        '<div class="form-group-item">' +
                            '<label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *</label>' +
                            '<input v-model="newCategory.category" type="text" class="input-text" />' +
                        '</div>' +
                        '<div class="form-group-item">' +
                            '<label>–ú–∞—Ç–µ—Ä–∏–∞–ª</label>' +
                            '<input v-model="newCategory.material" type="text" class="input-text" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="form-row-grid">' +
                        '<div class="form-group-item">' +
                            '<label>–ö–æ–¥ –¢–ù –í–≠–î</label>' +
                            '<input v-model="newCategory.tnved_code" type="text" class="input-text" />' +
                        '</div>' +
                        '<div class="form-group-item">' +
                            '<label>–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (–∫–≥/–º¬≥)</label>' +
                            '<input v-model.number="newCategory.density" type="number" step="0.1" class="input-text" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="form-row-grid">' +
                        '<div class="form-group-item">' +
                            '<label>–°—Ç–∞–≤–∫–∞ –ñ–î ($/–∫–≥) *</label>' +
                            '<input v-model.number="newCategory.rates.rail_base" type="number" step="0.1" class="input-text" />' +
                        '</div>' +
                        '<div class="form-group-item">' +
                            '<label>–°—Ç–∞–≤–∫–∞ –ê–≤–∏–∞ ($/–∫–≥) *</label>' +
                            '<input v-model.number="newCategory.rates.air_base" type="number" step="0.1" class="input-text" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="form-actions-row">' +
                        '<button @click="addCategory" class="btn-save">–î–æ–±–∞–≤–∏—Ç—å</button>' +
                        '<button @click="cancelEdit" class="btn-cancel-action">–û—Ç–º–µ–Ω–∞</button>' +
                    '</div>' +
                '</div>' +
            '</div>' +
            
            '<!-- Edit Form -->' +
            '<div v-else-if="showEditForm && editingCategory" class="form-card">' +
                '<div class="form-card-header">' +
                    '<h4>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {{ editingCategory.category }}</h4>' +
                    '<button @click="cancelEdit" class="btn-close-form">‚úñ</button>' +
                '</div>' +
                '<div class="form-card-body">' +
                    '<div class="form-row-grid">' +
                        '<div class="form-group-item">' +
                            '<label>–ù–∞–∑–≤–∞–Ω–∏–µ</label>' +
                            '<input v-model="editingCategory.category" type="text" class="input-text" />' +
                        '</div>' +
                        '<div class="form-group-item">' +
                            '<label>–ú–∞—Ç–µ—Ä–∏–∞–ª</label>' +
                            '<input v-model="editingCategory.material" type="text" class="input-text" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="form-row-grid">' +
                        '<div class="form-group-item">' +
                            '<label>–ö–æ–¥ –¢–ù –í–≠–î</label>' +
                            '<input v-model="editingCategory.tnved_code" type="text" class="input-text" />' +
                        '</div>' +
                        '<div class="form-group-item">' +
                            '<label>–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (–∫–≥/–º¬≥)</label>' +
                            '<input v-model.number="editingCategory.density" type="number" step="0.1" class="input-text" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="form-row-grid">' +
                        '<div class="form-group-item">' +
                            '<label>–°—Ç–∞–≤–∫–∞ –ñ–î ($/–∫–≥)</label>' +
                            '<input v-model.number="editingCategory.rates.rail_base" type="number" step="0.1" class="input-text" />' +
                        '</div>' +
                        '<div class="form-group-item">' +
                            '<label>–°—Ç–∞–≤–∫–∞ –ê–≤–∏–∞ ($/–∫–≥)</label>' +
                            '<input v-model.number="editingCategory.rates.air_base" type="number" step="0.1" class="input-text" />' +
                        '</div>' +
                    '</div>' +
                    '<div class="form-actions-row">' +
                        '<button @click="saveCategory" class="btn-save">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>' +
                        '<button @click="cancelEdit" class="btn-cancel-action">–û—Ç–º–µ–Ω–∞</button>' +
                    '</div>' +
                '</div>' +
            '</div>' +
            
            '<!-- Categories Table -->' +
            '<div v-else class="table-container">' +
                '<table class="data-table">' +
                    '<thead>' +
                        '<tr>' +
                            '<th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>' +
                            '<th>–ú–∞—Ç–µ—Ä–∏–∞–ª</th>' +
                            '<th>–¢–ù –í–≠–î</th>' +
                            '<th>–ñ–î ($/–∫–≥)</th>' +
                            '<th>–ê–≤–∏–∞ ($/–∫–≥)</th>' +
                            '<th>–ü–æ—à–ª–∏–Ω–∞</th>' +
                            '<th>–ù–î–°</th>' +
                            '<th>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã</th>' +
                            '<th>–î–µ–π—Å—Ç–≤–∏—è</th>' +
                        '</tr>' +
                    '</thead>' +
                    '<tbody>' +
                        '<tr v-for="cat in filteredCategories" :key="cat.id">' +
                            '<td><strong>{{ cat.category }}</strong></td>' +
                            '<td>{{ cat.material || "-" }}</td>' +
                            '<td><code class="code-badge">{{ cat.tnved_code || "-" }}</code></td>' +
                            '<td>{{ cat.rates.rail_base }}</td>' +
                            '<td>{{ cat.rates.air_base }}</td>' +
                            '<td>' +
                                '<span v-if="getCustomsInfo(cat)">' +
                                    '<strong>{{ getCustomsInfo(cat).duty_rate }}</strong>' +
                                    '<span v-if="getCustomsInfo(cat).duty_type === \'combined\'" class="duty-type-badge">–∫–æ–º–±.</span>' +
                                    '<span v-else-if="getCustomsInfo(cat).duty_type === \'specific\'" class="duty-type-badge">—Å–ø–µ—Ü.</span>' +
                                '</span>' +
                                '<span v-else>-</span>' +
                            '</td>' +
                            '<td>{{ getCustomsInfo(cat)?.vat_rate || "-" }}</td>' +
                            '<td class="certificates-cell">' +
                                '<span v-if="getCustomsInfo(cat) && getCustomsInfo(cat).certificates.length > 0" class="certificates-count">' +
                                    '{{ getCustomsInfo(cat).certificates.length }} —à—Ç.' +
                                '</span>' +
                                '<span v-else>-</span>' +
                            '</td>' +
                            '<td class="actions-cell">' +
                                '<button @click="startEdit(cat)" class="btn-action btn-edit">–ò–∑–º–µ–Ω–∏—Ç—å</button>' +
                                '<button @click="deleteCategory(cat)" class="btn-action btn-delete">–£–¥–∞–ª–∏—Ç—å</button>' +
                            '</td>' +
                        '</tr>' +
                    '</tbody>' +
                '</table>' +
                
                '<div v-if="filteredCategories.length === 0" class="empty-state-message">' +
                    '<p>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>' +
                '</div>' +
            '</div>' +
        '</div>'
};

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ
window.CategoriesPanel = CategoriesPanel;