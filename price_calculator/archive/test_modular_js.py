#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –ú–û–î–£–õ–¨–ù–û–ì–û JAVASCRIPT - –§–ê–ó–ê 2.2
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ JS —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π
"""

import requests
import time
from pathlib import Path

def test_modular_javascript():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á—Ç–æ –º–æ–¥—É–ª—å–Ω—ã–π JavaScript —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É"""
    
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–£–õ–¨–ù–û–ì–û JAVASCRIPT (–§–ê–ó–ê 2.2)")
    print("=" * 55)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    time.sleep(3)
    
    base_url = "http://localhost:8000"
    
    try:
        # –¢–µ—Å—Ç 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
        print("–¢–ï–°–¢ 1: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏  
        session = requests.Session()
        
        # –õ–æ–≥–∏–Ω–∏–º—Å—è
        login_response = session.post(f"{base_url}/api/login", data={
            "username": "admin", 
            "password": "admin123"
        })
        
        if login_response.status_code != 200:
            print(f"–û–®–ò–ë–ö–ê –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        main_response = session.get(f"{base_url}/")
        
        if main_response.status_code != 200:
            print(f"–û–®–ò–ë–ö–ê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: {main_response.status_code}")
            return False
            
        content = main_response.text
        print("OK –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
        
        # –¢–µ—Å—Ç 2: JavaScript –º–æ–¥—É–ª–∏ –ø–æ–¥–≥—Ä—É–∂–∞—é—Ç—Å—è
        print("\n–¢–ï–°–¢ 2: –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—å–Ω—ã—Ö JavaScript —Ñ–∞–π–ª–æ–≤...")
        
        js_files = [
            "/static/js/app-config.js",
            "/static/js/api-service.js", 
            "/static/js/utils.js",
            "/static/js/form-handlers.js",
            "/static/js/history-handlers.js",
            "/static/js/main-app.js"
        ]
        
        js_loaded = True
        for js_file in js_files:
            js_response = session.get(f"{base_url}{js_file}")
            if js_response.status_code == 200:
                print(f"   OK {js_file}")
            else:
                print(f"   –û–®–ò–ë–ö–ê {js_file}: {js_response.status_code}")
                js_loaded = False
        
        if not js_loaded:
            return False
            
        # –¢–µ—Å—Ç 3: HTML —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ JS –º–æ–¥—É–ª–∏
        print("\n–¢–ï–°–¢ 3: HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ JavaScript...")
        
        required_scripts = [
            '/static/js/app-config.js',
            '/static/js/main-app.js'
        ]
        
        scripts_found = True
        for script in required_scripts:
            if script in content:
                print(f"   OK –ù–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ {script}")
            else:
                print(f"   –û–®–ò–ë–ö–ê –ù–ï –Ω–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ {script}")
                scripts_found = False
        
        if not scripts_found:
            return False
            
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ JavaScript –ù–ï–¢
        print("\n–¢–ï–°–¢ 4: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JavaScript —É–¥–∞–ª–µ–Ω...")
        
        # –ò—â–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        vue_patterns = ['createApp({', 'const { createApp } = Vue;', '.mount(\'#app\');']
        inline_js_found = False
        
        for pattern in vue_patterns:
            if pattern in content:
                print(f"   –û–®–ò–ë–ö–ê –ù–∞–π–¥–µ–Ω –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JS –ø–∞—Ç—Ç–µ—Ä–Ω: {pattern}")
                inline_js_found = True
        
        if inline_js_found:
            return False
        else:
            print("   OK –í—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ JavaScript –Ω–µ—Ç")
        
        # –¢–µ—Å—Ç 5: API –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ —Å–ª–æ–º–∞–ª–∞—Å—å)
        print("\n–¢–ï–°–¢ 5: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        api_response = session.get(f"{base_url}/api/categories")
        if api_response.status_code == 200:
            categories = api_response.json()
            print(f"   OK API –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        else:
            print(f"   –û–®–ò–ë–ö–ê API –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {api_response.status_code}")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Ä–∞—Å—á–µ—Ç–∞ (–ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç)
        calc_data = {
            "product_name": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä",
            "price_yuan": 10.0,
            "weight_kg": 0.5,
            "quantity": 100,
            "delivery_type": "rail",
            "markup": 1.7
        }
        
        calc_response = session.post(f"{base_url}/api/calculate", json=calc_data)
        if calc_response.status_code == 200:
            calc_result = calc_response.json()
            print("   OK API —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   –û–®–ò–ë–ö–ê API —Ä–∞—Å—á–µ—Ç–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {calc_response.status_code}")
            return False
            
        print("\n" + "=" * 55)
        print("–í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("OK –ú–æ–¥—É–ª—å–Ω—ã–π JavaScript —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É")
        print("OK –í—Å–µ JS –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ") 
        print("OK –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        print("–ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ –ù–ê RAILWAY!")
        
        return True
        
    except Exception as e:
        print(f"\n–û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {e}")
        return False

def compare_file_sizes():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤"""
    print("\n–°–†–ê–í–ù–ï–ù–ò–ï –†–ê–ó–ú–ï–†–û–í –§–ê–ô–õ–û–í:")
    
    try:
        original_size = Path("index.html").stat().st_size
        modular_size = Path("index_with_modular_js.html").stat().st_size  
        
        print(f"   –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JS (index.html): {original_size:,} –±–∞–π—Ç")
        print(f"   –ú–æ–¥—É–ª—å–Ω—ã–π JS (index_with_modular_js.html): {modular_size:,} –±–∞–π—Ç")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞: {original_size - modular_size:+,} –±–∞–π—Ç")
        
        if modular_size < original_size:
            reduction = ((original_size - modular_size) / original_size) * 100
            print(f"   HTML —Ñ–∞–π–ª —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ {reduction:.1f}%")
        elif modular_size > original_size:
            increase = ((modular_size - original_size) / original_size) * 100
            print(f"   HTML —Ñ–∞–π–ª —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ {increase:.1f}%")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä JS –º–æ–¥—É–ª–µ–π
        js_modules = [
            "static/js/app-config.js",
            "static/js/api-service.js",
            "static/js/utils.js", 
            "static/js/form-handlers.js",
            "static/js/history-handlers.js",
            "static/js/main-app.js"
        ]
        
        total_js_size = 0
        for js_file in js_modules:
            if Path(js_file).exists():
                total_js_size += Path(js_file).stat().st_size
        
        print(f"   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä JS –º–æ–¥—É–ª–µ–π: {total_js_size:,} –±–∞–π—Ç")
        print(f"   –ò—Ç–æ–≥–æ (HTML + JS): {modular_size + total_js_size:,} –±–∞–π—Ç")
        
        total_diff = (modular_size + total_js_size) - original_size
        if total_diff > 0:
            increase = (total_diff / original_size) * 100
            print(f"   –û–±—â–µ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ: +{total_diff:,} –±–∞–π—Ç (+{increase:.1f}%)")
        else:
            decrease = (abs(total_diff) / original_size) * 100
            print(f"   –û–±—â–µ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ: {total_diff:,} –±–∞–π—Ç (-{decrease:.1f}%)")
        
    except Exception as e:
        print(f"   –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã: {e}")

if __name__ == "__main__":
    success = test_modular_javascript()
    compare_file_sizes()
    
    print("\n" + "=" * 55)
    if success:
        print("–†–ï–ó–£–õ–¨–¢–ê–¢: –ú–û–î–£–õ–¨–ù–´–ô JAVASCRIPT –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ")
        print("   –ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å index.html –∏ –¥–µ–ø–ª–æ–∏—Ç—å")
    else:
        print("–†–ï–ó–£–õ–¨–¢–ê–¢: –¢–†–ï–ë–£–Æ–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
        print("   –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º")
