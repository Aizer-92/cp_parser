#!/usr/bin/env python3
"""
üé® –¢–ï–°–¢ –ú–û–î–£–õ–¨–ù–û–ì–û CSS - –§–ê–ó–ê 2.1
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º –ø–æ—Å–ª–µ –≤—ã–Ω–µ—Å–µ–Ω–∏—è CSS –≤ –º–æ–¥—É–ª–∏
"""

import requests
import time
from pathlib import Path

def test_modular_css():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á—Ç–æ –º–æ–¥—É–ª—å–Ω—ã–π CSS —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É"""
    
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–£–õ–¨–ù–û–ì–û CSS (–§–ê–ó–ê 2.1)")
    print("=" * 50)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    time.sleep(3)
    
    base_url = "http://localhost:8000"
    
    try:
        # –¢–µ—Å—Ç 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
        print("–¢–ï–°–¢ 1: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏  
        session = requests.Session()
        
        # –õ–æ–≥–∏–Ω–∏–º—Å—è
        login_response = session.post(f"{base_url}/api/login", data={
            "username": "admin", 
            "password": "admin123"
        })
        
        if login_response.status_code != 200:
            print(f"–û–®–ò–ë–ö–ê –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        main_response = session.get(f"{base_url}/")
        
        if main_response.status_code != 200:
            print(f"–û–®–ò–ë–ö–ê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: {main_response.status_code}")
            return False
            
        content = main_response.text
        print("OK –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
        
        # –¢–µ—Å—Ç 2: CSS —Ñ–∞–π–ª—ã –ø–æ–¥–≥—Ä—É–∂–∞—é—Ç—Å—è
        print("\n–¢–ï–°–¢ 2: –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—å–Ω—ã—Ö CSS —Ñ–∞–π–ª–æ–≤...")
        
        css_files = [
            "/static/css/main.css",
            "/static/css/components/header.css", 
            "/static/css/components/cards.css",
            "/static/css/components/forms.css",
            "/static/css/components/history.css"
        ]
        
        css_loaded = True
        for css_file in css_files:
            css_response = session.get(f"{base_url}{css_file}")
            if css_response.status_code == 200:
                print(f"   OK {css_file}")
            else:
                print(f"   –û–®–ò–ë–ö–ê {css_file}: {css_response.status_code}")
                css_loaded = False
        
        if not css_loaded:
            return False
            
        # –¢–µ—Å—Ç 3: HTML —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ CSS –º–æ–¥—É–ª–∏
        print("\n–¢–ï–°–¢ 3: HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ CSS...")
        
        required_links = [
            '/static/css/main.css',
            '/static/css/components/header.css',
            '/static/css/components/cards.css'
        ]
        
        links_found = True
        for link in required_links:
            if link in content:
                print(f"   OK –ù–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ {link}")
            else:
                print(f"   –û–®–ò–ë–ö–ê –ù–ï –Ω–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ {link}")
                links_found = False
        
        if not links_found:
            return False
            
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –ù–ï–¢
        print("\n–¢–ï–°–¢ 4: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ —É–¥–∞–ª–µ–Ω—ã...")
        
        if '<style>' in content:
            print("   –û–®–ò–ë–ö–ê –ù–∞–π–¥–µ–Ω—ã –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ <style> —Ç–µ–≥–∏ - –º–æ–¥—É–ª—è—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
            return False
        else:
            print("   OK –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö <style> —Ç–µ–≥–æ–≤ –Ω–µ—Ç")
        
        # –¢–µ—Å—Ç 5: API —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ —Å–ª–æ–º–∞–ª–∞—Å—å)
        print("\n–¢–ï–°–¢ 5: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞...")
        
        api_response = session.get(f"{base_url}/api/categories")
        if api_response.status_code == 200:
            categories = api_response.json()
            print(f"   OK API –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        else:
            print(f"   –û–®–ò–ë–ö–ê API –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {api_response.status_code}")
            return False
            
        print("\n" + "=" * 50)
        print("–í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("OK –ú–æ–¥—É–ª—å–Ω—ã–π CSS —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É")
        print("OK –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π") 
        print("OK –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        print("–ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ –ù–ê RAILWAY!")
        
        return True
        
    except Exception as e:
        print(f"\n–û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {e}")
        return False

def compare_file_sizes():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤"""
    print("\n–°–†–ê–í–ù–ï–ù–ò–ï –†–ê–ó–ú–ï–†–û–í –§–ê–ô–õ–û–í:")
    
    try:
        backup_size = Path("index_backup.html").stat().st_size
        current_size = Path("index.html").stat().st_size  
        
        print(f"   –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π CSS (backup): {backup_size:,} –±–∞–π—Ç")
        print(f"   –ú–æ–¥—É–ª—å–Ω—ã–π CSS (current): {current_size:,} –±–∞–π—Ç")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞: {backup_size - current_size:+,} –±–∞–π—Ç")
        
        if current_size < backup_size:
            reduction = ((backup_size - current_size) / backup_size) * 100
            print(f"   HTML —Ñ–∞–π–ª —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ {reduction:.1f}%")
        
    except Exception as e:
        print(f"   –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã: {e}")

if __name__ == "__main__":
    success = test_modular_css()
    compare_file_sizes()
    
    print("\n" + "=" * 50)
    if success:
        print("–†–ï–ó–£–õ–¨–¢–ê–¢: –ú–û–î–£–õ–¨–ù–´–ô CSS –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ")
        print("   –ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ Railway")
    else:
        print("–†–ï–ó–£–õ–¨–¢–ê–¢: –¢–†–ï–ë–£–Æ–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
        print("   –ù—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É CSS")

