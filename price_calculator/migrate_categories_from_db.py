#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ë–î –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ database.py –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.
"""

import json
from typing import List, Dict, Any
from models.category import Category, CategoryRequirements

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –ë–î
try:
    from database import load_categories_from_db
    DB_AVAILABLE = True
except ImportError:
    DB_AVAILABLE = False
    print("‚ö†Ô∏è database.py –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")


def migrate_category_data(cat_data: Dict[str, Any]) -> Category:
    """
    –ú–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –≤ –Ω–æ–≤—ã–π Category.
    –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ.
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ from_dict
    category = Category.from_dict(cat_data)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"
    if category.name == "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è":
        category.requirements.requires_logistics_rate = True
        print(f"  üÜï '{category.name}' - –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ —Ç—Ä–µ–±—É—é—â–∞—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞")
    
    return category


def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("="*60)
    print("üîÑ –ú–ò–ì–†–ê–¶–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô –ò–ó –ë–î")
    print("="*60)
    
    if not DB_AVAILABLE:
        print("\n‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ë–î")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ database.py –¥–æ—Å—Ç—É–ø–µ–Ω")
        return 1
    
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ë–î
    print("\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ë–î...")
    try:
        existing_cats = load_categories_from_db()
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(existing_cats)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î: {e}")
        return 1
    
    # 2. –ú–∏–≥—Ä–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    print("\nüîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç...")
    migrated_categories = []
    stats = {
        'total': 0,
        'success': 0,
        'needs_custom_params': 0,
        'errors': 0
    }
    
    for cat_data in existing_cats:
        stats['total'] += 1
        cat_name = cat_data.get('category', 'UNKNOWN')
        
        try:
            category = migrate_category_data(cat_data)
            migrated_categories.append(category)
            stats['success'] += 1
            
            if category.needs_custom_params():
                stats['needs_custom_params'] += 1
                print(f"  ‚öôÔ∏è  {category.name} - —Ç—Ä–µ–±—É–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
            
        except Exception as e:
            stats['errors'] += 1
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ '{cat_name}': {e}")
            import traceback
            traceback.print_exc()
    
    # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    output_file = 'config/categories_migrated.json'
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ {output_file}...")
    
    data = {
        'version': '2.0',
        'description': 'Categories migrated to new Category model',
        'total_categories': len(migrated_categories),
        'migration_stats': stats,
        'categories': [cat.to_dict() for cat in migrated_categories]
    }
    
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(migrated_categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return 1
    
    # 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:")
    print(f"  –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {stats['total']}")
    print(f"  –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ: {stats['success']}")
    print(f"  –¢—Ä–µ–±—É—é—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {stats['needs_custom_params']}")
    print(f"  –û—à–∏–±–æ–∫: {stats['errors']}")
    
    # 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    
    test_names = ['–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', '—Å—É–º–∫–∞', '–§—É—Ç–±–æ–ª–∫–∏']
    for cat_name in test_names:
        cat = next((c for c in migrated_categories if c.name.lower() == cat_name.lower()), None)
        if cat:
            print(f"\n‚úì {cat.name}:")
            print(f"  - –ú–∞—Ç–µ—Ä–∏–∞–ª: {cat.material[:50]}..." if len(cat.material) > 50 else f"  - –ú–∞—Ç–µ—Ä–∏–∞–ª: {cat.material}")
            print(f"  - –¢—Ä–µ–±—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {cat.needs_custom_params()}")
            print(f"  - –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏: rail={cat.rail_base}, air={cat.air_base}")
            print(f"  - –ü–æ—à–ª–∏–Ω–∞: {cat.duty_rate}%, –ù–î–°: {cat.vat_rate}%")
            print(f"  - Keywords: {len(cat.keywords)} —à—Ç.")
            
            # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            is_valid, errors = cat.validate_params({})
            if not is_valid:
                print(f"  - ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ: {', '.join(cat.get_required_params_names()[:2])}...")
        else:
            print(f"\n‚ö†Ô∏è '{cat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö")
    
    # 6. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    report = f"""
# –û—Ç—á—ë—Ç –æ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π

## –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:** {stats['total']}
- **–£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ:** {stats['success']}
- **–¢—Ä–µ–±—É—é—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:** {stats['needs_custom_params']} ({stats['needs_custom_params']/stats['total']*100:.1f}%)
- **–û—à–∏–±–æ–∫:** {stats['errors']}

## –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

"""
    
    for cat in migrated_categories:
        if cat.needs_custom_params():
            report += f"### {cat.name}\n"
            report += f"- –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏: rail={cat.rail_base}, air={cat.air_base}\n"
            report += f"- –¢—Ä–µ–±—É–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {', '.join(cat.get_required_params_names())}\n\n"
    
    report += """
## –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ

### –ù–æ–≤—ã–µ –ø–æ–ª—è:
- `requirements` - —è–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
- `keywords` - –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
- `needs_custom_params()` - –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏

### –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
- –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏ (rail_base, air_base, contract_base)
- –ü–æ—à–ª–∏–Ω—ã –∏ –ù–î–° (duty_rate, vat_rate)
- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –æ–ø–∏—Å–∞–Ω–∏—è
- –¢–ù –í–≠–î –∫–æ–¥—ã –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. ‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã
2. ‚úÖ "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–º–µ—á–µ–Ω–∞
3. ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–µ–±—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
4. üìù –û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω—É–ª–µ–≤—ã–º–∏ —Å—Ç–∞–≤–∫–∞–º–∏
"""
    
    report_file = 'MIGRATION_REPORT.md'
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(report)
    
    print(f"\nüìÑ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {report_file}")
    
    print("\n" + "="*60)
    print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û")
    print("="*60)
    print(f"\n–§–∞–π–ª—ã:")
    print(f"  - {output_file} (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)")
    print(f"  - {report_file} (–æ—Ç—á—ë—Ç)")
    print("\n–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:")
    print("  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å categories_migrated.json")
    print("  - –û–±–Ω–æ–≤–∏—Ç—å price_calculator.py –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π")
    print("="*60)
    
    return 0


if __name__ == '__main__':
    import sys
    sys.exit(main())



