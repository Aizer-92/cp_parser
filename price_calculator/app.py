#!/usr/bin/env python3
"""
Price Calculator Web Application
FastAPI + Vue.js –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤
"""

from fastapi import FastAPI, HTTPException, Request, Response, Depends
from fastapi.staticfiles import StaticFiles
from fastapi.responses import HTMLResponse, FileResponse, RedirectResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import Optional, List, Dict, Any
import json
from datetime import datetime
import os
import secrets
from contextlib import asynccontextmanager

import importlib
import sys

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è –µ—Å–ª–∏ –æ–Ω —É–∂–µ –±—ã–ª –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
if 'price_calculator' in sys.modules:
    importlib.reload(sys.modules['price_calculator'])
    
from price_calculator import PriceCalculator
from database import init_database, save_calculation_to_db, get_calculation_history, restore_from_backup

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
AUTH_USERNAME = "admin"
AUTH_PASSWORD = "admin123"
SESSION_SECRET = secrets.token_urlsafe(32)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Redis)
active_sessions = set()

def create_session_token() -> str:
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Å–µ—Å—Å–∏–∏"""
    token = secrets.token_urlsafe(32)
    active_sessions.add(token)
    return token

def verify_session(session_token: str = None) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–∏"""
    return session_token and session_token in active_sessions

def require_auth(request: Request):
    """Dependency –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    session_token = request.cookies.get("session_token")
    if not verify_session(session_token):
        raise HTTPException(status_code=401, detail="Authentication required")
    return True

@asynccontextmanager
async def lifespan(app: FastAPI):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ (–ù–ï –ö–†–ò–¢–ò–ß–ù–û –µ—Å–ª–∏ —É–ø–∞–¥–µ—Ç)
    try:
        init_database()
        restore_from_backup()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
    except Exception as e:
        print(f"‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
        print("üîß –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏")
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
    yield
    # Cleanup –∑–¥–µ—Å—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

app = FastAPI(
    title="Price Calculator",
    description="–°–µ—Ä–≤–∏—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤",
    version="1.0.0",
    lifespan=lifespan
)

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞  
calculator = None

def get_calculator():
    global calculator
    if calculator is None:
        calculator = PriceCalculator()
    return calculator

# Pydantic –º–æ–¥–µ–ª–∏
class CalculationRequest(BaseModel):
    product_name: str
    price_yuan: float
    weight_kg: float
    quantity: int
    product_url: Optional[str] = ""
    custom_rate: Optional[float] = None
    delivery_type: str = "rail"  # rail –∏–ª–∏ air
    markup: float = 1.7

class CalculationResponse(BaseModel):
    id: Optional[int] = None
    product_name: str
    category: str
    quantity: int
    unit_price_yuan: float
    total_price: Dict[str, float]
    logistics: Dict[str, Any]
    additional_costs: dict
    cost_price: Dict[str, Any]
    sale_price: Dict[str, Any] 
    markup: float
    profit: Dict[str, Any]
    weight_kg: float
    estimated_weight: float
    product_url: str
    created_at: Optional[str] = None

class CategoryInfo(BaseModel):
    category: str
    material: str
    density: float
    rates: Dict[str, float]

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ database.py

def save_calculation(calculation: dict) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
        db_data = {
            'product_name': calculation['product_name'],
            'category': calculation['category'],
            'price_yuan': calculation['unit_price_yuan'],
            'weight_kg': calculation['weight_kg'],
            'quantity': calculation['quantity'],
            'markup': calculation['markup'],
            'custom_rate': calculation['logistics'].get('rate_usd'),
            'product_url': calculation.get('product_url', ''),
            'cost_price_total_rub': calculation['cost_price']['total']['rub'],
            'cost_price_total_usd': calculation['cost_price']['total']['usd'],
            'sale_price_total_rub': calculation['sale_price']['total']['rub'],
            'sale_price_total_usd': calculation['sale_price']['total']['usd'],
            'profit_total_rub': calculation['profit']['total']['rub'],
            'profit_total_usd': calculation['profit']['total']['usd']
        }
        
        return save_calculation_to_db(db_data)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return None

def get_history_calculations() -> List[dict]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—á–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ database.py"""
    try:
        return get_calculation_history()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: {e}")
        return []

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
@app.get("/login", response_class=HTMLResponse)
async def login_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    return """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - Price Calculator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <style>
        body {
            font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
        }
        .input-field {
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 0.75rem;
            transition: all 0.2s ease;
        }
        .input-field:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        .btn-primary {
            background: #000;
            color: white;
            transition: all 0.2s ease;
        }
        .btn-primary:hover {
            background: #1f2937;
        }
        .card {
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            transition: all 0.2s ease;
        }
        .card:hover {
            border-color: #d1d5db;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        .loading-spinner {
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div id="app">
        <header class="bg-white border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-xl font-semibold text-gray-900">Price Calculator</h1>
                    </div>
                    <div class="text-sm text-gray-500">–ó–∞—â–∏—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω</div>
                </div>
            </div>
        </header>

        <main class="flex items-center justify-center min-h-screen -mt-16 px-4">
            <div class="card w-full max-w-md p-8">
                <div class="text-center mb-8">
                    <div class="mb-4">
                        <div class="text-4xl text-gray-900 mb-2">üßÆ</div>
                    </div>
                    <h2 class="text-2xl font-bold text-gray-900 mb-2">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
                    <p class="text-gray-500">–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</p>
                </div>

            <form @submit.prevent="handleLogin" class="space-y-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">–õ–æ–≥–∏–Ω</label>
                    <input 
                        v-model="credentials.username" 
                        type="text" 
                        required
                        class="input-field w-full" 
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω">
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">–ü–∞—Ä–æ–ª—å</label>
                    <input 
                        v-model="credentials.password" 
                        type="password" 
                        required
                        class="input-field w-full" 
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å">
                </div>

                <div v-if="errorMessage" class="p-3 bg-red-50 border border-red-200 rounded-lg">
                    <p class="text-red-700 text-sm">‚ö†Ô∏è {{ errorMessage }}</p>
                </div>

                <button 
                    type="submit" 
                    :disabled="isLoading"
                    :class="['btn-primary px-8 py-3 rounded-lg font-medium w-full', 
                            isLoading ? 'opacity-50 cursor-not-allowed' : '']">
                    <span v-if="isLoading" class="loading-spinner inline-block w-4 h-4 mr-2">‚è≥</span>
                    {{ isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏' }}
                </button>
            </form>

                <div class="mt-8 pt-6 border-t border-gray-200 text-center">
                    <p class="text-xs text-gray-400">
                        ¬© 2025 Price Calculator. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
                    </p>
                </div>
            </div>
        </main>
    </div>

    <script>
        const { createApp } = Vue;
        
        createApp({
            data() {
                return {
                    credentials: {
                        username: '',
                        password: ''
                    },
                    isLoading: false,
                    errorMessage: ''
                }
            },
            methods: {
                async handleLogin() {
                    if (!this.credentials.username || !this.credentials.password) {
                        this.errorMessage = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è';
                        return;
                    }

                    this.isLoading = true;
                    this.errorMessage = '';

                    try {
                        const response = await fetch('/api/login', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(this.credentials)
                        });

                        const data = await response.json();

                        if (data.success) {
                            window.location.href = '/';
                        } else {
                            this.errorMessage = data.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏';
                        }

                    } catch (error) {
                        console.error('Login error:', error);
                        this.errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
                    } finally {
                        this.isLoading = false;
                    }
                }
            },
            mounted() {
                this.$nextTick(() => {
                    const usernameInput = document.querySelector('input[type="text"]');
                    if (usernameInput) {
                        usernameInput.focus();
                    }
                });
            }
        }).mount('#app');
    </script>
</body>
</html>
    """

@app.post("/api/login")
async def login(request: Request, response: Response):
    """API endpoint –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    try:
        data = await request.json()
        username = data.get("username", "")
        password = data.get("password", "")
        
        if username == AUTH_USERNAME and password == AUTH_PASSWORD:
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω —Å–µ—Å—Å–∏–∏
            session_token = create_session_token()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie —Å —Ç–æ–∫–µ–Ω–æ–º
            response.set_cookie(
                key="session_token",
                value=session_token,
                max_age=86400 * 7,  # 7 –¥–Ω–µ–π
                httponly=True,
                secure=False,  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True –¥–ª—è HTTPS
                samesite="lax"
            )
            
            return {"success": True, "message": "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"}
        else:
            return {"success": False, "error": "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å"}
            
    except Exception as e:
        print(f"Login error: {e}")
        return {"success": False, "error": "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞"}

@app.post("/api/logout")
async def logout(request: Request, response: Response):
    """API endpoint –¥–ª—è –≤—ã—Ö–æ–¥–∞"""
    session_token = request.cookies.get("session_token")
    if session_token and session_token in active_sessions:
        active_sessions.remove(session_token)
    
    response.delete_cookie("session_token")
    return {"success": True, "message": "–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω"}

# API endpoints
@app.get("/")
async def root(request: Request):
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    session_token = request.cookies.get("session_token")
    if not verify_session(session_token):
        return RedirectResponse(url="/login", status_code=302)
    return FileResponse('index.html')

@app.post("/api/calculate", response_model=CalculationResponse)
async def calculate_price(request: CalculationRequest, auth: bool = Depends(require_auth)):
    """–†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞"""
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç
        calc = get_calculator()
        result = calc.calculate_cost(
            price_yuan=request.price_yuan,
            weight_kg=request.weight_kg,
            quantity=request.quantity,
            product_name=request.product_name,
            custom_rate=request.custom_rate,
            delivery_type=request.delivery_type,
            markup=request.markup
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º URL —Ç–æ–≤–∞—Ä–∞
        result['product_url'] = request.product_url or ""
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ù–ï –ö–†–ò–¢–ò–ß–ù–û –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è)
        try:
            calculation_id = save_calculation(result)
            result['id'] = calculation_id
            result['created_at'] = datetime.now().isoformat()
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î: {e}")
            result['id'] = None
            result['created_at'] = datetime.now().isoformat()
        
        return CalculationResponse(**result)
        
    except Exception as e:
        raise HTTPException(status_code=400, detail=f"–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: {str(e)}")

@app.get("/api/categories", response_model=List[CategoryInfo])
async def get_categories(auth: bool = Depends(require_auth)):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
    try:
        calc = get_calculator()
        categories = []
        for cat in calc.categories:
            categories.append(CategoryInfo(**cat))
        return categories
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {str(e)}")

@app.get("/api/category/{product_name}")
async def get_category_by_name(product_name: str, auth: bool = Depends(require_auth)):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    try:
        calc = get_calculator()
        category = calc.find_category_by_name(product_name)
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print(f"DEBUG: product_name='{product_name}', result_category='{category['category']}'")
        
        return CategoryInfo(**category)
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {str(e)}")

@app.get("/api/history")
async def get_history(auth: bool = Depends(require_auth)):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—á–µ—Ç–æ–≤"""
    try:
        history = get_history_calculations()
        return {"history": history}
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
        return {"history": [], "error": "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"}

@app.get("/api/calculation/{calculation_id}")
async def get_calculation(calculation_id: int, auth: bool = Depends(require_auth)):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π database –º–æ–¥—É–ª—å
        history = get_history_calculations()
        
        # –ò—â–µ–º —Ä–∞—Å—á–µ—Ç –ø–æ ID
        for calc in history:
            if calc.get('id') == calculation_id:
                return calc
        
        raise HTTPException(status_code=404, detail="–†–∞—Å—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    except HTTPException:
        raise  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º 404 –¥–∞–ª—å—à–µ
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–∞: {e}")
        raise HTTPException(status_code=503, detail="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ lifespan

if __name__ == "__main__":
    import uvicorn
    import os
    
    port = int(os.environ.get("PORT", 8000))
    print(f"üîß –ó–∞–ø—É—Å–∫ Price Calculator –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
    
    uvicorn.run("app:app", host="0.0.0.0", port=port, reload=False)
