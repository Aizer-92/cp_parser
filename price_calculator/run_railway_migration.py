#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –Ω–∞ Railway PostgreSQL

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python3 run_railway_migration.py migrations/001_add_custom_logistics_and_forced_category.py
"""

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Railway (–≤—Ä–µ–º–µ–Ω–Ω–æ)
# –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ .env —Ñ–∞–π–ª–µ!
if not os.getenv('RAILWAY_DB_PASSWORD'):
    print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ credentials")
    print("‚ö†Ô∏è –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env")
    os.environ['DATABASE_PUBLIC_URL'] = 'postgresql://postgres:JETlvQuqWYZXRtltmiCIqXPibyPONZAS@gondola.proxy.rlwy.net:13805/railway'

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
if len(sys.argv) < 2:
    print("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –º–∏–≥—Ä–∞—Ü–∏–∏")
    print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 {sys.argv[0]} migrations/001_...py")
    sys.exit(1)

migration_file = sys.argv[1]

if not os.path.exists(migration_file):
    print(f"‚ùå –§–∞–π–ª {migration_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    sys.exit(1)

print(f"üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: {migration_file}")
print("üéØ –¶–µ–ª—å: Railway PostgreSQL")
print("-" * 60)

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∫–∞–∫ –º–æ–¥—É–ª—å
import importlib.util
spec = importlib.util.spec_from_file_location("migration", migration_file)
migration = importlib.util.module_from_spec(spec)
spec.loader.exec_module(migration)

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –º–∏–≥—Ä–∞—Ü–∏–∏
if hasattr(migration, 'run_migration'):
    success = migration.run_migration()
    sys.exit(0 if success else 1)
else:
    print("‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é run_migration()")
    sys.exit(1)




