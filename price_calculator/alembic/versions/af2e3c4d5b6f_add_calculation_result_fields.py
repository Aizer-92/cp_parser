"""add_calculation_result_fields

Revision ID: af2e3c4d5b6f
Revises: 98c029361ee0
Create Date: 2025-10-14 15:00:00.000000

Adds new fields to v3_calculations table:
- markup: Float (наценка)
- forced_category: String(100) (принудительная категория)
- custom_logistics: JSON (кастомные параметры логистики)
- category: String(100) (определенная категория)
- routes: JSON (результаты расчета маршрутов)
- customs_calculation: JSON (таможенные расчеты)
- comment: Text (комментарий пользователя)

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'af2e3c4d5b6f'
down_revision = '98c029361ee0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add markup column
    op.add_column('v3_calculations', sa.Column(
        'markup', 
        sa.Float(), 
        nullable=True, 
        comment='Наценка (множитель, например 1.4 = 40% прибыли)'
    ))
    
    # Add forced_category column
    op.add_column('v3_calculations', sa.Column(
        'forced_category', 
        sa.String(length=100), 
        nullable=True, 
        comment='Категория, выбранная пользователем вручную (переопределяет автоопределение)'
    ))
    
    # Add custom_logistics column (JSON)
    op.add_column('v3_calculations', sa.Column(
        'custom_logistics', 
        postgresql.JSON(astext_type=sa.Text()), 
        nullable=True, 
        comment='Кастомные параметры логистики для каждого маршрута (для пересчета)'
    ))
    
    # Add category column
    op.add_column('v3_calculations', sa.Column(
        'category', 
        sa.String(length=100), 
        nullable=True, 
        comment='Категория товара (автоопределенная или forced_category)'
    ))
    op.create_index(op.f('ix_v3_calculations_category'), 'v3_calculations', ['category'], unique=False)
    
    # Add routes column (JSON)
    op.add_column('v3_calculations', sa.Column(
        'routes', 
        postgresql.JSON(astext_type=sa.Text()), 
        nullable=True, 
        comment='Результаты расчета для всех маршрутов логистики'
    ))
    
    # Add customs_calculation column (JSON)
    op.add_column('v3_calculations', sa.Column(
        'customs_calculation', 
        postgresql.JSON(astext_type=sa.Text()), 
        nullable=True, 
        comment='Детали таможенных расчетов (пошлины, НДС)'
    ))
    
    # Add comment column
    op.add_column('v3_calculations', sa.Column(
        'comment', 
        sa.Text(), 
        nullable=True, 
        comment='Комментарий пользователя к этому расчету'
    ))
    
    # Add index to created_at for better performance
    op.create_index(op.f('ix_v3_calculations_created_at'), 'v3_calculations', ['created_at'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_v3_calculations_created_at'), table_name='v3_calculations')
    op.drop_column('v3_calculations', 'comment')
    op.drop_column('v3_calculations', 'customs_calculation')
    op.drop_column('v3_calculations', 'routes')
    op.drop_index(op.f('ix_v3_calculations_category'), table_name='v3_calculations')
    op.drop_column('v3_calculations', 'category')
    op.drop_column('v3_calculations', 'custom_logistics')
    op.drop_column('v3_calculations', 'forced_category')
    op.drop_column('v3_calculations', 'markup')
    # ### end Alembic commands ###

