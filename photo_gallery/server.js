const express = require('express');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// ะััั ะบ ะฟะฐะฟะบะต ั ัะพัะพะณัะฐัะธัะผะธ (ะธะทะผะตะฝะธัะต ะฝะฐ ะฒะฐั ะฟััั)
const PHOTOS_DIR = '/path/to/your/photos/';

// ะะพะดะดะตัะถะธะฒะฐะตะผัะต ัะพัะผะฐัั ะธะทะพะฑัะฐะถะตะฝะธะน
const ALLOWED_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg'];

// Middleware ะดะปั ััะฐัะธัะตัะบะธั ัะฐะนะปะพะฒ
app.use(express.static('.'));

// API ะดะปั ะฟะพะปััะตะฝะธั ัะฟะธัะบะฐ ัะพัะพะณัะฐัะธะน
app.get('/api/photos', (req, res) => {
    try {
        // ะัะพะฒะตััะตะผ ัััะตััะฒะพะฒะฐะฝะธะต ะดะธัะตะบัะพัะธะธ
        if (!fs.existsSync(PHOTOS_DIR)) {
            return res.status(500).json({
                success: false,
                error: 'ะะธัะตะบัะพัะธั ั ัะพัะพะณัะฐัะธัะผะธ ะฝะต ะฝะฐะนะดะตะฝะฐ'
            });
        }

        const files = fs.readdirSync(PHOTOS_DIR);
        const photos = [];

        files.forEach(file => {
            // ะัะพะฟััะบะฐะตะผ ัะบััััะต ัะฐะนะปั ะธ ะดะธัะตะบัะพัะธะธ
            if (file.startsWith('.') || fs.statSync(path.join(PHOTOS_DIR, file)).isDirectory()) {
                return;
            }

            // ะัะพะฒะตััะตะผ ัะฐััะธัะตะฝะธะต ัะฐะนะปะฐ
            const extension = path.extname(file).toLowerCase();
            if (ALLOWED_EXTENSIONS.includes(extension)) {
                const filePath = path.join(PHOTOS_DIR, file);
                const stats = fs.statSync(filePath);
                
                photos.push({
                    name: file,
                    url: `/photos/${file}`,
                    size: stats.size,
                    extension: extension,
                    modified: stats.mtime.getTime()
                });
            }
        });

        // ะกะพััะธััะตะผ ะฟะพ ะดะฐัะต ะธะทะผะตะฝะตะฝะธั (ะฝะพะฒัะต ัะฝะฐัะฐะปะฐ)
        photos.sort((a, b) => b.modified - a.modified);

        res.json({
            success: true,
            photos: photos,
            count: photos.length
        });

    } catch (error) {
        console.error('ะัะธะฑะบะฐ ะฟัะธ ะฟะพะปััะตะฝะธะธ ัะฟะธัะบะฐ ัะพัะพะณัะฐัะธะน:', error);
        res.status(500).json({
            success: false,
            error: error.message
        });
    }
});

// ะะฐััััั ะดะปั ะพะฑัะปัะถะธะฒะฐะฝะธั ัะพัะพะณัะฐัะธะน
app.use('/photos', express.static(PHOTOS_DIR));

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, () => {
    console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ธ ะะฐะปะตัะตั ะดะพัััะฟะฝะฐ ะฟะพ ะฐะดัะตัั: http://localhost:${PORT}`);
    console.log(`๐ ะะฐะฟะบะฐ ั ัะพัะพะณัะฐัะธัะผะธ: ${PHOTOS_DIR}`);
});
