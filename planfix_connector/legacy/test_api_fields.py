#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–ª–µ–π Planfix
"""

import json
import requests

def test_api_fields():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–µ–π –≤ API"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        with open('planfix_config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return
    
    headers = {
        'Authorization': f'Bearer {config["rest_api"]["auth_token"]}',
        'Content-Type': 'application/json'
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏
    try:
        url = f"{config['rest_api']['base_url']}/task/96041"
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º URL: {url}")
        
        response = requests.get(url, headers=headers)
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API")
            
            if 'task' in data:
                task = data['task']
                print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è –∑–∞–¥–∞—á–∏:")
                for key, value in task.items():
                    print(f"  {key}: {type(value).__name__}")
                    if isinstance(value, (dict, list)) and len(str(value)) < 200:
                        print(f"    –ó–Ω–∞—á–µ–Ω–∏–µ: {value}")
                    elif isinstance(value, str) and len(value) < 100:
                        print(f"    –ó–Ω–∞—á–µ–Ω–∏–µ: {value}")
                    else:
                        print(f"    –ó–Ω–∞—á–µ–Ω–∏–µ: {str(value)[:50]}...")
            else:
                print("‚ùå –ü–æ–ª–µ 'task' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç–µ")
                print("üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                print(json.dumps(data, indent=2, ensure_ascii=False))
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    test_api_fields()
