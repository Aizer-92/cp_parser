import requests
import json

def check_api_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ API –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open('planfix_config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        headers = {
            'Authorization': f'Bearer {config["rest_api"]["auth_token"]}',
            'Content-Type': 'application/json'
        }
        
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º customFields:")
        
        request_data = {
            'offset': 0,
            'pageSize': 2,
            'filters': [
                {
                    "type": 10,
                    "operator": "equal",
                    "value": [127]  # –ö–ü –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ
                }
            ],
            'fields': 'id,name,status,customFields'  # –Ø–≤–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º customFields
        }
        
        response = requests.post(
            f"{config['rest_api']['base_url']}/task/list",
            headers=headers,
            json=request_data,
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            tasks = data.get('tasks', [])
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {len(tasks)}")
            
            for i, task in enumerate(tasks):
                print(f"\n  –ó–∞–¥–∞—á–∞ {i+1} (ID: {task.get('id')}):")
                print(f"    –ù–∞–∑–≤–∞–Ω–∏–µ: {task.get('name', '–ù/–î')[:50]}...")
                print(f"    –°—Ç–∞—Ç—É—Å: {task.get('status', {}).get('name', '–ù/–î')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è –∑–∞–¥–∞—á–∏
                print(f"    üìã –í—Å–µ –ø–æ–ª—è –∑–∞–¥–∞—á–∏:")
                for key, value in task.items():
                    if value is not None:
                        print(f"      {key}: {type(value).__name__} = {value}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º customFields
                if 'customFields' in task:
                    if task['customFields']:
                        print(f"    ‚úÖ customFields: {len(task['customFields'])} –ø–æ–ª–µ–π")
                        for j, field in enumerate(task['customFields']):
                            print(f"      [{j}] {field}")
                    else:
                        print(f"    ‚ö†Ô∏è customFields: –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤")
                else:
                    print(f"    ‚ùå customFields: –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                    
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_api_structure()
