#!/usr/bin/env python3
"""
–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–æ–ª—å—à–∏—Ö Google Sheets —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ Sheets API
"""

import os
import sys
import json
import pandas as pd
from pathlib import Path
from urllib.parse import urlparse, parse_qs
import time

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

from config import GOOGLE_SCOPES
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build

def get_sheets_service():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ Google Sheets API"""
    try:
        credentials_path = project_root / 'credentials' / 'service_account.json'
        credentials = Credentials.from_service_account_file(
            str(credentials_path),
            scopes=GOOGLE_SCOPES
        )
        service = build('sheets', 'v4', credentials=credentials)
        return service
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Google Sheets —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return None

def extract_sheet_id(url):
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ URL"""
    try:
        parsed_url = urlparse(url)
        path_parts = parsed_url.path.split('/')
        if 'd' in path_parts:
            sheet_id_index = path_parts.index('d') + 1
            if sheet_id_index < len(path_parts):
                return path_parts[sheet_id_index]
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID: {e}")
        return None

def download_large_sheet(sheet_url, sheet_title=None):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ Sheets API"""
    
    print(f"üîÑ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π —Ç–∞–±–ª–∏—Ü—ã: {sheet_url}")
    
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
        sheet_id = extract_sheet_id(sheet_url)
        if not sheet_id:
            return None
        
        print(f"üìã ID —Ç–∞–±–ª–∏—Ü—ã: {sheet_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å Google Sheets
        sheets_service = get_sheets_service()
        if not sheets_service:
            return None
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
        sheet_metadata = sheets_service.spreadsheets().get(spreadsheetId=sheet_id).execute()
        sheet_properties = sheet_metadata.get('sheets', [])
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheet_properties)}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è Excel —Ñ–∞–π–ª–æ–≤
        excel_dir = project_root / 'storage' / 'excel_files'
        excel_dir.mkdir(parents=True, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        if not sheet_title:
            sheet_title = f"large_sheet_{sheet_id[:8]}"
        
        timestamp = int(time.time())
        filename = f"{sheet_title}_{timestamp}.xlsx"
        excel_path = excel_dir / filename
        
        # –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏
        with pd.ExcelWriter(excel_path, engine='openpyxl') as writer:
            
            for sheet_prop in sheet_properties:
                sheet_name = sheet_prop.get('properties', {}).get('title', 'Sheet1')
                print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–∏—Å—Ç: {sheet_name}")
                
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞
                range_name = f"{sheet_name}!A:ZZ"  # –ß–∏—Ç–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                result = sheets_service.spreadsheets().values().get(
                    spreadsheetId=sheet_id,
                    range=range_name
                ).execute()
                
                values = result.get('values', [])
                
                if values:
                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
                    df = pd.DataFrame(values)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
                    df.to_excel(writer, sheet_name=sheet_name, index=False, header=False)
                    print(f"  ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(values)} —Å—Ç—Ä–æ–∫")
                else:
                    print(f"  ‚ö†Ô∏è –õ–∏—Å—Ç –ø—É—Å—Ç–æ–π")
        
        print(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {excel_path}")
        return str(excel_path)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return None

def main():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–æ–ª—å—à–æ–π —Ç–∞–±–ª–∏—Ü—ã"""
    
    # URL –±–æ–ª—å—à–æ–π —Ç–∞–±–ª–∏—Ü—ã
    large_sheet_url = "https://docs.google.com/spreadsheets/d/1iB1J0TJevoHzrduqeySqO6gI_xLdhSDV9jxOdKICDY8/edit?gid=1464438736#gid=1464438736"
    
    print("üöÄ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ Sheets API")
    print("=" * 50)
    
    result = download_large_sheet(large_sheet_url, "–ú–µ—Ä—á –¥–ª—è Sense")
    
    if result:
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {result}")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")

if __name__ == "__main__":
    main()
