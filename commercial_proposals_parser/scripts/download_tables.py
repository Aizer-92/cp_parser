#!/usr/bin/env python3
"""
–°–∫–∞—á–∏–≤–∞–Ω–∏–µ Google Sheets —Ç–∞–±–ª–∏—Ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel
"""

import os
import sys
import json
from pathlib import Path
from urllib.parse import urlparse, parse_qs
import time

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

from config import GOOGLE_SCOPES
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.http import MediaIoBaseDownload
import io

def get_drive_service():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ Google Drive API"""
    try:
        credentials_path = project_root / 'credentials' / 'service_account.json'
        credentials = Credentials.from_service_account_file(
            str(credentials_path),
            scopes=GOOGLE_SCOPES
        )
        service = build('drive', 'v3', credentials=credentials)
        return service
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Google Drive —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return None

def extract_sheet_id(url):
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ URL"""
    try:
        # –ü–∞—Ä—Å–∏–º URL
        parsed_url = urlparse(url)
        
        # –ò—â–µ–º ID –≤ –ø—É—Ç–∏
        path_parts = parsed_url.path.split('/')
        if 'd' in path_parts:
            sheet_id_index = path_parts.index('d') + 1
            if sheet_id_index < len(path_parts):
                sheet_id = path_parts[sheet_id_index]
                return sheet_id
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø–æ–∏—Å–∫ –≤ query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
        query_params = parse_qs(parsed_url.query)
        if 'id' in query_params:
            return query_params['id'][0]
        
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∏–∑ URL: {url}")
        return None
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID: {e}")
        return None

def download_sheet_as_excel(sheet_url, sheet_title=None):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ Google Sheets —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel"""
    
    print(f"üîÑ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {sheet_url}")
    
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
        sheet_id = extract_sheet_id(sheet_url)
        if not sheet_id:
            return None
        
        print(f"üìã ID —Ç–∞–±–ª–∏—Ü—ã: {sheet_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å Google Drive
        drive_service = get_drive_service()
        if not drive_service:
            return None
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel
        request = drive_service.files().export_media(
            fileId=sheet_id,
            mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        )
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è Excel —Ñ–∞–π–ª–æ–≤
        excel_dir = project_root / 'storage' / 'excel_files'
        excel_dir.mkdir(parents=True, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        if not sheet_title:
            sheet_title = f"sheet_{sheet_id[:8]}"
        
        timestamp = int(time.time())
        filename = f"{sheet_title}_{timestamp}.xlsx"
        excel_path = excel_dir / filename
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        with open(excel_path, 'wb') as f:
            downloader = MediaIoBaseDownload(f, request)
            done = False
            while done is False:
                status, done = downloader.next_chunk()
                if status:
                    print(f"üì• –ü—Ä–æ–≥—Ä–µ—Å—Å: {int(status.progress() * 100)}%")
        
        print(f"‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω: {excel_path}")
        return str(excel_path)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
        return None

def load_sheets_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü"""
    config_path = project_root / 'sheets_config.json'
    
    if not config_path.exists():
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_config = {
            "sheets": [
                {
                    "title": "–ú–µ—Ä—á –¥–ª—è Sense",
                    "description": "–¢–∞–±–ª–∏—Ü–∞ —Å –º–µ—Ä—á–µ–º –¥–ª—è Sense (—Ö—É–¥–∏, —à–∞–ø–∫–∏, —à–æ–ø–ø–µ—Ä—ã, –±—Ä–µ–ª–æ–∫–∏)",
                    "url": "https://docs.google.com/spreadsheets/d/1iB1J0TJevoHzrduqeySqO6gI_xLdhSDV9jxOdKICDY8/edit?gid=1464438736#gid=1464438736",
                    "downloaded": False,
                    "excel_path": None,
                    "last_download": None
                },
                {
                    "title": "–í—Ç–æ—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞",
                    "description": "–í—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞",
                    "url": "https://docs.google.com/spreadsheets/d/13DOK6_4ox-pmqurespTyWkAuHezBnHsbqFxAfIFnXd4/edit?gid=1628889079#gid=1628889079",
                    "downloaded": False,
                    "excel_path": None,
                    "last_download": None
                }
            ]
        }
        
        with open(config_path, 'w', encoding='utf-8') as f:
            json.dump(default_config, f, ensure_ascii=False, indent=2)
        
        print(f"üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_path}")
        return default_config
    
    with open(config_path, 'r', encoding='utf-8') as f:
        return json.load(f)

def save_sheets_config(config):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü"""
    config_path = project_root / 'sheets_config.json'
    
    with open(config_path, 'w', encoding='utf-8') as f:
        json.dump(config, f, ensure_ascii=False, indent=2)

def download_all_sheets():
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    print("üöÄ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Google Sheets —Ç–∞–±–ª–∏—Ü")
    print("=" * 50)
    
    config = load_sheets_config()
    
    downloaded_count = 0
    skipped_count = 0
    error_count = 0
    
    for i, sheet in enumerate(config['sheets'], 1):
        print(f"\nüìä –¢–∞–±–ª–∏—Ü–∞ {i}/{len(config['sheets'])}: {sheet['title']}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {sheet['description']}")
        print(f"üîó URL: {sheet['url']}")
        print("-" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Å–∫–∞—á–∏–≤–∞—Ç—å
        if sheet.get('downloaded', False) and sheet.get('excel_path') and Path(sheet['excel_path']).exists():
            print(f"‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å–∫–∞—á–∞–Ω–∞: {sheet['excel_path']}")
            skipped_count += 1
            continue
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        excel_path = download_sheet_as_excel(sheet['url'], sheet['title'])
        
        if excel_path:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            sheet['downloaded'] = True
            sheet['excel_path'] = excel_path
            sheet['last_download'] = time.strftime('%Y-%m-%d %H:%M:%S')
            
            downloaded_count += 1
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {i} —Å–∫–∞—á–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        else:
            error_count += 1
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {i}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    save_sheets_config(config)
    
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"  - –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {len(config['sheets'])}")
    print(f"  - –°–∫–∞—á–∞–Ω–æ: {downloaded_count}")
    print(f"  - –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}")
    print(f"  - –û—à–∏–±–æ–∫: {error_count}")
    
    if downloaded_count > 0 or skipped_count > 0:
        print(f"\n‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∞–Ω–∞–ª–∏–∑—É.")
    else:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –Ω–∏ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã")

if __name__ == "__main__":
    download_all_sheets()
