#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ —Ç–æ–≤–∞—Ä–∞–º
"""

import os
import sys
import zipfile
import xml.etree.ElementTree as ET
from openpyxl import load_workbook
import shutil
from PIL import Image
import io

sys.path.append('.')
from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL_V4
from sqlalchemy import text

def fix_image_mapping_final():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ —Ç–æ–≤–∞—Ä–∞–º"""
    
    db = CommercialProposalsDB(DATABASE_URL_V4)
    
    # 1. –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ "–ú–µ—Ä—á –¥–ª—è Sense"
    print("üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ '–ú–µ—Ä—á –¥–ª—è Sense'...")
    session = db.get_session()
    try:
        session.execute(text('DELETE FROM product_images WHERE product_id >= 29'))
        session.commit()
        print("‚úÖ –û—á–∏—â–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ '–ú–µ—Ä—á –¥–ª—è Sense'")
    finally:
        session.close()
    
    # 2. –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    images_output_dir = "storage/images/products_parsed"
    if os.path.exists(images_output_dir):
        # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ "–ú–µ—Ä—á –¥–ª—è Sense"
        for file in os.listdir(images_output_dir):
            if file.startswith('product_') and any(name in file for name in ['–•—É–¥–∏', '–®–ê–ü–ö–ê', '–®–û–ü–ü–ï–†', '–ë—Ä–µ–ª–æ–∫–∏', '–î–£–¢–´–ô', '–ó–æ–Ω—Ç', '–ü–∏—Å—å–º–µ–Ω–Ω—ã–π', '–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞', '–°—É–º–∫–∞', '–®–æ–ø–ø–µ—Ä']):
                os.remove(os.path.join(images_output_dir, file))
        print(f"‚úÖ –û—á–∏—â–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ '–ú–µ—Ä—á –¥–ª—è Sense' –∏–∑ –ø–∞–ø–∫–∏")
    
    # 3. –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ —Ç–æ–≤–∞—Ä–∞–º
    print(f"\nüîó –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø—Ä–∏–≤—è–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –ú–∞–ø–ø–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ –∫ –∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º (–Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞)
    product_image_mapping = {
        '–•—É–¥–∏': {
            'main': ['image_01_image24.jpg'],
            'additional': []
        },
        '–®–ê–ü–ö–ê-–ë–ò–ù–ò': {
            'main': ['image_02_image9.png'],
            'additional': ['image_03_image37.jpg', 'image_04_image29.png', 'image_05_image16.png', 'image_06_image12.png']
        },
        '–®–û–ü–ü–ï–†': {
            'main': ['image_07_image25.png'],
            'additional': ['image_08_image32.png', 'image_09_image34.png', 'image_10_image4.png', 'image_11_image41.jpg']
        },
        '–î–£–¢–´–ô –ß–ï–•–û–õ –î–õ–Ø –ù–û–£–¢–ë–£–ö–ê': {
            'main': ['image_12_image15.png'],
            'additional': ['image_13_image20.jpg']
        },
        '–ó–æ–Ω—Ç': {
            'main': ['image_14_image28.png'],
            'additional': ['image_15_image38.jpg', 'image_16_image33.jpg', 'image_17_image11.png']
        },
        '–ü–∏—Å—å–º–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä': {
            'main': ['image_18_image8.jpg'],
            'additional': ['image_19_image3.png', 'image_20_image42.jpg', 'image_21_image27.png', 'image_22_image2.png']
        },
        '–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞': {
            'main': ['image_23_image18.jpg'],
            'additional': ['image_24_image7.png', 'image_25_image22.jpg', 'image_26_image21.jpg', 'image_27_image35.jpg']
        },
        '–°—É–º–∫–∞': {
            'main': ['image_28_image30.png'],
            'additional': []
        },
        '–®–æ–ø–ø–µ—Ä': {
            'main': ['image_29_image26.jpg', 'image_30_image19.jpg'],
            'additional': ['image_31_image6.png', 'image_32_image23.png', 'image_33_image36.png', 'image_34_image39.png', 'image_35_image10.png']
        },
        '—Å—É–º–∫–∞  –¥—É—Ç–∞—è': {
            'main': ['image_36_image17.png'],
            'additional': []
        },
        '–ö–æ—Å–º–µ—Ç–∏—á–∫–∞': {
            'main': ['image_37_image5.png'],
            'additional': []
        },
        '–ë—Ä–µ–ª–æ–∫–∏': {
            'main': ['image_38_image40.jpg', 'image_39_image13.png'],
            'additional': ['image_40_image31.png', 'image_41_image1.png']
        },
        '–§—É—Ç–±–æ–ª–∫–∞': {
            'main': ['image_42_image14.jpg'],
            'additional': []
        }
    }
    
    # 4. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –ë–î
    products_with_details = db.get_all_products_with_details(limit=50)
    merch_sense_products = [(p, po, im) for p, po, im in products_with_details if p.id >= 29]
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤
    product_name_map = {}
    for product, price_offers, images in merch_sense_products:
        product_name_map[product.name.strip().lower()] = product
    
    print(f"üì¶ –¢–æ–≤–∞—Ä—ã '–ú–µ—Ä—á –¥–ª—è Sense' –≤ –ë–î:")
    for product, price_offers, images in merch_sense_products:
        print(f"  {product.id}. {product.name}")
    
    # 5. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º
    mapped_count = 0
    
    for product_name, images_info in product_image_mapping.items():
        product_name_lower = product_name.strip().lower()
        
        if product_name_lower in product_name_map:
            product = product_name_map[product_name_lower]
            
            print(f"\nüì¶ {product.name} (ID: {product.id}):")
            
            # –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            for i, image_name in enumerate(images_info['main']):
                original_path = os.path.join(images_output_dir, image_name)
                if os.path.exists(original_path):
                    new_image_name = f"product_{product.id}_main_{i+1}.jpg"
                    new_image_path = os.path.join(images_output_dir, new_image_name)
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    shutil.copy2(original_path, new_image_path)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                    db.create_product_image(
                        product_id=product.id,
                        image_path=f"storage/images/products_parsed/{new_image_name}",
                        image_type='main'
                    )
                    
                    print(f"  ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ {i+1}: {new_image_name}")
                    mapped_count += 1
                else:
                    print(f"  ‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {original_path}")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            for i, image_name in enumerate(images_info['additional']):
                original_path = os.path.join(images_output_dir, image_name)
                if os.path.exists(original_path):
                    new_image_name = f"product_{product.id}_additional_{i+1}.jpg"
                    new_image_path = os.path.join(images_output_dir, new_image_name)
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    shutil.copy2(original_path, new_image_path)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                    db.create_product_image(
                        product_id=product.id,
                        image_path=f"storage/images/products_parsed/{new_image_name}",
                        image_type='additional'
                    )
                    
                    print(f"  ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ {i+1}: {new_image_name}")
                    mapped_count += 1
                else:
                    print(f"  ‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {original_path}")
        else:
            print(f"  ‚ö†Ô∏è –¢–æ–≤–∞—Ä '{product_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
    
    print(f"\n‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–∏–≤—è–∑–∞–Ω–æ {mapped_count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
    for product, price_offers, images in merch_sense_products:
        main_images = [img for img in images if img.image_type == 'main']
        additional_images = [img for img in images if img.image_type == 'additional']
        print(f"  {product.name} (ID: {product.id}) - {len(main_images)} –æ—Å–Ω–æ–≤–Ω—ã—Ö, {len(additional_images)} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö")

if __name__ == "__main__":
    fix_image_mapping_final()