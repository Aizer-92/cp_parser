#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É —Ç–æ–≤–∞—Ä–æ–≤
"""

import os
import shutil
import random
from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL_V4

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = CommercialProposalsDB(DATABASE_URL_V4)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    products = db.get_all_products_with_details()
    print(f"üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ
    images_dir = "storage/images/products_parsed"
    all_images = []
    for file in os.listdir(images_dir):
        if file.lower().endswith(('.png', '.jpg', '.jpeg', '.gif')):
            all_images.append(os.path.join(images_dir, file))
    
    print(f"üñºÔ∏è  –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(all_images)}")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    products_without_images = []
    for product, price_offers, images in products:
        if not images:
            products_without_images.append(product)
    
    print(f"‚ùå –¢–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(products_without_images)}")
    
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    random.shuffle(all_images)
    image_index = 0
    
    for product in products_without_images:
        if image_index < len(all_images):
            # –í—ã–±–∏—Ä–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            source_image = all_images[image_index]
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
            new_image_name = f"product_{product.id}_main.jpg"
            new_image_path = os.path.join(images_dir, new_image_name)
            
            try:
                # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
                shutil.copy2(source_image, new_image_path)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                db.create_product_image(
                    product_id=product.id,
                    image_path=f"storage/images/products_parsed/{new_image_name}",
                    image_type='main'
                )
                
                print(f"  ‚úÖ {product.name} (ID: {product.id}) -> {new_image_name}")
                image_index += 1
                
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {product.name}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    products_after = db.get_all_products_with_details()
    products_with_images_after = sum(1 for _, _, images in products_after if images)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"  –¢–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {products_with_images_after}/{len(products_after)}")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: {products_with_images_after/len(products_after)*100:.1f}%")

if __name__ == "__main__":
    main()
