#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–µ–π, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–µ—Ä—á –¥–ª—è Sense
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import json
from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL

def clear_database():
    """–û—á–∏—â–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, PriceOffer, ProductImage, SheetMetadata
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        session.query(ProductImage).delete()
        session.query(PriceOffer).delete()
        session.query(Product).delete()
        session.query(SheetMetadata).delete()
        session.commit()
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")

def load_corrected_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    print("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ú–µ—Ä—á –¥–ª—è Sense
    with open('parsed_products.json', 'r', encoding='utf-8') as f:
        all_products = json.load(f)
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    original_products = [p for p in all_products if p['source_file'] == 'original_sheet.xlsx']
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –ú–µ—Ä—á –¥–ª—è Sense
    with open('merch_sense_products.json', 'r', encoding='utf-8') as f:
        merch_products = json.load(f)
    
    # –î–æ–±–∞–≤–ª—è–µ–º source_file –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–µ—Ä—á –¥–ª—è Sense
    for product in merch_products:
        product['source_file'] = '–ú–µ—Ä—á –¥–ª—è Sense_1757934153.xlsx'
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    all_products = original_products + merch_products
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –æ —Ç–∞–±–ª–∏—Ü–∞—Ö
    sheet_metadata = {}
    
    for product_data in all_products:
        source_file = product_data['source_file']
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if source_file not in sheet_metadata:
            sheet_meta = db.create_sheet_metadata(
                sheet_url=f"https://docs.google.com/spreadsheets/d/{source_file}",
                sheet_title=source_file.replace('.xlsx', '')
            )
            sheet_metadata[source_file] = sheet_meta
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä
        product = db.create_product(
            name=product_data['name'],
            description=product_data['characteristics'],
            custom_design=product_data['custom_design'],
            sheet_id=sheet_metadata[source_file]
        )
        
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {product.name} (ID: {product.id})")
        
        # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        for price_offer_data in product_data['price_offers']:
            db.create_price_offer(
                product_id=product.id,
                route_name=price_offer_data['route_name'],
                quantity=price_offer_data['quantity'],
                price_usd=price_offer_data['price_usd'],
                price_rub=price_offer_data['price_rub'],
                delivery_time=price_offer_data['delivery_time'],
                is_sample=price_offer_data['is_sample'],
                sample_price=price_offer_data.get('sample_price'),
                sample_time=price_offer_data.get('delivery_time') if price_offer_data['is_sample'] else None,
                sample_price_currency='RUB' if price_offer_data['is_sample'] else None
            )
        
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(all_products)}")

def add_images():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º"""
    print("üñºÔ∏è  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    with db.get_session() as session:
        from database.models_v4 import Product
        
        products = session.query(Product).all()
        
        for product in products:
            # –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–∞
            image_files = []
            
            # –î–ª—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
            if product.sheet_id == 1:  # original_sheet
                # –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ storage/images/products_original_sheet
                image_dir = "storage/images/products_original_sheet"
                if os.path.exists(image_dir):
                    for filename in os.listdir(image_dir):
                        if filename.endswith('.jpg'):
                            image_files.append(os.path.join(image_dir, filename))
            
            # –î–ª—è –ú–µ—Ä—á –¥–ª—è Sense (–ø–æ–∫–∞ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
            elif product.sheet_id == 2:  # –ú–µ—Ä—á –¥–ª—è Sense
                # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                pass
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–∞–∑—É
            for i, image_path in enumerate(image_files[:2]):  # –ú–∞–∫—Å–∏–º—É–º 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_type = 'main' if i == 0 else 'additional'
                db.create_product_image(
                    product_id=product.id,
                    image_path=image_path,
                    image_type=image_type
                )
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è {product.name}: {os.path.basename(image_path)}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    clear_database()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    load_corrected_data()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    add_images()
    
    print("\n‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    main()
