#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Excel —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
import zipfile
import shutil
from PIL import Image
import io
sys.path.append('.')
from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL_V4

def extract_images_from_excel(excel_file, output_dir):
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Excel —Ñ–∞–π–ª–∞"""
    print(f"üìÅ –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ {excel_file}...")
    
    if not os.path.exists(excel_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {excel_file}")
        return []
    
    extracted_images = []
    
    try:
        with zipfile.ZipFile(excel_file, 'r') as z:
            # –ò—â–µ–º —Ñ–∞–π–ª—ã —Ä–∏—Å—É–Ω–∫–æ–≤
            for name in z.namelist():
                if name.startswith('xl/media/image'):
                    print(f"  üì∑ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {name}")
                    
                    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    image_data = z.read(name)
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                    if name.lower().endswith('.png'):
                        ext = '.png'
                    elif name.lower().endswith('.gif'):
                        ext = '.gif'
                    else:
                        ext = '.jpg'
                    
                    # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                    filename = os.path.basename(name)
                    if not filename.lower().endswith(ext):
                        filename = filename + ext
                    
                    output_path = os.path.join(output_dir, filename)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    with open(output_path, 'wb') as f:
                        f.write(image_data)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
                    try:
                        with Image.open(output_path) as img:
                            img.verify()
                        print(f"    ‚úÖ {filename} - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
                        extracted_images.append(output_path)
                    except Exception as e:
                        print(f"    ‚ùå {filename} - –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")
                        os.remove(output_path)
    
    except zipfile.BadZipFile:
        print(f"‚ùå –§–∞–π–ª {excel_file} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ZIP-–∞—Ä—Ö–∏–≤–æ–º")
        return []
    
    print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ {len(extracted_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    return extracted_images

def main():
    print("üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    images_dir = "storage/images/products_parsed"
    if os.path.exists(images_dir):
        shutil.rmtree(images_dir)
    os.makedirs(images_dir, exist_ok=True)
    print(f"‚úÖ –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞: {images_dir}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö Excel —Ñ–∞–π–ª–æ–≤
    excel_files = [
        "storage/excel_files/original_sheet.xlsx",
        "storage/excel_files/–í—Ç–æ—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞_1757933430.xlsx",
        "storage/excel_files/–í—Ç–æ—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞_1757933504.xlsx",
        "storage/excel_files/–ú–µ—Ä—á –¥–ª—è Sense_1757934153.xlsx"
    ]
    
    all_images = []
    for excel_file in excel_files:
        if os.path.exists(excel_file):
            images = extract_images_from_excel(excel_file, images_dir)
            all_images.extend(images)
    
    print(f"\nüìä –ò—Ç–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ {len(all_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º
    # –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É
    db = CommercialProposalsDB(DATABASE_URL_V4)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    products = db.get_all_products_with_details()
    
    print(f"\nüîó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º...")
    
    image_index = 0
    for product, price_offers, existing_images in products:
        if image_index < len(all_images):
            # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            main_image_path = all_images[image_index]
            new_main_name = f"product_{product.id}_main.jpg"
            new_main_path = os.path.join(images_dir, new_main_name)
            
            try:
                shutil.copy2(main_image_path, new_main_path)
                db.create_product_image(
                    product_id=product.id,
                    image_path=f"storage/images/products_parsed/{new_main_name}",
                    image_type='main'
                )
                print(f"  ‚úÖ {product.name} -> {new_main_name}")
                image_index += 1
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {product.name}: {e}")
    
    print(f"\n‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")

if __name__ == "__main__":
    main()
