#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö - –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è
"""

import json
import sys
sys.path.append('.')
from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL_V4
from sqlalchemy import text

def fix_descriptions():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤"""
    db = CommercialProposalsDB(DATABASE_URL_V4)
    session = db.get_session()
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤
        with open('parsed_products.json', 'r', encoding='utf-8') as f:
            parsed_data = json.load(f)
        
        with open('merch_sense_products.json', 'r', encoding='utf-8') as f:
            merch_data = json.load(f)
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        all_data = {}
        for item in parsed_data:
            all_data[item['name']] = item
        for item in merch_data:
            all_data[item['name']] = item
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä—è–º—É—é
        result = session.execute(text('SELECT id, name FROM products'))
        products = result.fetchall()
        
        print(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {len(products)} —Ç–æ–≤–∞—Ä–æ–≤...")
        
        for product_id, product_name in products:
            if product_name in all_data:
                item = all_data[product_name]
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –∫–∞—Å—Ç–æ–º
                characteristics = item.get('characteristics', '')
                custom_design = item.get('custom_design', '')
                
                session.execute(text('''
                    UPDATE products 
                    SET characteristics = :characteristics, custom_design = :custom_design 
                    WHERE id = :product_id
                '''), {
                    'characteristics': characteristics,
                    'custom_design': custom_design,
                    'product_id': product_id
                })
                
                print(f"  ‚úÖ {product_name} - –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –∫–∞—Å—Ç–æ–º")
            else:
                print(f"  ‚ö†Ô∏è  {product_name} - –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ JSON –¥–∞–Ω–Ω—ã—Ö")
        
        session.commit()
        print("‚úÖ –û–ø–∏—Å–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        
    finally:
        session.close()

def main():
    print("üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤...")
    fix_descriptions()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    db = CommercialProposalsDB(DATABASE_URL_V4)
    session = db.get_session()
    
    try:
        result = session.execute(text('SELECT id, name, characteristics, custom_design FROM products LIMIT 3'))
        products = result.fetchall()
        
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        for product_id, name, characteristics, custom_design in products:
            print(f"{product_id}. {name}")
            print(f"   –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {characteristics[:100] if characteristics else '–ù–ï–¢'}...")
            print(f"   –ö–∞—Å—Ç–æ–º: {custom_design[:50] if custom_design else '–ù–ï–¢'}...")
            print()
    finally:
        session.close()

if __name__ == "__main__":
    main()
