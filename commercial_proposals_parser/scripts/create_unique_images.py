#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL
import shutil
from PIL import Image

def create_unique_images():
    """–°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    print("üñºÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, ProductImage
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        products = session.query(Product).all()
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        session.query(ProductImage).delete()
        session.commit()
        print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö –∏–∑ –ë–î")
        
        # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        import shutil
        image_dir = "storage/images/products_fixed"
        if os.path.exists(image_dir):
            shutil.rmtree(image_dir)
        os.makedirs(image_dir, exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–∞–ø–∫–∞ {image_dir}")
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ä–∞–±–æ—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        all_images = []
        source_dirs = [
            "storage/images/products",
            "storage/images/products_original_sheet", 
            "storage/images/products_–í—Ç–æ—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞_1757933430",
            "storage/images/products_–í—Ç–æ—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞_1757933504"
        ]
        
        for source_dir in source_dirs:
            if os.path.exists(source_dir):
                for filename in os.listdir(source_dir):
                    if filename.endswith('.jpg'):
                        filepath = os.path.join(source_dir, filename)
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                        if os.path.getsize(filepath) > 5000:  # –ë–æ–ª—å—à–µ 5KB
                            all_images.append(filepath)
        
        print(f"üñºÔ∏è  –ù–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(all_images)}")
        
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        used_images = set()
        
        for i, product in enumerate(products):
            # –í—ã–±–∏—Ä–∞–µ–º 2 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–∞
            main_image = None
            additional_image = None
            
            # –ò—â–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            for img_path in all_images:
                if img_path not in used_images:
                    main_image = img_path
                    used_images.add(img_path)
                    break
            
            # –ò—â–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            for img_path in all_images:
                if img_path not in used_images:
                    additional_image = img_path
                    used_images.add(img_path)
                    break
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ
            if not main_image:
                main_image = all_images[0] if all_images else None
            if not additional_image:
                additional_image = all_images[1] if len(all_images) > 1 else all_images[0] if all_images else None
            
            if main_image and additional_image:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
                main_filename = f"product_{product.id}_main.jpg"
                additional_filename = f"product_{product.id}_additional.jpg"
                
                main_new_path = os.path.join(image_dir, main_filename)
                additional_new_path = os.path.join(image_dir, additional_filename)
                
                try:
                    # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    shutil.copy2(main_image, main_new_path)
                    shutil.copy2(additional_image, additional_new_path)
                    
                    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ –ë–î
                    main_img = ProductImage(
                        product_id=product.id,
                        local_path=main_new_path,
                        image_type='main'
                    )
                    session.add(main_img)
                    
                    additional_img = ProductImage(
                        product_id=product.id,
                        local_path=additional_new_path,
                        image_type='additional'
                    )
                    session.add(additional_img)
                    
                    print(f"  ‚úÖ {product.name} #{product.id}: {main_filename} + {additional_filename}")
                    
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {product.name} #{product.id}: {e}")
            else:
                print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {product.name} #{product.id}")
        
        session.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {len(products)} —Ç–æ–≤–∞—Ä–æ–≤")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("=" * 50)
    
    create_unique_images()

if __name__ == "__main__":
    main()
