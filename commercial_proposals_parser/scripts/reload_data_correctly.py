#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
—Å —É—á–µ—Ç–æ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ = –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Ü–µ–Ω
"""

import json
import os
import sys
sys.path.append('.')
from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL_V4
from sqlalchemy import text

def clear_database():
    """–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db = CommercialProposalsDB(DATABASE_URL_V4)
    session = db.get_session()
    try:
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        session.execute(text('DELETE FROM product_images'))
        session.execute(text('DELETE FROM price_offers'))
        session.execute(text('DELETE FROM products'))
        session.execute(text('DELETE FROM sheets_metadata'))
        session.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")
    finally:
        session.close()

def load_products_from_json():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    db = CommercialProposalsDB(DATABASE_URL_V4)
    
    # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞
    sheet_id = db.create_sheet_metadata(
        sheet_url="https://docs.google.com/spreadsheets/d/example",
        sheet_title="–û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞"
    )
    
    with open('parsed_products.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    print(f"üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º {len(data)} —Ç–æ–≤–∞—Ä–æ–≤...")
    
    for i, item in enumerate(data, 1):
        print(f"\n{i}. {item['name']}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä
        product = db.create_product(
            name=item['name'],
            characteristics=item.get('characteristics', ''),
            custom_design=item.get('custom_design', ''),
            sheet_id=sheet_id
        )
        
        print(f"   ‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω (ID: {product.id})")
        print(f"   üìù –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {item.get('characteristics', '')[:50]}...")
        print(f"   üé® –ö–∞—Å—Ç–æ–º: {item.get('custom_design', '')}")
        
        # –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ü–µ–Ω
        price_offers = item.get('price_offers', [])
        print(f"   üí∞ –í–∞—Ä–∏–∞–Ω—Ç—ã —Ü–µ–Ω: {len(price_offers)}")
        
        for offer in price_offers:
            db.create_price_offer(
                product_id=product.id,
                route_name=offer.get('route_name', ''),
                quantity=offer.get('quantity'),
                price_usd=offer.get('price_usd'),
                price_rub=offer.get('price_rub'),
                delivery_time=offer.get('delivery_time'),
                sample_price=offer.get('sample_price'),
                sample_time=offer.get('sample_time'),
                is_sample=offer.get('is_sample', False)
            )
            print(f"     - {offer.get('route_name', '')}: —Ç–∏—Ä–∞–∂ {offer.get('quantity')}, USD {offer.get('price_usd')}, RUB {offer.get('price_rub')}")
        
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏, –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏–º —Ä–µ–∞–ª—å–Ω—ã–µ)
        # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        main_image_path = f"storage/images/products_parsed/product_{product.id}_main.jpg"
        if os.path.exists(main_image_path):
            db.create_product_image(
                product_id=product.id,
                image_path=main_image_path,
                image_type='main'
            )
            print(f"   üñºÔ∏è  –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {main_image_path}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        additional_count = 1
        while True:
            add_image_path = f"storage/images/products_parsed/product_{product.id}_additional_{additional_count}.jpg"
            if os.path.exists(add_image_path):
                db.create_product_image(
                    product_id=product.id,
                    image_path=add_image_path,
                    image_type='additional'
                )
                print(f"   üñºÔ∏è  –î–æ–ø. –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {additional_count}: {add_image_path}")
                additional_count += 1
            else:
                break

def main():
    print("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    
    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    clear_database()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    load_products_from_json()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    db = CommercialProposalsDB(DATABASE_URL_V4)
    stats = db.get_statistics()
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤: {stats['total_products']}")
    print(f"   –í–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ü–µ–Ω: {stats['total_price_offers']}")
    print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats['total_images']}")

if __name__ == "__main__":
    main()
