#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏—Ä–∞–∂–µ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL

def fix_daily_planner_quantities():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∏—Ä–∞–∂–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤"""
    print("üìì –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏—Ä–∞–∂–µ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, PriceOffer
        
        # –ù–∞—Ö–æ–¥–∏–º –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫
        daily_planner = session.query(Product).filter(Product.name == '–ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫').first()
        
        if not daily_planner:
            print("‚ùå –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"üìì –ù–∞–π–¥–µ–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫: ID {daily_planner.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        price_offers = session.query(PriceOffer).filter(PriceOffer.product_id == daily_planner.id).all()
        
        print(f"üí∞ –ù–∞–π–¥–µ–Ω–æ —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {len(price_offers)}")
        
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏—Ä–∞–∂–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        correct_quantities = [50, 100, 300, 500, 1000, 3000]
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ç–∏—Ä–∞–∂—É
        offers_by_quantity = {}
        for offer in price_offers:
            qty = offer.quantity or 0
            if qty not in offers_by_quantity:
                offers_by_quantity[qty] = []
            offers_by_quantity[qty].append(offer)
        
        print(f"üìä –¢–µ–∫—É—â–∏–µ —Ç–∏—Ä–∞–∂–∏: {sorted(offers_by_quantity.keys())}")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        for offer in price_offers:
            session.delete(offer)
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        # –î–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã (—Å—Ç—Ä–æ–∫–∞ 4-9)
        price_data = [
            (50, 7.7, 655.8, 8.7, 738.6),    # –°—Ç—Ä–æ–∫–∞ 4
            (100, 5.7, 484.7, 6.7, 567.5),   # –°—Ç—Ä–æ–∫–∞ 5
            (300, 5.0, 421.8, 5.9, 504.6),   # –°—Ç—Ä–æ–∫–∞ 6
            (500, 4.5, 383.7, 5.5, 466.5),   # –°—Ç—Ä–æ–∫–∞ 7
            (1000, 4.1, 348.6, 5.1, 431.4),  # –°—Ç—Ä–æ–∫–∞ 8
            (3000, 3.7, 316.8, 4.7, 399.6)   # –°—Ç—Ä–æ–∫–∞ 9
        ]
        
        for qty, jd_usd, jd_rub, avia_usd, avia_rub in price_data:
            # –ñ–î –º–∞—Ä—à—Ä—É—Ç
            jd_offer = PriceOffer(
                product_id=daily_planner.id,
                route_name='–ñ–î',
                quantity=qty,
                price_usd=jd_usd,
                price_rub=jd_rub,
                delivery_time='50-55',
                is_sample=False,
                sample_price=None,
                sample_time=None,
                sample_price_currency=None
            )
            session.add(jd_offer)
            
            # –ê–í–ò–ê –º–∞—Ä—à—Ä—É—Ç
            avia_offer = PriceOffer(
                product_id=daily_planner.id,
                route_name='–ê–í–ò–ê',
                quantity=qty,
                price_usd=avia_usd,
                price_rub=avia_rub,
                delivery_time='40-45',
                is_sample=False,
                sample_price=None,
                sample_time=None,
                sample_price_currency=None
            )
            session.add(avia_offer)
            
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–æ: —Ç–∏—Ä–∞–∂ {qty:,} —à—Ç - –ñ–î: ${jd_usd}, –ê–í–ò–ê: ${avia_usd}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–∑–µ—Ü (–∏–∑ —Å—Ç—Ä–æ–∫–∏ 4)
        sample_offer = PriceOffer(
            product_id=daily_planner.id,
            route_name='–û–±—Ä–∞–∑–µ—Ü',
            quantity=None,
            price_usd=None,
            price_rub=None,
            delivery_time='12',
            is_sample=True,
            sample_price=655.8,  # RUB —Ü–µ–Ω–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ 4
            sample_time='12',
            sample_price_currency='RUB'
        )
        session.add(sample_offer)
        
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –æ–±—Ä–∞–∑–µ—Ü: {sample_offer.sample_price} ‚ÇΩ")
        
        session.commit()
        
        print(f"‚úÖ –¢–∏—Ä–∞–∂–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")

def show_result():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, PriceOffer
        
        daily_planner = session.query(Product).filter(Product.name == '–ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫').first()
        
        if daily_planner:
            price_offers = session.query(PriceOffer).filter(PriceOffer.product_id == daily_planner.id).all()
            
            print(f"üìì –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ #{daily_planner.id}:")
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏—Ä–∞–∂—É
            by_quantity = {}
            for offer in price_offers:
                qty = offer.quantity or 0
                if qty not in by_quantity:
                    by_quantity[qty] = []
                by_quantity[qty].append(offer)
            
            for qty, offers in sorted(by_quantity.items()):
                if qty > 0:
                    print(f"  üìä –¢–∏—Ä–∞–∂ {qty:,} —à—Ç:")
                    for offer in offers:
                        print(f"    - {offer.route_name}: USD={offer.price_usd}, RUB={offer.price_rub}")
                else:
                    print(f"  üìä –û–±—Ä–∞–∑–µ—Ü:")
                    for offer in offers:
                        print(f"    - {offer.route_name}: {offer.sample_price} ‚ÇΩ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏—Ä–∞–∂–µ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤")
    print("=" * 50)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏—Ä–∞–∂–∏
    fix_daily_planner_quantities()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    show_result()

if __name__ == "__main__":
    main()
