#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤ - –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏—Ä–∞–∂–∞–º–∏
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL

def fix_daily_planners():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏ - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä"""
    print("üìì –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, PriceOffer, ProductImage
        
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏
        daily_planners = session.query(Product).filter(Product.name == '–ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫').all()
        
        if not daily_planners:
            print("‚ùå –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤: {len(daily_planners)}")
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
        main_planner = daily_planners[0]
        print(f"üéØ –û—Å–Ω–æ–≤–Ω–æ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫: ID {main_planner.id}")
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        all_price_offers = []
        all_images = []
        
        for planner in daily_planners:
            # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            price_offers = session.query(PriceOffer).filter(PriceOffer.product_id == planner.id).all()
            all_price_offers.extend(price_offers)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            images = session.query(ProductImage).filter(ProductImage.product_id == planner.id).all()
            all_images.extend(images)
            
            print(f"  - –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ #{planner.id}: {len(price_offers)} —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
        # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        unique_offers = []
        seen_offers = set()
        
        for offer in all_price_offers:
            # –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
            key = (offer.route_name, offer.quantity, offer.price_usd, offer.price_rub)
            
            if key not in seen_offers:
                seen_offers.add(key)
                unique_offers.append(offer)
            else:
                # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç
                session.delete(offer)
        
        print(f"üîÑ –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {len(all_price_offers) - len(unique_offers)}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É
        for offer in unique_offers:
            if offer.product_id != main_planner.id:
                offer.product_id = main_planner.id
                session.add(offer)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É
        for image in all_images:
            if image.product_id != main_planner.id:
                image.product_id = main_planner.id
                session.add(image)
        
        # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏
        for planner in daily_planners[1:]:
            print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ #{planner.id}")
            session.delete(planner)
        
        session.commit()
        
        print(f"‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        print(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  - –û—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä: ID {main_planner.id}")
        print(f"  - –¶–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {len(unique_offers)}")
        print(f"  - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(all_images)}")

def show_daily_planner_result():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, PriceOffer, ProductImage
        
        # –ù–∞—Ö–æ–¥–∏–º –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏
        daily_planners = session.query(Product).filter(Product.name == '–ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫').all()
        
        print(f"üìì –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤ –≤ –±–∞–∑–µ: {len(daily_planners)}")
        
        for planner in daily_planners:
            print(f"\nüìì –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ #{planner.id}:")
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏—Ä–∞–∂—É
            price_offers = session.query(PriceOffer).filter(PriceOffer.product_id == planner.id).all()
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏—Ä–∞–∂—É
            by_quantity = {}
            for offer in price_offers:
                qty = offer.quantity or 0
                if qty not in by_quantity:
                    by_quantity[qty] = []
                by_quantity[qty].append(offer)
            
            for qty, offers in sorted(by_quantity.items()):
                if qty > 0:
                    print(f"  üìä –¢–∏—Ä–∞–∂ {qty:,} —à—Ç:")
                    for offer in offers:
                        print(f"    - {offer.route_name}: USD={offer.price_usd}, RUB={offer.price_rub}")
                else:
                    print(f"  üìä –ë–µ–∑ —Ç–∏—Ä–∞–∂–∞:")
                    for offer in offers:
                        print(f"    - {offer.route_name}: USD={offer.price_usd}, RUB={offer.price_rub}")
            
            # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            images = session.query(ProductImage).filter(ProductImage.product_id == planner.id).all()
            print(f"  üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–≤")
    print("=" * 50)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏
    fix_daily_planners()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    show_daily_planner_result()

if __name__ == "__main__":
    main()
