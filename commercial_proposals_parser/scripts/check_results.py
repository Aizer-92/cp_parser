#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL_V4

def check_parsing_results():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    
    print('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü')
    print('=' * 50)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = CommercialProposalsDB(DATABASE_URL_V4)
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = db.get_statistics()
    print(f'üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
    print(f'  - –¢–æ–≤–∞—Ä–æ–≤: {stats["total_products"]}')
    print(f'  - –¶–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {stats["total_price_offers"]}')
    print(f'  - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats["total_images"]}')
    
    print(f'\nüìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä–∞–º:')
    print('-' * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –¥–µ—Ç–∞–ª—è–º–∏
    products = db.get_all_products_with_details()
    
    if not products:
        print('‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
        return
    
    for i, (product, price_offers, images) in enumerate(products, 1):
        print(f'\n{i}. {product.name}')
        print(f'   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {product.description[:100] if product.description else "–ù–µ—Ç"}...')
        print(f'   üé® –ö–∞—Å—Ç–æ–º: {product.custom_design[:50] if product.custom_design else "–ù–µ—Ç"}...')
        print(f'   üí∞ –¶–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {len(price_offers)}')
        print(f'   üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ü–µ–Ω
        if price_offers:
            print(f'   üì¶ –í–∞—Ä–∏–∞–Ω—Ç—ã —Ü–µ–Ω:')
            for offer in price_offers:
                if offer.is_sample:
                    print(f'     üéØ {offer.route_name}: {offer.sample_price} —Ä—É–± ({offer.sample_time} –¥–Ω–µ–π)')
                else:
                    price_usd = f"${offer.price_usd}" if offer.price_usd else "N/A"
                    price_rub = f"{offer.price_rub} —Ä—É–±" if offer.price_rub else "N/A"
                    delivery = f"({offer.delivery_time} –¥–Ω–µ–π)" if offer.delivery_time else ""
                    print(f'     üì¶ {offer.route_name}: {price_usd} / {price_rub} {delivery}')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if images:
            print(f'   üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:')
            for img in images:
                print(f'     - {img.local_path} ({img.image_type})')
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–æ—Å—Ç–∞–≤–∫–∏
    print(f'\nüöö –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–æ—Å—Ç–∞–≤–∫–∏:')
    print('-' * 30)
    
    delivery_stats = {}
    sample_count = 0
    
    for product, price_offers, images in products:
        for offer in price_offers:
            if offer.is_sample:
                sample_count += 1
            else:
                delivery_stats[offer.route_name] = delivery_stats.get(offer.route_name, 0) + 1
    
    for route, count in delivery_stats.items():
        print(f'  - {route}: {count} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π')
    
    if sample_count > 0:
        print(f'  - –û–±—Ä–∞–∑—Ü—ã: {sample_count} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π')
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    print(f'\nüì∏ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º:')
    print('-' * 30)
    
    image_stats = {}
    for product, price_offers, images in products:
        for img in images:
            image_stats[img.image_type] = image_stats.get(img.image_type, 0) + 1
    
    for img_type, count in image_stats.items():
        print(f'  - {img_type}: {count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
    
    if not image_stats:
        print('  - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')

if __name__ == "__main__":
    check_parsing_results()
