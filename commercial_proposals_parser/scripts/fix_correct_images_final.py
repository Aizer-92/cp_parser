#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
"""

import os
import sys
import json
import shutil
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL

def clear_existing_images():
    """–û—á–∏—â–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import ProductImage
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
        session.query(ProductImage).delete()
        session.commit()
        print("‚úÖ –û—á–∏—â–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö –≤ –ë–î")
    
    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    images_dir = "storage/images/products_correct"
    if os.path.exists(images_dir):
        shutil.rmtree(images_dir)
        print(f"‚úÖ –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞ {images_dir}")
    
    os.makedirs(images_dir, exist_ok=True)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–∞–ø–∫–∞ {images_dir}")

def get_original_images_mapping():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    # –ú–∞–ø–ø–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –ø–∞–ø–æ–∫
    product_image_mapping = {
        # –ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–∏ (—Ä–∞–∑–Ω—ã–µ —Ç–∏—Ä–∞–∂–∏ - –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä)
        1: {
            'name': '–ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_1_col_1_18.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_18_19.jpg'  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –•—É–¥–∏
        12: {
            'name': '–•—É–¥–∏',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_11_col_1_11.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_11_col_18_13.jpg'  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –®–∞–ø–∫–∞-–±–∏–Ω–∏
        13: {
            'name': '–®–ê–ü–ö–ê-–ë–ò–ù–ò',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_13_col_1_12.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_13_col_18_14.jpg'  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –®–æ–ø–ø–µ—Ä
        14: {
            'name': '–®–û–ü–ü–ï–†',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_13_col_18_14.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_13_col_18_15.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –ë—Ä–µ–ª–æ–∫–∏
        15: {
            'name': '–ë—Ä–µ–ª–æ–∫–∏',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_13_col_18_15.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_13_col_18_16.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞
        16: {
            'name': '–¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_13_col_18_16.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_13_col_18_17.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä
        17: {
            'name': '–ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä',
            'source_folder': 'products_original_sheet',
            'images': [
                'product_row_13_col_18_17.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_13_col_18_18.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        # –¢–æ–≤–∞—Ä—ã –∏–∑ –ú–µ—Ä—á –¥–ª—è Sense
        18: {
            'name': '–ó–æ–Ω—Ç',
            'source_folder': 'products_–ú–µ—Ä—á –¥–ª—è Sense_1757934153',
            'images': [
                'product_row_1_col_1_1.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_1_2.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        19: {
            'name': '–ü–∏—Å—å–º–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä',
            'source_folder': 'products_–ú–µ—Ä—á –¥–ª—è Sense_1757934153',
            'images': [
                'product_row_1_col_1_2.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_1_3.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        20: {
            'name': '–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞',
            'source_folder': 'products_–ú–µ—Ä—á –¥–ª—è Sense_1757934153',
            'images': [
                'product_row_1_col_1_3.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_1_4.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        21: {
            'name': '–°—É–º–∫–∞',
            'source_folder': 'products_–ú–µ—Ä—á –¥–ª—è Sense_1757934153',
            'images': [
                'product_row_1_col_1_4.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_1_5.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        22: {
            'name': '–®–æ–ø–ø–µ—Ä',
            'source_folder': 'products_–ú–µ—Ä—á –¥–ª—è Sense_1757934153',
            'images': [
                'product_row_1_col_1_5.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_1_6.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        },
        
        23: {
            'name': '–®–æ–ø–ø–µ—Ä',
            'source_folder': 'products_–ú–µ—Ä—á –¥–ª—è Sense_1757934153',
            'images': [
                'product_row_1_col_1_6.jpg',  # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                'product_row_1_col_1_7.jpg'   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            ]
        }
    }
    
    return product_image_mapping

def assign_correct_images():
    """–ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º"""
    print("üîó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    product_mapping = get_original_images_mapping()
    
    with db.get_session() as session:
        from database.models_v4 import Product, ProductImage
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        products = session.query(Product).all()
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ë–î: {len(products)}")
        
        assigned_count = 0
        
        for product in products:
            if product.id in product_mapping:
                mapping = product_mapping[product.id]
                source_folder = mapping['source_folder']
                print(f"\nüì¶ {product.name} #{product.id} (–∏–∑ {source_folder}):")
                
                # –ö–æ–ø–∏—Ä—É–µ–º –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                for i, image_name in enumerate(mapping['images']):
                    source_path = f"storage/images/{source_folder}/{image_name}"
                    
                    if os.path.exists(source_path):
                        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                        new_image_name = f"product_{product.id}_{i+1}.jpg"
                        new_image_path = f"storage/images/products_correct/{new_image_name}"
                        
                        try:
                            # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                            shutil.copy2(source_path, new_image_path)
                            
                            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
                            image_type = 'main' if i == 0 else 'additional'
                            product_image = ProductImage(
                                product_id=product.id,
                                local_path=new_image_path,
                                image_type=image_type
                            )
                            session.add(product_image)
                            assigned_count += 1
                            
                            print(f"  ‚úÖ {image_name} -> {new_image_name} ({image_type})")
                            
                        except Exception as e:
                            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ {image_name}: {e}")
                    else:
                        print(f"  ‚ö†Ô∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {source_path}")
            else:
                print(f"‚ö†Ô∏è  –ù–µ—Ç –º–∞–ø–ø–∏–Ω–≥–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {product.name} #{product.id}")
        
        session.commit()
        print(f"\n‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {assigned_count}")

def create_unique_fallback_images():
    """–°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    print("üîÑ –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    with db.get_session() as session:
        from database.models_v4 import Product, ProductImage
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        products_without_images = session.query(Product).outerjoin(ProductImage).filter(ProductImage.id.is_(None)).all()
        
        print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(products_without_images)}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∫ —à–∞–±–ª–æ–Ω—ã
        template_images = [
            "storage/images/products_original_sheet/product_row_1_col_1_18.jpg",
            "storage/images/products_original_sheet/product_row_11_col_1_11.jpg",
            "storage/images/products_original_sheet/product_row_13_col_1_12.jpg",
            "storage/images/products_original_sheet/product_row_13_col_18_14.jpg",
            "storage/images/products_original_sheet/product_row_13_col_18_15.jpg"
        ]
        
        template_index = 0
        
        for product in products_without_images:
            if template_index < len(template_images):
                template_path = template_images[template_index]
                
                if os.path.exists(template_path):
                    new_image_name = f"product_{product.id}_fallback.jpg"
                    new_image_path = f"storage/images/products_correct/{new_image_name}"
                    
                    try:
                        shutil.copy2(template_path, new_image_path)
                        
                        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
                        product_image = ProductImage(
                            product_id=product.id,
                            local_path=new_image_path,
                            image_type='main'
                        )
                        session.add(product_image)
                        
                        print(f"  ‚úÖ {product.name} #{product.id} -> {new_image_name} (fallback)")
                        template_index += 1
                        
                    except Exception as e:
                        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ fallback –¥–ª—è {product.name}: {e}")
        
        session.commit()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏")
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    clear_existing_images()
    
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä–∞–º
    assign_correct_images()
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    create_unique_fallback_images()
    
    print("\n‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    with db.get_session() as session:
        from database.models_v4 import Product, ProductImage
        
        total_products = session.query(Product).count()
        total_images = session.query(ProductImage).count()
        products_with_images = session.query(Product).join(ProductImage).distinct().count()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_products}")
        print(f"  üñºÔ∏è  –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_images}")
        print(f"  ‚úÖ –¢–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {products_with_images}")

if __name__ == "__main__":
    main()
