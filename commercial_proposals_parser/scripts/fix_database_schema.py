#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–ª—è characteristics
"""

import sqlite3

def fix_database_schema():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('commercial_proposals_v4.db')
    cursor = conn.cursor()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ö–µ–º–æ–π
        cursor.execute('''
            CREATE TABLE products_new (
                id INTEGER PRIMARY KEY,
                name VARCHAR(300) NOT NULL,
                description TEXT,
                characteristics TEXT,
                custom_design VARCHAR(200),
                sheet_id INTEGER NOT NULL,
                created_at DATETIME,
                updated_at DATETIME,
                FOREIGN KEY (sheet_id) REFERENCES sheets_metadata (id)
            )
        ''')
        
        # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute('''
            INSERT INTO products_new (id, name, description, characteristics, custom_design, sheet_id, created_at, updated_at)
            SELECT id, name, description, characteristics, custom_design, sheet_id, created_at, updated_at
            FROM products
        ''')
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
        cursor.execute('DROP TABLE products')
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        cursor.execute('ALTER TABLE products_new RENAME TO products')
        
        conn.commit()
        print("‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        
    finally:
        conn.close()

def main():
    print("üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    fix_database_schema()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    conn = sqlite3.connect('commercial_proposals_v4.db')
    cursor = conn.cursor()
    
    try:
        cursor.execute('PRAGMA table_info(products)')
        columns = cursor.fetchall()
        
        print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã products:")
        for col in columns:
            print(f"  {col[1]} - {col[2]}")
    finally:
        conn.close()

if __name__ == "__main__":
    main()
