#!/usr/bin/env python3
"""
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏ storage/images/products
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.manager_v4 import CommercialProposalsDB
from config import DATABASE_URL
from pathlib import Path
import re

def restore_images():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏ storage/images/products"""
    
    db = CommercialProposalsDB(DATABASE_URL.replace('.db', '_v4.db'))
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    with db.get_session() as session:
        from database.models_v4 import Product
        
        products = session.query(Product).all()
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        # –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        images_dir = Path("storage/images/products")
        
        if not images_dir.exists():
            print("‚ùå –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        image_files = list(images_dir.glob("*.jpg"))
        print(f"üì∏ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_files)}")
        
        # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏
        for product in products:
            print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä: {product.name}")
            
            # –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            product_images = []
            
            for image_file in image_files:
                filename = image_file.name
                
                # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
                # –§–æ—Ä–º–∞—Ç: product_row_X_col_Y_Z.jpg
                match = re.search(r'product_row_(\d+)_col_(\d+)_', filename)
                if match:
                    row_num = int(match.group(1))
                    col_num = int(match.group(2))
                    
                    # –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ 0 (A)
                    # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ —Å —Ç–æ–≤–∞—Ä–æ–º
                    if product.name == "–ö–∞—Ä–¥—Ö–æ–ª–¥–µ—Ä" and row_num == 3 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    elif product.name == "–û–±–ª–æ–∂–∫–∞ –¥–ª—è –ø–∞—Å–ø–æ—Ä—Ç–∞" and row_num == 4 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    elif product.name == "–§—É—Ç–ª—è—Ä –¥–ª—è –æ—á–∫–æ–≤" and row_num == 5 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    elif product.name == "–†—É—á–∫–∞" and row_num == 6 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    elif product.name == "–¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞" and row_num == 8 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    elif product.name == "–ù–∞–±–æ—Ä –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π 6 —Ü–≤–µ—Ç–æ–≤" and row_num == 10 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    elif product.name == "–ö—Ä—É–∂–∫–∞" and row_num == 12 and col_num == 0:
                        product_images.append((image_file, 'main'))
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å—Ç–æ–ª–±–µ—Ü 17)
                    elif product.name == "–û–±–ª–æ–∂–∫–∞ –¥–ª—è –ø–∞—Å–ø–æ—Ä—Ç–∞" and row_num == 4 and col_num == 17:
                        product_images.append((image_file, 'additional'))
                    elif product.name == "–§—É—Ç–ª—è—Ä –¥–ª—è –æ—á–∫–æ–≤" and row_num == 5 and col_num == 17:
                        product_images.append((image_file, 'additional'))
                    elif product.name == "–†—É—á–∫–∞" and row_num == 6 and col_num == 17:
                        product_images.append((image_file, 'additional'))
                    elif product.name == "–¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞" and row_num == 8 and col_num == 17:
                        product_images.append((image_file, 'additional'))
                    elif product.name == "–ù–∞–±–æ—Ä –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π 6 —Ü–≤–µ—Ç–æ–≤" and row_num == 10 and col_num == 17:
                        product_images.append((image_file, 'additional'))
                    elif product.name == "–ö—Ä—É–∂–∫–∞" and row_num == 12 and col_num == 17:
                        product_images.append((image_file, 'additional'))
            
            print(f"  üì∏ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(product_images)}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            for image_file, image_type in product_images:
                # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                db.create_product_image(
                    product_id=product.id,
                    image_path=str(image_file),
                    image_type=image_type
                )
                
                print(f"    ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {image_file.name} ({image_type})")

if __name__ == "__main__":
    restore_images()
