#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞—Ä–ø–ª–∞—Ç –∑–∞ 2025 –≥–æ–¥
"""

import pandas as pd
from datetime import datetime
import os

def analyze_2025():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã –∑–∞ 2025 –≥–æ–¥"""
    
    file_path = "–¢–∞–±–ª –≤—ã–ø–ª–∞—Ç—ã 2025 (1).xlsx"
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìä –ê–Ω–∞–ª–∏–∑ –∑–∞—Ä–ø–ª–∞—Ç –∑–∞ 2025 –≥–æ–¥: {file_path}")
    
    try:
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã Excel —Ñ–∞–π–ª–∞
        excel_file = pd.ExcelFile(file_path)
        sheet_names = excel_file.sheet_names
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheet_names)}")
        
        # –ò—â–µ–º –ª–∏—Å—Ç—ã –∑–∞ 2025 –≥–æ–¥
        sheets_2025 = [sheet for sheet in sheet_names if '2025' in sheet and not '–∞—Ä—Ö–∏–≤' in sheet.lower()]
        print(f"\nüìÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ª–∏—Å—Ç—ã –∑–∞ 2025 –≥–æ–¥: {sheets_2025}")
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        employees_2025 = {
            '–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π': {},
            '–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω': {}
        }
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ª–∏—Å—Ç –∑–∞ 2025 –≥–æ–¥
        for sheet_name in sheets_2025:
            print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–∏—Å—Ç: {sheet_name}")
            
            try:
                df = pd.read_excel(file_path, sheet_name=sheet_name)
                
                # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ê—Ä—Ç–µ–º–∞
                artem_data = df[df.astype(str).apply(lambda x: x.str.contains('–ê—Ä—Ç–µ–º|–í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π', case=False, na=False)).any(axis=1)]
                
                if not artem_data.empty:
                    for idx, row in artem_data.iterrows():
                        name = row.get('Unnamed: 6', '')
                        if '–ê—Ä—Ç–µ–º' in str(name):
                            salary = row.get('Unnamed: 7', 0)
                            additional = row.get('Unnamed: 10', 0)
                            
                            if salary and salary > 0:
                                if sheet_name not in employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π']:
                                    employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π'][sheet_name] = {'salary': 0, 'additional': 0}
                                employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π'][sheet_name]['salary'] += salary
                            
                            if additional and additional > 0:
                                if sheet_name not in employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π']:
                                    employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π'][sheet_name] = {'salary': 0, 'additional': 0}
                                employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π'][sheet_name]['additional'] += additional
                
                # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ï–≤–≥–µ–Ω–∏—è
                eugene_data = df[df.astype(str).apply(lambda x: x.str.contains('–ï–≤–≥–µ–Ω–∏–π|–ö–æ—Å–∏—Ü–∏–Ω|–ö–æ—Å–∏—Ü—ã–Ω', case=False, na=False)).any(axis=1)]
                
                if not eugene_data.empty:
                    for idx, row in eugene_data.iterrows():
                        name = row.get('Unnamed: 6', '')
                        if '–ï–≤–≥–µ–Ω–∏–π' in str(name) or '–ö–æ—Å–∏—Ü' in str(name):
                            salary = row.get('Unnamed: 7', 0)
                            additional = row.get('Unnamed: 10', 0)
                            
                            if salary and salary > 0:
                                if sheet_name not in employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω']:
                                    employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω'][sheet_name] = {'salary': 0, 'additional': 0}
                                employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω'][sheet_name]['salary'] += salary
                            
                            if additional and additional > 0:
                                if sheet_name not in employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω']:
                                    employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω'][sheet_name] = {'salary': 0, 'additional': 0}
                                employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω'][sheet_name]['additional'] += additional
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–∏—Å—Ç–∞ {sheet_name}: {e}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\n" + "="*80)
        print("–ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó –ó–ê–†–ü–õ–ê–¢ –ó–ê 2025 –ì–û–î")
        print("="*80)
        
        for employee, data in employees_2025.items():
            print(f"\nüë§ {employee.upper()}")
            print("-" * 50)
            
            if data:
                total_salary = 0
                total_additional = 0
                
                for month, amounts in data.items():
                    salary = amounts.get('salary', 0)
                    additional = amounts.get('additional', 0)
                    total = salary + additional
                    
                    total_salary += salary
                    total_additional += additional
                    
                    print(f"   üìÖ {month}: {total:,.2f} —Ä—É–±. (–∑–∞—Ä–ø–ª–∞—Ç–∞: {salary:,.2f}, –¥–æ–ø.: {additional:,.2f})")
                
                total_2025 = total_salary + total_additional
                months_count = len(data)
                
                print(f"\n   üìä –ò–¢–û–ì–û –ó–ê 2025 –ì–û–î:")
                print(f"      üí∞ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞—Ä–ø–ª–∞—Ç—ã: {total_salary:,.2f} —Ä—É–±.")
                print(f"      ‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã: {total_additional:,.2f} —Ä—É–±.")
                print(f"      üéØ –û–ë–©–ò–ô –î–û–•–û–î: {total_2025:,.2f} —Ä—É–±.")
                
                if months_count > 0:
                    avg_monthly = total_2025 / months_count
                    print(f"      üìÖ –°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω–æ: {avg_monthly:,.2f} —Ä—É–±.")
                    print(f"      üéØ –°–†–ï–î–ù–ï–ì–û–î–û–í–ê–Ø –ó–ê–†–ü–õ–ê–¢–ê: {total_2025:,.2f} —Ä—É–±.")
            else:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –∑–∞ 2025 –≥–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        print("\n" + "="*80)
        print("–°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ó–ê 2025 –ì–û–î")
        print("="*80)
        
        artem_total = sum([sum(amounts.values()) for amounts in employees_2025['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π'].values()])
        eugene_total = sum([sum(amounts.values()) for amounts in employees_2025['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω'].values()])
        
        if artem_total > 0 and eugene_total > 0:
            print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –î–û–•–û–î–û–í –ó–ê 2025 –ì–û–î:")
            print(f"   üë§ –ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π: {artem_total:,.2f} —Ä—É–±.")
            print(f"   üë§ –ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω:   {eugene_total:,.2f} —Ä—É–±.")
            print(f"   üìà –†–∞–∑–Ω–∏—Ü–∞: {artem_total - eugene_total:,.2f} —Ä—É–±.")
            print(f"   üìä –ê—Ä—Ç–µ–º –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ {((artem_total / eugene_total - 1) * 100):.1f}% –±–æ–ª—å—à–µ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_file = f"salary_2025_analysis_{timestamp}.txt"
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write("–ê–ù–ê–õ–ò–ó –ó–ê–†–ü–õ–ê–¢ –ó–ê 2025 –ì–û–î\n")
            f.write("=" * 60 + "\n\n")
            f.write(f"–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"–õ–∏—Å—Ç—ã –∑–∞ 2025 –≥–æ–¥: {sheets_2025}\n\n")
            
            for employee, data in employees_2025.items():
                f.write(f"{employee.upper()}\n")
                f.write("-" * 40 + "\n")
                
                if data:
                    total_salary = 0
                    total_additional = 0
                    
                    for month, amounts in data.items():
                        salary = amounts.get('salary', 0)
                        additional = amounts.get('additional', 0)
                        total = salary + additional
                        
                        total_salary += salary
                        total_additional += additional
                        
                        f.write(f"{month}: {total:,.2f} —Ä—É–±. (–∑–∞—Ä–ø–ª–∞—Ç–∞: {salary:,.2f}, –¥–æ–ø.: {additional:,.2f})\n")
                    
                    total_2025 = total_salary + total_additional
                    f.write(f"\n–ò–¢–û–ì–û –ó–ê 2025 –ì–û–î: {total_2025:,.2f} —Ä—É–±.\n")
                else:
                    f.write("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n")
                
                f.write("\n")
        
        print(f"\nüìÑ –û—Ç—á–µ—Ç –∑–∞ 2025 –≥–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_file}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∑–∞—Ä–ø–ª–∞—Ç –∑–∞ 2025 –≥–æ–¥")
    print("=" * 60)
    analyze_2025()
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞—Ä–ø–ª–∞—Ç –∑–∞ 2025 –≥–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
