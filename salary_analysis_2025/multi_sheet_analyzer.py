#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞—Ä–ø–ª–∞—Ç —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ Excel —Ñ–∞–π–ª–∞
"""

import pandas as pd
import numpy as np
from datetime import datetime
import os

def analyze_multi_sheet_salaries():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã —Å–æ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ Excel —Ñ–∞–π–ª–∞"""
    
    file_path = "–¢–∞–±–ª –≤—ã–ø–ª–∞—Ç—ã 2025 (1).xlsx"
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìä –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ —Ñ–∞–π–ª–∞: {file_path}")
    
    try:
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã Excel —Ñ–∞–π–ª–∞
        excel_file = pd.ExcelFile(file_path)
        sheet_names = excel_file.sheet_names
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheet_names)}")
        print(f"üìã –ù–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤: {sheet_names}")
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
        employees_data = {
            '–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π': [],
            '–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω': []
        }
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ª–∏—Å—Ç
        for sheet_name in sheet_names:
            print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–∏—Å—Ç: {sheet_name}")
            
            try:
                # –ß–∏—Ç–∞–µ–º –ª–∏—Å—Ç
                df = pd.read_excel(file_path, sheet_name=sheet_name)
                
                print(f"   üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")
                print(f"   üìã –°—Ç–æ–ª–±—Ü—ã: {list(df.columns)}")
                
                # –ò—â–µ–º —Å—Ç–æ–ª–±—Ü—ã "—Å—Ç" –∏ "–ø—Ä–æ—Ü–µ–Ω—Ç—ã"
                st_columns = []
                percentage_columns = []
                
                for col in df.columns:
                    col_str = str(col).lower()
                    if '—Å—Ç' in col_str and len(col_str) <= 3:  # –ò—â–µ–º –∏–º–µ–Ω–Ω–æ "—Å—Ç"
                        st_columns.append(col)
                    if '–ø—Ä–æ—Ü–µ–Ω—Ç' in col_str or '–ø—Ä–æ—Ü' in col_str:
                        percentage_columns.append(col)
                
                print(f"   üí∞ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã '—Å—Ç': {st_columns}")
                print(f"   üìä –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {percentage_columns}")
                
                # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ê—Ä—Ç–µ–º–∞ –í–∞—Å–∏–ª–µ–≤—Å–∫–æ–≥–æ
                artem_data = df[df.astype(str).apply(lambda x: x.str.contains('–ê—Ä—Ç–µ–º|–í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π', case=False, na=False)).any(axis=1)]
                
                if not artem_data.empty:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(artem_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ê—Ä—Ç–µ–º–∞ –í–∞—Å–∏–ª–µ–≤—Å–∫–æ–≥–æ")
                    
                    for idx, row in artem_data.iterrows():
                        print(f"      üìã –ó–∞–ø–∏—Å—å #{idx}:")
                        
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–æ–≤ "—Å—Ç" –∏ "–ø—Ä–æ—Ü–µ–Ω—Ç—ã"
                        st_values = []
                        percentage_values = []
                        
                        for col in st_columns:
                            value = row.get(col, 0)
                            if pd.notna(value) and value != 0:
                                st_values.append((col, value))
                        
                        for col in percentage_columns:
                            value = row.get(col, 0)
                            if pd.notna(value) and value != 0:
                                percentage_values.append((col, value))
                        
                        if st_values:
                            print(f"         üí∞ –ó–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö '—Å—Ç': {st_values}")
                        if percentage_values:
                            print(f"         üìä –ó–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {percentage_values}")
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
                        for col, value in row.items():
                            if pd.notna(value) and str(value).strip() and str(value) != 'nan':
                                print(f"         {col}: {value}")
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                        employees_data['–ê—Ä—Ç–µ–º –í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π'].append({
                            'sheet': sheet_name,
                            'row': idx,
                            'st_values': st_values,
                            'percentage_values': percentage_values,
                            'all_data': dict(row)
                        })
                
                # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ï–≤–≥–µ–Ω–∏—è –ö–æ—Å–∏—Ü–∏–Ω–∞
                eugene_data = df[df.astype(str).apply(lambda x: x.str.contains('–ï–≤–≥–µ–Ω–∏–π|–ö–æ—Å–∏—Ü–∏–Ω|–ö–æ—Å–∏—Ü—ã–Ω', case=False, na=False)).any(axis=1)]
                
                if not eugene_data.empty:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(eugene_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ï–≤–≥–µ–Ω–∏—è –ö–æ—Å–∏—Ü–∏–Ω–∞")
                    
                    for idx, row in eugene_data.iterrows():
                        print(f"      üìã –ó–∞–ø–∏—Å—å #{idx}:")
                        
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–æ–≤ "—Å—Ç" –∏ "–ø—Ä–æ—Ü–µ–Ω—Ç—ã"
                        st_values = []
                        percentage_values = []
                        
                        for col in st_columns:
                            value = row.get(col, 0)
                            if pd.notna(value) and value != 0:
                                st_values.append((col, value))
                        
                        for col in percentage_columns:
                            value = row.get(col, 0)
                            if pd.notna(value) and value != 0:
                                percentage_values.append((col, value))
                        
                        if st_values:
                            print(f"         üí∞ –ó–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö '—Å—Ç': {st_values}")
                        if percentage_values:
                            print(f"         üìä –ó–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {percentage_values}")
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
                        for col, value in row.items():
                            if pd.notna(value) and str(value).strip() and str(value) != 'nan':
                                print(f"         {col}: {value}")
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                        employees_data['–ï–≤–≥–µ–Ω–∏–π –ö–æ—Å–∏—Ü–∏–Ω'].append({
                            'sheet': sheet_name,
                            'row': idx,
                            'st_values': st_values,
                            'percentage_values': percentage_values,
                            'all_data': dict(row)
                        })
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–∏—Å—Ç–∞ {sheet_name}: {e}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\n" + "="*80)
        print("–ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó –°–û–ë–†–ê–ù–ù–´–• –î–ê–ù–ù–´–•")
        print("="*80)
        
        for employee, data_list in employees_data.items():
            print(f"\nüë§ {employee.upper()}")
            print("-" * 50)
            
            if data_list:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(data_list)} –∑–∞–ø–∏—Å–µ–π –≤ {len(set([d['sheet'] for d in data_list]))} –ª–∏—Å—Ç–∞—Ö")
                
                total_st = 0
                total_percentage = 0
                monthly_data = {}
                
                for data in data_list:
                    sheet = data['sheet']
                    st_sum = sum([val for _, val in data['st_values']])
                    percentage_sum = sum([val for _, val in data['percentage_values']])
                    
                    total_st += st_sum
                    total_percentage += percentage_sum
                    
                    if sheet not in monthly_data:
                        monthly_data[sheet] = {'st': 0, 'percentage': 0}
                    
                    monthly_data[sheet]['st'] += st_sum
                    monthly_data[sheet]['percentage'] += percentage_sum
                    
                    print(f"   üìÖ {sheet}: —Å—Ç={st_sum:,.2f}, –ø—Ä–æ—Ü–µ–Ω—Ç—ã={percentage_sum:,.2f}")
                
                print(f"\n   üìä –ò–¢–û–ì–û:")
                print(f"      üí∞ –û–±—â–∞—è —Å—É–º–º–∞ '—Å—Ç': {total_st:,.2f}")
                print(f"      üìä –û–±—â–∞—è —Å—É–º–º–∞ '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {total_percentage:,.2f}")
                
                # –†–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
                months_count = len(monthly_data)
                if months_count > 0:
                    avg_monthly_st = total_st / months_count
                    avg_monthly_percentage = total_percentage / months_count
                    annual_st = avg_monthly_st * 12
                    annual_percentage = avg_monthly_percentage * 12
                    
                    print(f"      üìÖ –°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:")
                    print(f"         üí∞ '—Å—Ç': {avg_monthly_st:,.2f} —Ä—É–±.")
                    print(f"         üìä '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {avg_monthly_percentage:,.2f} —Ä—É–±.")
                    print(f"      üéØ –°–†–ï–î–ù–ï–ì–û–î–û–í–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:")
                    print(f"         üí∞ '—Å—Ç': {annual_st:,.2f} —Ä—É–±.")
                    print(f"         üìä '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {annual_percentage:,.2f} —Ä—É–±.")
            else:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_file = f"multi_sheet_analysis_{timestamp}.txt"
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write("–ê–ù–ê–õ–ò–ó –í–°–ï–• –õ–ò–°–¢–û–í EXCEL –§–ê–ô–õ–ê\n")
            f.write("=" * 60 + "\n\n")
            f.write(f"–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"–§–∞–π–ª: {file_path}\n")
            f.write(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: {len(sheet_names)}\n")
            f.write(f"–õ–∏—Å—Ç—ã: {sheet_names}\n\n")
            
            for employee, data_list in employees_data.items():
                f.write(f"{employee.upper()}\n")
                f.write("-" * 40 + "\n")
                
                if data_list:
                    total_st = sum([sum([val for _, val in d['st_values']]) for d in data_list])
                    total_percentage = sum([sum([val for _, val in d['percentage_values']]) for d in data_list])
                    months_count = len(set([d['sheet'] for d in data_list]))
                    
                    f.write(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(data_list)}\n")
                    f.write(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤: {months_count}\n")
                    f.write(f"–û–±—â–∞—è —Å—É–º–º–∞ '—Å—Ç': {total_st:,.2f}\n")
                    f.write(f"–û–±—â–∞—è —Å—É–º–º–∞ '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {total_percentage:,.2f}\n")
                    
                    if months_count > 0:
                        avg_monthly_st = total_st / months_count
                        avg_monthly_percentage = total_percentage / months_count
                        annual_st = avg_monthly_st * 12
                        annual_percentage = avg_monthly_percentage * 12
                        
                        f.write(f"–°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω–æ '—Å—Ç': {avg_monthly_st:,.2f}\n")
                        f.write(f"–°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω–æ '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {avg_monthly_percentage:,.2f}\n")
                        f.write(f"–°—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤–æ '—Å—Ç': {annual_st:,.2f}\n")
                        f.write(f"–°—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤–æ '–ø—Ä–æ—Ü–µ–Ω—Ç—ã': {annual_percentage:,.2f}\n")
                else:
                    f.write("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n")
                
                f.write("\n")
        
        print(f"\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_file}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ Excel")
    print("=" * 60)
    analyze_multi_sheet_salaries()
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!")
