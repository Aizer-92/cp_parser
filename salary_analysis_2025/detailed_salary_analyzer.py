#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞—Ä–ø–ª–∞—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
"""

import pandas as pd
import numpy as np
from datetime import datetime
import os

def analyze_detailed_salaries():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞—Ä–ø–ª–∞—Ç —Å —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π"""
    
    file_path = "–¢–∞–±–ª –≤—ã–ø–ª–∞—Ç—ã 2025 (1).xlsx"
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {file_path}")
    
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(file_path)
        
        print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ê—Ä—Ç–µ–º–∞ –í–∞—Å–∏–ª–µ–≤—Å–∫–æ–≥–æ
        print("\n" + "="*60)
        print("–ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ê–†–¢–ï–ú–ê –í–ê–°–ò–õ–ï–í–°–ö–û–ì–û")
        print("="*60)
        
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –ê—Ä—Ç–µ–º–∞
        artem_data = df[df.astype(str).apply(lambda x: x.str.contains('–ê—Ä—Ç–µ–º|–í–∞—Å–∏–ª–µ–≤—Å–∫–∏–π', case=False, na=False)).any(axis=1)]
        
        if not artem_data.empty:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(artem_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ê—Ä—Ç–µ–º–∞ –í–∞—Å–∏–ª–µ–≤—Å–∫–æ–≥–æ")
            
            for idx, row in artem_data.iterrows():
                print(f"\nüìã –ó–∞–ø–∏—Å—å #{idx}:")
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                name = row.get('Unnamed: 6', '–ê—Ä—Ç–µ–º')
                position = row.get('Unnamed: 5', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ö–∏—Ç–∞–µ–º')
                base_salary = row.get('Unnamed: 7', 0)
                ss_amount = row.get('–°–°', 0)
                additional = row.get('Unnamed: 10', 0)
                total_ss = row.get('Unnamed: 13', 0)
                final_amount = row.get('Unnamed: 22', 0)
                
                print(f"   üë§ –ò–º—è: {name}")
                print(f"   üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å: {position}")
                print(f"   üí∞ –ë–∞–∑–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {base_salary:,.2f} —Ä—É–±.")
                print(f"   üìä –°–°: {ss_amount:,.2f} —Ä—É–±.")
                print(f"   ‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {additional:,.2f} —Ä—É–±.")
                print(f"   üìà –û–±—â–∞—è –°–°: {total_ss:,.2f} —Ä—É–±.")
                print(f"   üéØ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {final_amount:,.2f} —Ä—É–±.")
                
                # –†–∞—Å—á–µ—Ç—ã
                if base_salary and base_salary > 0:
                    monthly_salary = base_salary
                    annual_salary = monthly_salary * 12
                    
                    print(f"\n   üìä –†–ê–°–ß–ï–¢–´:")
                    print(f"      üíµ –ú–µ—Å—è—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {monthly_salary:,.2f} —Ä—É–±.")
                    print(f"      üìÖ –ì–æ–¥–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {annual_salary:,.2f} —Ä—É–±.")
                    
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã
                    if additional and additional > 0:
                        total_monthly = monthly_salary + additional
                        total_annual = total_monthly * 12
                        print(f"      üí∞ –ú–µ—Å—è—á–Ω–∞—è —Å –¥–æ–ø–ª–∞—Ç–∞–º–∏: {total_monthly:,.2f} —Ä—É–±.")
                        print(f"      üìÖ –ì–æ–¥–æ–≤–∞—è —Å –¥–æ–ø–ª–∞—Ç–∞–º–∏: {total_annual:,.2f} —Ä—É–±.")
        
        # –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –ï–≤–≥–µ–Ω–∏—è –ö–æ—Å–∏—Ü–∏–Ω–∞
        print("\n" + "="*60)
        print("–ü–û–ò–°–ö –î–ê–ù–ù–´–• –ï–í–ì–ï–ù–ò–Ø –ö–û–°–ò–¶–ò–ù–ê")
        print("="*60)
        
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –ï–≤–≥–µ–Ω–∏—è
        eugene_data = df[df.astype(str).apply(lambda x: x.str.contains('–ï–≤–≥–µ–Ω–∏–π|–ö–æ—Å–∏—Ü–∏–Ω|–ö–æ—Å–∏—Ü—ã–Ω', case=False, na=False)).any(axis=1)]
        
        if not eugene_data.empty:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(eugene_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ï–≤–≥–µ–Ω–∏—è –ö–æ—Å–∏—Ü–∏–Ω–∞")
            
            for idx, row in eugene_data.iterrows():
                print(f"\nüìã –ó–∞–ø–∏—Å—å #{idx}:")
                for col, value in row.items():
                    if pd.notna(value) and str(value).strip():
                        print(f"   {col}: {value}")
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –¥–ª—è –ï–≤–≥–µ–Ω–∏—è –ö–æ—Å–∏—Ü–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –∏–º–µ–Ω–∞
            print("\nüîç –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –∏–º–µ–Ω...")
            all_text = df.astype(str).values.flatten()
            
            for text in all_text:
                if '–µ–≤–≥' in text.lower() or '–∫–æ—Å–∏—Ü' in text.lower():
                    print(f"   –í–æ–∑–º–æ–∂–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {text}")
        
        # –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        print("\n" + "="*60)
        print("–ê–ù–ê–õ–ò–ó –í–°–ï–• –°–û–¢–†–£–î–ù–ò–ö–û–í")
        print("="*60)
        
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ (—Å—Ç–æ–ª–±–µ—Ü Unnamed: 7)
        salary_data = df[df['Unnamed: 7'].notna() & (df['Unnamed: 7'] > 0)]
        
        if not salary_data.empty:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(salary_data)} –∑–∞–ø–∏—Å–µ–π —Å –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏")
            
            for idx, row in salary_data.iterrows():
                name = row.get('Unnamed: 6', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                position = row.get('Unnamed: 5', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
                salary = row.get('Unnamed: 7', 0)
                
                if name and name != 'nan':
                    print(f"\nüë§ {name}")
                    print(f"   üíº {position}")
                    print(f"   üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞: {salary:,.2f} —Ä—É–±.")
                    print(f"   üìÖ –ì–æ–¥–æ–≤–∞—è: {salary * 12:,.2f} —Ä—É–±.")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_file = f"detailed_salary_report_{timestamp}.txt"
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write("–î–ï–¢–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ü–û –ê–ù–ê–õ–ò–ó–£ –ó–ê–†–ü–õ–ê–¢\n")
            f.write("=" * 60 + "\n\n")
            f.write(f"–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"–§–∞–π–ª: {file_path}\n\n")
            
            # –î–∞–Ω–Ω—ã–µ –ê—Ä—Ç–µ–º–∞
            f.write("–î–ê–ù–ù–´–ï –ê–†–¢–ï–ú–ê –í–ê–°–ò–õ–ï–í–°–ö–û–ì–û:\n")
            f.write("-" * 40 + "\n")
            if not artem_data.empty:
                for idx, row in artem_data.iterrows():
                    f.write(f"–ó–∞–ø–∏—Å—å #{idx}:\n")
                    f.write(f"  –ò–º—è: {row.get('Unnamed: 6', '–ê—Ä—Ç–µ–º')}\n")
                    f.write(f"  –î–æ–ª–∂–Ω–æ—Å—Ç—å: {row.get('Unnamed: 5', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ö–∏—Ç–∞–µ–º')}\n")
                    f.write(f"  –ë–∞–∑–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {row.get('Unnamed: 7', 0):,.2f} —Ä—É–±.\n")
                    f.write(f"  –°–°: {row.get('–°–°', 0):,.2f} —Ä—É–±.\n")
                    f.write(f"  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {row.get('Unnamed: 10', 0):,.2f} —Ä—É–±.\n")
                    f.write(f"  –û–±—â–∞—è –°–°: {row.get('Unnamed: 13', 0):,.2f} —Ä—É–±.\n")
                    f.write(f"  –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {row.get('Unnamed: 22', 0):,.2f} —Ä—É–±.\n")
                    
                    base_salary = row.get('Unnamed: 7', 0)
                    if base_salary > 0:
                        f.write(f"  –ì–æ–¥–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {base_salary * 12:,.2f} —Ä—É–±.\n")
            else:
                f.write("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n")
            
            f.write("\n–î–ê–ù–ù–´–ï –ï–í–ì–ï–ù–ò–Ø –ö–û–°–ò–¶–ò–ù–ê:\n")
            f.write("-" * 40 + "\n")
            if not eugene_data.empty:
                for idx, row in eugene_data.iterrows():
                    f.write(f"–ó–∞–ø–∏—Å—å #{idx}:\n")
                    for col, value in row.items():
                        if pd.notna(value) and str(value).strip():
                            f.write(f"  {col}: {value}\n")
            else:
                f.write("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n")
        
        print(f"\nüìÑ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_file}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∑–∞—Ä–ø–ª–∞—Ç")
    print("=" * 60)
    analyze_detailed_salaries()
    print("\n‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
