#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞
"""
import sys
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from fast_parser import FastParser

def main():
    parser = argparse.ArgumentParser(description='–ë—ã—Å—Ç—Ä—ã–π –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã–π –ø–∞—Ä—Å–µ—Ä OTAPI')
    parser.add_argument('--limit', type=int, default=1000, 
                       help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1000)')
    parser.add_argument('--threads', type=int, default=12, 
                       help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 12)')
    parser.add_argument('--start-from', type=int, default=0, 
                       help='–ù–∞—á–∞—Ç—å —Å –ø–æ–∑–∏—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0)')
    parser.add_argument('--merge-sqlite', action='store_true', 
                       help='–û–±—ä–µ–¥–∏–Ω–∏—Ç—å —á–∞–Ω–∫–∏ –≤ SQLite –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞')
    
    args = parser.parse_args()
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –ø–∞—Ä—Å–µ—Ä OTAPI")
    print(f"   –õ–∏–º–∏—Ç: {args.limit} —Ç–æ–≤–∞—Ä–æ–≤")
    print(f"   –ü–æ—Ç–æ–∫–æ–≤: {args.threads}")
    print(f"   –ù–∞—á–∞—Ç—å —Å: {args.start_from}")
    print(f"   –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ SQLite: {args.merge_sqlite}")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser_instance = FastParser(max_workers=args.threads)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
    success = parser_instance.parse_products_batch(
        limit=args.limit,
        start_from=args.start_from
    )
    
    if success and args.merge_sqlite:
        print("\nüîÑ –û–±—ä–µ–¥–∏–Ω—è–µ–º —á–∞–Ω–∫–∏ –≤ SQLite...")
        parser_instance.merge_chunks_to_sqlite()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")

if __name__ == "__main__":
    main()
