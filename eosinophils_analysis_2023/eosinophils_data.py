#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ —ç–æ–∑–∏–Ω–æ—Ñ–∏–ª–æ–≤ –∑–∞ 2023 –≥–æ–¥
–î–∞–Ω–Ω—ã–µ –∏–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤
"""

import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from datetime import datetime
import numpy as np

# –î–∞–Ω–Ω—ã–µ –æ–± —ç–æ–∑–∏–Ω–æ—Ñ–∏–ª–∞—Ö –∑–∞ 2023 –≥–æ–¥
eosinophils_data = [
    {
        'date': '2023-04-07',
        'eosinophils_percent': None,  # –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç—á–µ—Ç–µ
        'eosinophils_absolute': None,
        'notes': '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± —ç–æ–∑–∏–Ω–æ—Ñ–∏–ª–∞—Ö –≤ –æ—Ç—á–µ—Ç–µ'
    },
    {
        'date': '2023-09-12',
        'eosinophils_percent': 6.7,
        'eosinophils_absolute': None,
        'notes': '–°–µ–∑–æ–Ω–Ω–∞—è –∞–ª–ª–µ—Ä–≥–∏—è - –ø–∏–∫ –ø–æ–ª—ã–Ω–∏/–∞–º–±—Ä–æ–∑–∏–∏'
    },
    {
        'date': '2023-10-27',
        'eosinophils_percent': 10.7,
        'eosinophils_absolute': 0.71,
        'notes': '–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∞–ª–ª–µ—Ä–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–∑–æ–Ω–∞'
    },
    {
        'date': '2023-11-17',
        'eosinophils_percent': 9.7,
        'eosinophils_absolute': None,
        'notes': '–°–Ω–∏–∂–µ–Ω–∏–µ, –Ω–æ –æ—Å—Ç–∞–µ—Ç—Å—è –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º'
    },
    {
        'date': '2023-12-05',
        'eosinophils_percent': 12.1,
        'eosinophils_absolute': None,
        'notes': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞ –ø–µ—Ä–∏–æ–¥'
    },
    {
        'date': '2023-12-20',
        'eosinophils_percent': 6.4,
        'eosinophils_absolute': 0.41,
        'notes': '–†–µ–∑–∫–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ - —Å–Ω–∏–∂–µ–Ω–∏–µ –≤–¥–≤–æ–µ'
    }
]

def create_eosinophils_chart():
    """–°–æ–∑–¥–∞–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏ —ç–æ–∑–∏–Ω–æ—Ñ–∏–ª–æ–≤ –∑–∞ 2023 –≥–æ–¥"""
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    available_data = [d for d in eosinophils_data if d['eosinophils_percent'] is not None]
    
    dates = [datetime.strptime(d['date'], '%Y-%m-%d') for d in available_data]
    values = [d['eosinophils_percent'] for d in available_data]
    notes = [d['notes'] for d in available_data]
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    plt.figure(figsize=(12, 8))
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫
    plt.plot(dates, values, 'o-', linewidth=2, markersize=8, color='#2E86AB', label='–≠–æ–∑–∏–Ω–æ—Ñ–∏–ª—ã %')
    
    # –õ–∏–Ω–∏—è –Ω–æ—Ä–º—ã
    normal_range = [4.4] * len(dates)
    plt.axhline(y=4.4, color='red', linestyle='--', alpha=0.7, label='–í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–æ—Ä–º—ã (4.4%)')
    
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –≤—ã—à–µ –Ω–æ—Ä–º—ã
    plt.fill_between(dates, values, normal_range, where=[v > 4.4 for v in values], 
                    alpha=0.3, color='red', label='–û–±–ª–∞—Å—Ç—å –≤—ã—à–µ –Ω–æ—Ä–º—ã')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–µ–π
    plt.xlabel('–î–∞—Ç–∞', fontsize=12, fontweight='bold')
    plt.ylabel('–≠–æ–∑–∏–Ω–æ—Ñ–∏–ª—ã (%)', fontsize=12, fontweight='bold')
    plt.title('–î–∏–Ω–∞–º–∏–∫–∞ —ç–æ–∑–∏–Ω–æ—Ñ–∏–ª–æ–≤ –∑–∞ 2023 –≥–æ–¥', fontsize=14, fontweight='bold', pad=20)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
    plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d.%m'))
    plt.gca().xaxis.set_major_locator(mdates.MonthLocator())
    plt.gcf().autofmt_xdate()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ —Ç–æ—á–∫–∏
    for i, (date, value) in enumerate(zip(dates, values)):
        plt.annotate(f'{value}%', (date, value), 
                    textcoords="offset points", xytext=(0,10), 
                    ha='center', fontsize=10, fontweight='bold')
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫
    for i, (date, value, note) in enumerate(zip(dates, values, notes)):
        y_offset = 15 if value < 8 else -15
        plt.annotate(note, (date, value), 
                    textcoords="offset points", xytext=(0, y_offset), 
                    ha='center', fontsize=8, alpha=0.8, 
                    bbox=dict(boxstyle="round,pad=0.3", facecolor="yellow", alpha=0.7))
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∫–∏
    plt.grid(True, alpha=0.3)
    plt.legend(loc='upper left')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–µ–ª–æ–≤ –æ—Å–µ–π
    plt.ylim(0, max(values) * 1.2)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats_text = f"""
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 2023 –≥–æ–¥:
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {max(values)}% (05.12.2023)
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {min(values)}% (20.12.2023)
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {np.mean(values):.1f}%
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π: {len(values)}
‚Ä¢ –ù–æ—Ä–º–∞: 0.0-4.4%
    """
    
    plt.figtext(0.02, 0.02, stats_text, fontsize=10, 
                bbox=dict(boxstyle="round,pad=0.5", facecolor="lightblue", alpha=0.8))
    
    plt.tight_layout()
    return plt

def print_summary():
    """–í—ã–≤–æ–¥–∏—Ç —Å–≤–æ–¥–∫—É –ø–æ —ç–æ–∑–∏–Ω–æ—Ñ–∏–ª–∞–º –∑–∞ 2023 –≥–æ–¥"""
    print("=" * 60)
    print("üìä –ê–ù–ê–õ–ò–ó –≠–û–ó–ò–ù–û–§–ò–õ–û–í –ó–ê 2023 –ì–û–î")
    print("=" * 60)
    
    available_data = [d for d in eosinophils_data if d['eosinophils_percent'] is not None]
    
    print(f"\nüìà –î–∏–Ω–∞–º–∏–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π:")
    for data in available_data:
        status = "‚ö†Ô∏è –í–´–®–ï –ù–û–†–ú–´" if data['eosinophils_percent'] > 4.4 else "‚úÖ –ù–û–†–ú–ê"
        print(f"  {data['date']}: {data['eosinophils_percent']}% {status}")
        print(f"    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {data['notes']}")
    
    values = [d['eosinophils_percent'] for d in available_data]
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {max(values)}% (05.12.2023)")
    print(f"  ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {min(values)}% (20.12.2023)")
    print(f"  ‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {np.mean(values):.1f}%")
    print(f"  ‚Ä¢ –ù–æ—Ä–º–∞: 0.0-4.4%")
    
    print(f"\nüéØ –ö–ª—é—á–µ–≤—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è:")
    print(f"  ‚Ä¢ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—à–µ –Ω–æ—Ä–º—ã (4.4%)")
    print(f"  ‚Ä¢ –ü–∏–∫ –≤ –¥–µ–∫–∞–±—Ä–µ (12.1%) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    print(f"  ‚Ä¢ –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ü—É –≥–æ–¥–∞ (6.4%)")
    print(f"  ‚Ä¢ –°–≤—è–∑—å —Å —Å–µ–∑–æ–Ω–Ω–æ–π –∞–ª–ª–µ—Ä–≥–∏–µ–π (–ø–æ–ª—ã–Ω—å, –∞–º–±—Ä–æ–∑–∏—è)")
    
    print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print(f"  ‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∞–ª–ª–µ—Ä–≥–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ")
    print(f"  ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Å–µ–∑–æ–Ω —Ü–≤–µ—Ç–µ–Ω–∏—è –∞–ª–ª–µ—Ä–≥–µ–Ω–æ–≤")
    print(f"  ‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ê–°–ò–¢ (–∞–ª–ª–µ—Ä–≥–µ–Ω-—Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫—É—é –∏–º–º—É–Ω–æ—Ç–µ—Ä–∞–ø–∏—é)")

if __name__ == "__main__":
    # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É
    print_summary()
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    plt = create_eosinophils_chart()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫
    output_file = "eosinophils_2023_chart.png"
    plt.savefig(output_file, dpi=300, bbox_inches='tight')
    print(f"\nüìä –ì—Ä–∞—Ñ–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    plt.show()
